# -*- encoding:utf-8; warn-indent:false; frozen_string_literal: true  -*-

# line 1 "lib/parser/ruby-next/lexer.rl"

# line 3 "lib/parser/ruby-next/lexer.rl"
#
# === BEFORE YOU START ===
#
# Read the Ruby Hacking Guide chapter 11, available in English at
# http://whitequark.org/blog/2013/04/01/ruby-hacking-guide-ch-11-finite-state-lexer/
#
# Remember two things about Ragel scanners:
#
#   1) Longest match wins.
#
#   2) If two matches have the same length, the first
#      in source code wins.
#
# General rules of making Ragel and Bison happy:
#
#  * `p` (position) and `@te` contain the index of the character
#    they're pointing to ("current"), plus one. `@ts` contains the index
#    of the corresponding character. The code for extracting matched token is:
#
#       @source_buffer.slice(@ts...@te)
#
#  * If your input is `foooooooobar` and the rule is:
#
#       'f' 'o'+
#
#    the result will be:
#
#       foooooooobar
#       ^ ts=0   ^ p=te=9
#
#  * A Ragel lexer action should not emit more than one token, unless
#    you know what you are doing.
#
#  * All Ragel commands (fnext, fgoto, ...) end with a semicolon.
#
#  * If an action emits the token and transitions to another state, use
#    these Ragel commands:
#
#       emit($whatever)
#       fnext $next_state; fbreak;
#
#    If you perform `fgoto` in an action which does not emit a token nor
#    rewinds the stream pointer, the parser's side-effectful,
#    context-sensitive lookahead actions will break in a hard to detect
#    and debug way.
#
#  * If an action does not emit a token:
#
#       fgoto $next_state;
#
#  * If an action features lookbehind, i.e. matches characters with the
#    intent of passing them to another action:
#
#       p = @ts - 1
#       fgoto $next_state;
#
#    or, if the lookbehind consists of a single character:
#
#       fhold; fgoto $next_state;
#
#  * Ragel merges actions. So, if you have `e_lparen = '(' %act` and
#    `c_lparen = '('` and a lexer action `e_lparen | c_lparen`, the result
#    _will_ invoke the action `act`.
#
#    e_something stands for "something with **e**mbedded action".
#
#  * EOF is explicit and is matched by `c_eof`. If you want to introspect
#    the state of the lexer, add this rule to the state:
#
#       c_eof => do_eof;
#
#  * If you proceed past EOF, the lexer will complain:
#
#       NoMethodError: undefined method `ord' for nil:NilClass
#

class Parser::Lexer
class Next

  
# line 86 "lib/parser/ruby-next/lexer-F0.rb"
class << self
	attr_accessor :_lex_actions
	private :_lex_actions, :_lex_actions=
end
self._lex_actions = [
	0, 1, 0, 1, 16, 1, 17, 1, 
	18, 1, 19, 1, 32, 1, 33, 1, 
	34, 1, 35, 1, 37, 1, 38, 1, 
	39, 1, 40, 1, 41, 1, 42, 1, 
	43, 1, 44, 1, 45, 1, 46, 1, 
	47, 1, 48, 1, 49, 1, 50, 1, 
	51, 1, 52, 1, 53, 1, 54, 1, 
	55, 1, 56, 1, 57, 1, 61, 1, 
	62, 1, 63, 1, 64, 1, 65, 1, 
	66, 1, 67, 1, 68, 1, 69, 1, 
	70, 1, 71, 1, 72, 1, 73, 1, 
	74, 1, 75, 1, 76, 1, 77, 1, 
	78, 1, 79, 1, 80, 1, 81, 1, 
	82, 1, 83, 1, 84, 1, 85, 1, 
	86, 1, 87, 1, 88, 1, 89, 1, 
	90, 1, 91, 1, 93, 1, 94, 1, 
	95, 1, 100, 1, 101, 1, 102, 1, 
	103, 1, 104, 1, 105, 1, 106, 1, 
	107, 1, 112, 1, 113, 1, 114, 1, 
	115, 1, 116, 1, 119, 1, 120, 1, 
	121, 1, 122, 1, 125, 1, 126, 1, 
	128, 1, 129, 1, 130, 1, 131, 1, 
	132, 1, 133, 1, 135, 1, 136, 1, 
	139, 1, 140, 1, 141, 1, 142, 1, 
	144, 1, 145, 1, 155, 1, 156, 1, 
	157, 1, 158, 1, 159, 1, 160, 1, 
	161, 1, 162, 1, 163, 1, 164, 1, 
	165, 1, 166, 1, 168, 1, 169, 1, 
	170, 1, 171, 1, 172, 1, 173, 1, 
	174, 1, 176, 1, 178, 1, 179, 1, 
	180, 1, 184, 1, 186, 1, 187, 1, 
	189, 1, 190, 1, 191, 1, 192, 1, 
	193, 1, 194, 1, 195, 1, 196, 1, 
	197, 1, 198, 1, 199, 1, 200, 1, 
	201, 1, 203, 1, 204, 1, 205, 1, 
	206, 1, 207, 1, 208, 1, 210, 1, 
	211, 1, 232, 1, 233, 1, 234, 1, 
	235, 1, 236, 1, 237, 1, 238, 1, 
	239, 1, 240, 1, 242, 1, 243, 1, 
	244, 1, 245, 1, 246, 1, 248, 1, 
	249, 1, 250, 1, 252, 1, 254, 1, 
	256, 1, 258, 1, 259, 1, 261, 1, 
	262, 1, 263, 1, 266, 1, 267, 1, 
	269, 1, 270, 1, 271, 1, 272, 1, 
	273, 1, 274, 1, 277, 1, 278, 1, 
	279, 1, 280, 1, 281, 1, 282, 1, 
	283, 1, 284, 1, 285, 1, 286, 1, 
	289, 1, 290, 1, 291, 1, 292, 1, 
	293, 1, 294, 1, 295, 1, 296, 1, 
	297, 1, 298, 1, 299, 2, 0, 18, 
	2, 0, 100, 2, 0, 104, 2, 0, 
	105, 2, 0, 167, 2, 0, 169, 2, 
	0, 241, 2, 0, 287, 2, 0, 288, 
	2, 0, 291, 2, 0, 292, 2, 2, 
	251, 2, 3, 251, 2, 4, 251, 2, 
	5, 251, 2, 6, 251, 2, 7, 251, 
	2, 9, 253, 2, 10, 253, 2, 11, 
	253, 2, 12, 253, 2, 13, 253, 2, 
	14, 111, 2, 14, 134, 2, 14, 181, 
	2, 14, 247, 2, 15, 264, 2, 16, 
	0, 2, 16, 32, 2, 16, 33, 2, 
	16, 34, 2, 16, 75, 2, 16, 84, 
	2, 16, 94, 2, 16, 105, 2, 16, 
	116, 2, 16, 118, 2, 16, 135, 2, 
	16, 142, 2, 16, 143, 2, 16, 155, 
	2, 16, 168, 2, 16, 190, 2, 16, 
	201, 2, 16, 202, 2, 16, 208, 2, 
	16, 209, 2, 16, 257, 2, 16, 267, 
	2, 16, 268, 2, 16, 295, 2, 17, 
	18, 2, 18, 0, 2, 18, 75, 2, 
	18, 84, 2, 18, 94, 2, 18, 117, 
	2, 18, 135, 2, 18, 142, 2, 18, 
	190, 2, 18, 201, 2, 18, 208, 2, 
	18, 267, 2, 18, 295, 2, 19, 92, 
	2, 19, 177, 2, 19, 188, 2, 19, 
	274, 2, 20, 92, 2, 20, 177, 2, 
	20, 188, 2, 20, 260, 2, 21, 177, 
	2, 21, 188, 2, 22, 177, 2, 22, 
	188, 2, 23, 177, 2, 23, 188, 2, 
	24, 177, 2, 24, 198, 2, 25, 177, 
	2, 25, 188, 2, 26, 177, 2, 27, 
	255, 2, 28, 110, 2, 28, 182, 2, 
	28, 265, 2, 29, 264, 2, 30, 108, 
	2, 30, 109, 2, 30, 127, 2, 30, 
	183, 2, 30, 263, 2, 31, 264, 2, 
	35, 0, 2, 36, 175, 2, 37, 179, 
	2, 38, 179, 2, 39, 185, 2, 41, 
	47, 2, 42, 47, 2, 43, 47, 2, 
	44, 47, 2, 45, 47, 2, 46, 47, 
	2, 47, 1, 2, 53, 0, 2, 53, 
	49, 2, 53, 58, 2, 53, 59, 2, 
	53, 60, 2, 53, 96, 2, 53, 97, 
	2, 53, 98, 2, 53, 99, 2, 53, 
	123, 2, 53, 124, 2, 53, 137, 2, 
	53, 138, 2, 53, 147, 2, 53, 148, 
	2, 53, 149, 2, 53, 150, 2, 53, 
	151, 2, 53, 152, 2, 53, 153, 2, 
	53, 154, 2, 53, 212, 2, 53, 213, 
	2, 53, 215, 2, 53, 216, 2, 53, 
	217, 2, 53, 218, 2, 53, 219, 2, 
	53, 220, 2, 53, 221, 2, 53, 223, 
	2, 53, 224, 2, 53, 225, 2, 53, 
	226, 2, 53, 227, 2, 53, 228, 2, 
	53, 229, 2, 53, 230, 2, 53, 231, 
	2, 53, 275, 2, 53, 276, 3, 17, 
	18, 0, 3, 17, 18, 75, 3, 17, 
	18, 84, 3, 17, 18, 94, 3, 17, 
	18, 117, 3, 17, 18, 135, 3, 17, 
	18, 142, 3, 17, 18, 190, 3, 17, 
	18, 201, 3, 17, 18, 208, 3, 17, 
	18, 267, 3, 17, 18, 295, 3, 45, 
	47, 1, 3, 46, 47, 1, 3, 47, 
	1, 251, 3, 48, 8, 253, 3, 49, 
	8, 253, 3, 53, 0, 99, 3, 53, 
	0, 226, 3, 53, 16, 98, 3, 53, 
	16, 124, 3, 53, 16, 226, 3, 53, 
	16, 275, 3, 53, 18, 146, 3, 53, 
	18, 214, 3, 53, 18, 275, 3, 53, 
	33, 97, 3, 53, 39, 152, 3, 53, 
	39, 153, 3, 53, 45, 221, 4, 41, 
	47, 1, 251, 4, 42, 47, 1, 251, 
	4, 43, 47, 1, 251, 4, 44, 47, 
	1, 251, 4, 45, 47, 1, 251, 4, 
	46, 47, 1, 251, 4, 53, 16, 33, 
	97, 4, 53, 17, 18, 146, 4, 53, 
	17, 18, 275, 4, 53, 47, 1, 222, 
	5, 53, 45, 47, 1, 222, 5, 53, 
	46, 47, 1, 222
]

class << self
	attr_accessor :_lex_trans_keys
	private :_lex_trans_keys, :_lex_trans_keys=
end
self._lex_trans_keys = [
	0, 0, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 46, 46, 
	58, 58, 58, 58, 0, 127, 
	60, 60, 62, 62, 0, 
	127, 58, 58, 10, 10, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 115, 115, 
	99, 99, 117, 117, 101, 
	101, 108, 116, 101, 101, 
	115, 115, 115, 115, 105, 105, 
	108, 108, 105, 105, 108, 
	108, 0, 127, 58, 58, 
	10, 10, 0, 127, 98, 98, 
	101, 101, 103, 103, 105, 
	105, 110, 110, 0, 127, 
	61, 61, 9, 92, 9, 92, 
	9, 92, 9, 92, 9, 
	92, 10, 10, 0, 127, 
	0, 127, 61, 126, 93, 93, 
	0, 127, 34, 34, 10, 
	10, 10, 10, 39, 39, 
	0, 127, 0, 127, 10, 96, 
	96, 96, 58, 58, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 9, 92, 
	10, 10, 9, 92, 58, 
	58, 58, 58, 0, 127, 
	0, 127, 43, 57, 48, 57, 
	48, 57, 10, 10, 48, 
	57, 48, 57, 115, 115, 
	99, 99, 117, 117, 101, 101, 
	99, 99, 117, 117, 101, 
	101, 0, 127, 58, 58, 
	9, 92, 9, 92, 9, 92, 
	9, 92, 9, 92, 9, 
	92, 60, 60, 10, 10, 
	9, 92, 9, 92, 10, 10, 
	10, 10, 10, 10, 10, 
	10, 46, 46, 101, 101, 
	103, 103, 105, 105, 110, 110, 
	69, 69, 78, 78, 68, 
	68, 95, 95, 95, 95, 
	0, 26, 0, 0, 36, 64, 
	48, 57, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	9, 32, 0, 0, 61, 126, 
	10, 10, 10, 10, 0, 
	127, 48, 57, 0, 127, 
	115, 115, 38, 38, 42, 42, 
	64, 64, 58, 58, 60, 
	61, 62, 62, 61, 126, 
	61, 61, 61, 62, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 93, 93, 10, 10, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 124, 124, 
	0, 127, 9, 32, 10, 10, 
	10, 10, 46, 46, 0, 
	127, 10, 10, 0, 0, 
	0, 127, 9, 32, 0, 0, 
	61, 126, 10, 10, 10, 
	10, 38, 38, 42, 42, 
	64, 64, 60, 61, 62, 62, 
	61, 126, 61, 61, 61, 
	62, 0, 127, 61, 61, 
	0, 0, 93, 93, 10, 10, 
	0, 127, 124, 124, 0, 
	126, 0, 127, 0, 61, 
	9, 61, 9, 61, 0, 0, 
	9, 61, 9, 62, 46, 
	46, 46, 46, 58, 58, 
	9, 32, 0, 0, 0, 127, 
	0, 0, 9, 124, 0, 
	0, 10, 10, 10, 10, 
	0, 0, 9, 61, 58, 58, 
	60, 60, 62, 62, 9, 
	32, 10, 10, 0, 127, 
	102, 102, 101, 101, 110, 110, 
	104, 104, 0, 127, 0, 
	127, 0, 0, 0, 127, 
	0, 127, 10, 10, 0, 123, 
	9, 32, 10, 10, 10, 
	10, 10, 10, 0, 0, 
	111, 111, 0, 0, 0, 127, 
	9, 32, 0, 0, 10, 
	10, 10, 10, 0, 127, 
	10, 10, 0, 0, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	9, 32, 61, 61, 9, 
	32, 61, 126, 10, 10, 
	10, 10, 0, 127, 38, 61, 
	0, 0, 42, 61, 61, 
	61, 9, 92, 9, 92, 
	9, 92, 46, 46, 46, 46, 
	10, 10, 0, 26, 0, 
	127, 61, 126, 48, 57, 
	0, 127, 38, 38, 42, 42, 
	64, 64, 60, 61, 62, 
	62, 61, 61, 61, 62, 
	0, 127, 48, 57, 0, 127, 
	0, 127, 61, 61, 0, 
	0, 61, 126, 61, 62, 
	0, 0, 0, 0, 0, 0, 
	0, 0, 124, 124, 64, 
	64, 60, 61, 10, 34, 
	0, 0, 10, 39, 96, 96, 
	62, 62, 61, 126, 61, 
	62, 0, 26, 0, 127, 
	58, 61, 0, 0, 61, 126, 
	61, 61, 0, 0, 0, 
	0, 0, 0, 0, 127, 
	0, 127, 0, 0, 10, 10, 
	0, 0, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 61, 126, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 0, 61, 
	124, 0, 92, 9, 32, 
	0, 0, 10, 10, 10, 10, 
	10, 10, 0, 0, 0, 
	127, 9, 32, 0, 0, 
	10, 10, 10, 10, 0, 127, 
	10, 10, 0, 0, 0, 
	127, 9, 32, 0, 0, 
	61, 126, 10, 10, 10, 10, 
	0, 127, 48, 57, 0, 
	127, 61, 61, 38, 61, 
	0, 0, 0, 0, 42, 61, 
	61, 62, 46, 58, 46, 
	46, 10, 10, 48, 101, 
	48, 95, 9, 92, 9, 92, 
	46, 120, 48, 114, 43, 
	57, 48, 105, 102, 102, 
	0, 0, 101, 105, 0, 0, 
	0, 0, 48, 114, 48, 
	114, 48, 114, 48, 114, 
	105, 114, 102, 102, 0, 0, 
	101, 105, 115, 115, 0, 
	0, 0, 0, 48, 114, 
	48, 114, 48, 114, 48, 114, 
	48, 114, 48, 114, 48, 
	114, 48, 114, 46, 114, 
	48, 114, 46, 114, 48, 114, 
	58, 58, 60, 61, 62, 
	62, 61, 126, 61, 61, 
	61, 62, 0, 127, 0, 127, 
	61, 61, 0, 0, 0, 
	0, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 0, 10, 
	10, 0, 0, 0, 0, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 9, 92, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 127, 
	0, 127, 0, 127, 0, 
	127, 0, 127, 0, 127, 
	0, 0, 61, 124, 0, 0, 
	9, 92, 9, 92, 9, 
	92, 46, 46, 46, 46, 
	10, 10, 46, 46, 10, 10, 
	10, 61, 10, 10, 10, 
	101, 10, 110, 10, 100, 
	10, 10, 0, 95, 9, 32, 
	0, 0, 10, 10, 10, 
	10, 98, 98, 9, 32, 
	10, 10, 95, 95, 0
]

class << self
	attr_accessor :_lex_key_spans
	private :_lex_key_spans, :_lex_key_spans=
end
self._lex_key_spans = [
	0, 128, 128, 128, 128, 128, 128, 1, 
	1, 1, 128, 1, 1, 128, 1, 1, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 1, 1, 1, 1, 9, 1, 
	1, 1, 1, 1, 1, 1, 128, 1, 
	1, 128, 1, 1, 1, 1, 1, 128, 
	1, 84, 84, 84, 84, 84, 1, 128, 
	128, 66, 1, 128, 1, 1, 1, 1, 
	128, 128, 87, 1, 1, 128, 128, 128, 
	128, 128, 84, 1, 84, 1, 1, 128, 
	128, 15, 10, 10, 1, 10, 10, 1, 
	1, 1, 1, 1, 1, 1, 128, 1, 
	84, 84, 84, 84, 84, 84, 1, 1, 
	84, 84, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	27, 0, 29, 10, 128, 128, 128, 128, 
	24, 0, 66, 1, 1, 128, 10, 128, 
	1, 1, 1, 1, 1, 2, 1, 66, 
	1, 2, 128, 128, 128, 128, 128, 128, 
	128, 1, 1, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 1, 
	128, 24, 1, 1, 1, 128, 1, 0, 
	128, 24, 0, 66, 1, 1, 1, 1, 
	1, 2, 1, 66, 1, 2, 128, 1, 
	0, 1, 1, 128, 1, 127, 128, 62, 
	53, 53, 0, 53, 54, 1, 1, 1, 
	24, 0, 128, 0, 116, 0, 1, 1, 
	0, 53, 1, 1, 1, 24, 1, 128, 
	1, 1, 1, 1, 128, 128, 0, 128, 
	128, 1, 124, 24, 1, 1, 1, 0, 
	1, 0, 128, 24, 0, 1, 1, 128, 
	1, 0, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 24, 1, 24, 66, 1, 
	1, 128, 24, 0, 20, 1, 84, 84, 
	84, 1, 1, 1, 27, 128, 66, 10, 
	128, 1, 1, 1, 2, 1, 1, 2, 
	128, 10, 128, 128, 1, 0, 66, 2, 
	0, 0, 0, 0, 1, 1, 2, 25, 
	0, 30, 1, 1, 66, 2, 27, 128, 
	4, 0, 66, 1, 0, 0, 0, 128, 
	128, 0, 1, 0, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 66, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 0, 64, 93, 24, 
	0, 1, 1, 1, 0, 128, 24, 0, 
	1, 1, 128, 1, 0, 128, 24, 0, 
	66, 1, 1, 128, 10, 128, 1, 24, 
	0, 0, 20, 2, 13, 1, 1, 54, 
	48, 84, 84, 75, 67, 15, 58, 1, 
	0, 5, 0, 0, 67, 67, 67, 67, 
	10, 1, 0, 5, 1, 0, 0, 67, 
	67, 67, 67, 67, 67, 67, 67, 69, 
	67, 69, 67, 1, 2, 1, 66, 1, 
	2, 128, 128, 1, 0, 0, 128, 128, 
	128, 128, 128, 128, 0, 1, 0, 0, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 84, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	128, 128, 128, 128, 128, 128, 128, 128, 
	0, 64, 0, 84, 84, 84, 1, 1, 
	1, 1, 1, 52, 1, 92, 101, 91, 
	1, 96, 24, 0, 1, 1, 1, 24, 
	1, 1
]

class << self
	attr_accessor :_lex_index_offsets
	private :_lex_index_offsets, :_lex_index_offsets=
end
self._lex_index_offsets = [
	0, 0, 129, 258, 387, 516, 645, 774, 
	776, 778, 780, 909, 911, 913, 1042, 1044, 
	1046, 1175, 1304, 1433, 1562, 1691, 1820, 1949, 
	2078, 2207, 2336, 2465, 2594, 2723, 2852, 2981, 
	3110, 3239, 3368, 3370, 3372, 3374, 3376, 3386, 
	3388, 3390, 3392, 3394, 3396, 3398, 3400, 3529, 
	3531, 3533, 3662, 3664, 3666, 3668, 3670, 3672, 
	3801, 3803, 3888, 3973, 4058, 4143, 4228, 4230, 
	4359, 4488, 4555, 4557, 4686, 4688, 4690, 4692, 
	4694, 4823, 4952, 5040, 5042, 5044, 5173, 5302, 
	5431, 5560, 5689, 5774, 5776, 5861, 5863, 5865, 
	5994, 6123, 6139, 6150, 6161, 6163, 6174, 6185, 
	6187, 6189, 6191, 6193, 6195, 6197, 6199, 6328, 
	6330, 6415, 6500, 6585, 6670, 6755, 6840, 6842, 
	6844, 6929, 7014, 7016, 7018, 7020, 7022, 7024, 
	7026, 7028, 7030, 7032, 7034, 7036, 7038, 7040, 
	7042, 7070, 7071, 7101, 7112, 7241, 7370, 7499, 
	7628, 7653, 7654, 7721, 7723, 7725, 7854, 7865, 
	7994, 7996, 7998, 8000, 8002, 8004, 8007, 8009, 
	8076, 8078, 8081, 8210, 8339, 8468, 8597, 8726, 
	8855, 8984, 8986, 8988, 9117, 9246, 9375, 9504, 
	9633, 9762, 9891, 10020, 10149, 10278, 10407, 10536, 
	10665, 10794, 10923, 11052, 11181, 11310, 11439, 11568, 
	11697, 11826, 11955, 12084, 12213, 12342, 12471, 12600, 
	12729, 12858, 12987, 13116, 13245, 13374, 13503, 13632, 
	13761, 13890, 14019, 14148, 14277, 14406, 14535, 14664, 
	14793, 14922, 15051, 15180, 15309, 15438, 15567, 15696, 
	15825, 15954, 16083, 16212, 16341, 16470, 16599, 16728, 
	16857, 16986, 17115, 17244, 17373, 17502, 17631, 17760, 
	17889, 18018, 18147, 18276, 18405, 18534, 18663, 18792, 
	18921, 19050, 19179, 19308, 19437, 19566, 19695, 19824, 
	19826, 19955, 19980, 19982, 19984, 19986, 20115, 20117, 
	20118, 20247, 20272, 20273, 20340, 20342, 20344, 20346, 
	20348, 20350, 20353, 20355, 20422, 20424, 20427, 20556, 
	20558, 20559, 20561, 20563, 20692, 20694, 20822, 20951, 
	21014, 21068, 21122, 21123, 21177, 21232, 21234, 21236, 
	21238, 21263, 21264, 21393, 21394, 21511, 21512, 21514, 
	21516, 21517, 21571, 21573, 21575, 21577, 21602, 21604, 
	21733, 21735, 21737, 21739, 21741, 21870, 21999, 22000, 
	22129, 22258, 22260, 22385, 22410, 22412, 22414, 22416, 
	22417, 22419, 22420, 22549, 22574, 22575, 22577, 22579, 
	22708, 22710, 22711, 22840, 22969, 23098, 23227, 23356, 
	23485, 23614, 23743, 23872, 24001, 24130, 24259, 24388, 
	24517, 24646, 24775, 24904, 24929, 24931, 24956, 25023, 
	25025, 25027, 25156, 25181, 25182, 25203, 25205, 25290, 
	25375, 25460, 25462, 25464, 25466, 25494, 25623, 25690, 
	25701, 25830, 25832, 25834, 25836, 25839, 25841, 25843, 
	25846, 25975, 25986, 26115, 26244, 26246, 26247, 26314, 
	26317, 26318, 26319, 26320, 26321, 26323, 26325, 26328, 
	26354, 26355, 26386, 26388, 26390, 26457, 26460, 26488, 
	26617, 26622, 26623, 26690, 26692, 26693, 26694, 26695, 
	26824, 26953, 26954, 26956, 26957, 27086, 27215, 27344, 
	27473, 27602, 27731, 27860, 27989, 28118, 28247, 28376, 
	28505, 28634, 28763, 28892, 29021, 29150, 29279, 29408, 
	29537, 29666, 29795, 29924, 30053, 30182, 30311, 30440, 
	30569, 30698, 30827, 30956, 31085, 31214, 31343, 31472, 
	31601, 31730, 31859, 31988, 32117, 32246, 32375, 32504, 
	32633, 32762, 32891, 33020, 33149, 33278, 33407, 33536, 
	33665, 33794, 33923, 34052, 34181, 34310, 34439, 34568, 
	34697, 34826, 34955, 35022, 35151, 35280, 35409, 35538, 
	35667, 35796, 35925, 36054, 36183, 36312, 36441, 36570, 
	36699, 36828, 36957, 37086, 37215, 37344, 37473, 37602, 
	37731, 37860, 37989, 38118, 38247, 38248, 38313, 38407, 
	38432, 38433, 38435, 38437, 38439, 38440, 38569, 38594, 
	38595, 38597, 38599, 38728, 38730, 38731, 38860, 38885, 
	38886, 38953, 38955, 38957, 39086, 39097, 39226, 39228, 
	39253, 39254, 39255, 39276, 39279, 39293, 39295, 39297, 
	39352, 39401, 39486, 39571, 39647, 39715, 39731, 39790, 
	39792, 39793, 39799, 39800, 39801, 39869, 39937, 40005, 
	40073, 40084, 40086, 40087, 40093, 40095, 40096, 40097, 
	40165, 40233, 40301, 40369, 40437, 40505, 40573, 40641, 
	40711, 40779, 40849, 40917, 40919, 40922, 40924, 40991, 
	40993, 40996, 41125, 41254, 41256, 41257, 41258, 41387, 
	41516, 41645, 41774, 41903, 42032, 42033, 42035, 42036, 
	42037, 42166, 42295, 42424, 42553, 42682, 42811, 42940, 
	43069, 43198, 43327, 43456, 43585, 43714, 43843, 43972, 
	44101, 44230, 44359, 44488, 44617, 44746, 44875, 45004, 
	45133, 45262, 45391, 45520, 45649, 45778, 45907, 46036, 
	46165, 46294, 46423, 46552, 46681, 46810, 46939, 47024, 
	47153, 47282, 47411, 47540, 47669, 47798, 47927, 48056, 
	48185, 48314, 48443, 48572, 48701, 48830, 48959, 49088, 
	49217, 49346, 49475, 49604, 49733, 49862, 49991, 50120, 
	50249, 50378, 50507, 50636, 50765, 50894, 51023, 51152, 
	51281, 51410, 51539, 51668, 51797, 51926, 52055, 52184, 
	52313, 52442, 52571, 52700, 52829, 52958, 53087, 53216, 
	53345, 53474, 53603, 53732, 53861, 53990, 54119, 54248, 
	54377, 54506, 54635, 54764, 54893, 55022, 55151, 55280, 
	55409, 55410, 55475, 55476, 55561, 55646, 55731, 55733, 
	55735, 55737, 55739, 55741, 55794, 55796, 55889, 55991, 
	56083, 56085, 56182, 56207, 56208, 56210, 56212, 56214, 
	56239, 56241
]

class << self
	attr_accessor :_lex_indicies
	private :_lex_indicies, :_lex_indicies=
end
self._lex_indicies = [
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 0, 0, 1, 0, 1, 0, 0, 
	1, 1, 0, 0, 0, 2, 0, 0, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 0, 0, 0, 0, 0, 0, 
	0, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 1, 0, 1, 1, 4, 
	0, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 1, 1, 1, 0, 1, 
	4, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 1, 1, 1, 
	1, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 1, 1, 
	0, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 1, 1, 
	1, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 1, 1, 1, 1, 
	1, 1, 6, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 1, 1, 1, 
	1, 5, 1, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 1, 1, 1, 
	1, 1, 5, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 1, 1, 1, 
	1, 1, 1, 1, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 1, 1, 
	1, 1, 7, 1, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 1, 1, 
	1, 1, 1, 7, 8, 8, 8, 8, 
	8, 8, 8, 8, 8, 8, 8, 8, 
	8, 8, 8, 8, 8, 8, 8, 8, 
	8, 8, 8, 8, 8, 8, 8, 8, 
	8, 8, 8, 8, 8, 8, 8, 8, 
	8, 8, 8, 8, 8, 8, 8, 8, 
	8, 8, 8, 8, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 8, 8, 
	8, 8, 8, 8, 8, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 8, 
	8, 8, 8, 9, 8, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 8, 
	8, 8, 8, 8, 9, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 11, 
	11, 11, 11, 11, 11, 11, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	11, 11, 11, 11, 11, 11, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	10, 10, 10, 10, 10, 10, 10, 10, 
	11, 11, 11, 11, 11, 10, 13, 12, 
	14, 12, 12, 15, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 16, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 17, 17, 17, 17, 
	17, 17, 17, 17, 17, 17, 14, 12, 
	12, 12, 12, 16, 12, 17, 17, 17, 
	17, 17, 17, 17, 17, 17, 17, 17, 
	17, 17, 17, 17, 17, 17, 17, 17, 
	17, 17, 17, 17, 17, 17, 17, 12, 
	12, 12, 12, 17, 12, 17, 17, 17, 
	17, 17, 17, 17, 17, 17, 17, 17, 
	17, 17, 17, 17, 17, 17, 17, 17, 
	17, 17, 17, 17, 17, 17, 17, 12, 
	12, 12, 12, 12, 17, 19, 18, 20, 
	18, 21, 21, 21, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 21, 21, 21, 
	21, 21, 22, 21, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 21, 21, 21, 
	21, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 24, 21, 21, 21, 21, 
	22, 21, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 21, 21, 21, 21, 
	23, 21, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 21, 21, 21, 21, 
	21, 23, 24, 21, 25, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 26, 
	18, 26, 26, 26, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 26, 18, 
	18, 18, 18, 27, 28, 18, 29, 18, 
	30, 31, 32, 33, 34, 27, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	35, 18, 36, 32, 37, 38, 18, 39, 
	39, 39, 39, 39, 39, 39, 39, 39, 
	39, 39, 39, 39, 39, 39, 39, 39, 
	39, 39, 39, 39, 39, 39, 39, 39, 
	39, 40, 41, 32, 42, 39, 18, 39, 
	39, 39, 39, 39, 39, 39, 39, 43, 
	39, 39, 39, 39, 39, 39, 39, 39, 
	44, 39, 39, 45, 39, 46, 39, 39, 
	39, 47, 48, 18, 42, 18, 39, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	49, 18, 49, 49, 49, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 49, 
	18, 18, 18, 18, 50, 51, 18, 52, 
	18, 53, 54, 55, 56, 57, 50, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 58, 18, 59, 55, 60, 61, 18, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 62, 63, 55, 20, 23, 18, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	64, 23, 23, 23, 23, 23, 23, 23, 
	23, 65, 23, 23, 66, 23, 67, 23, 
	23, 23, 68, 69, 18, 20, 18, 23, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 22, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 24, 18, 18, 18, 18, 22, 
	18, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 18, 18, 18, 18, 23, 
	18, 23, 23, 23, 23, 23, 70, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 18, 18, 18, 18, 18, 
	23, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 22, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 24, 18, 18, 18, 18, 
	22, 18, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 18, 18, 18, 18, 
	23, 18, 23, 23, 23, 23, 71, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 18, 18, 18, 18, 
	18, 23, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 22, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 24, 18, 18, 18, 
	18, 22, 18, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 18, 18, 18, 
	18, 23, 18, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 72, 23, 23, 
	23, 23, 23, 23, 23, 18, 18, 18, 
	18, 18, 23, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 22, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 24, 18, 18, 
	18, 18, 22, 18, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 18, 18, 
	18, 18, 23, 18, 23, 23, 73, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 18, 18, 
	18, 18, 18, 23, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 22, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 24, 18, 
	18, 18, 18, 22, 18, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 18, 
	18, 18, 18, 23, 18, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 74, 23, 23, 23, 23, 23, 18, 
	18, 18, 18, 18, 23, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 22, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 24, 
	18, 18, 18, 18, 22, 18, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	18, 18, 18, 18, 23, 18, 23, 23, 
	23, 23, 70, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	18, 18, 18, 18, 18, 23, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 22, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	24, 18, 18, 18, 18, 22, 18, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 18, 18, 18, 18, 23, 18, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 75, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 18, 18, 18, 18, 18, 23, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	22, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 24, 18, 18, 18, 18, 22, 18, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 18, 18, 18, 18, 23, 18, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 76, 23, 23, 23, 23, 
	23, 23, 23, 77, 23, 23, 23, 23, 
	23, 23, 18, 18, 18, 18, 18, 23, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 22, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 24, 18, 18, 18, 18, 22, 
	18, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 18, 18, 18, 18, 23, 
	18, 23, 23, 23, 23, 78, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 18, 18, 18, 18, 18, 
	23, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 22, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 24, 18, 18, 18, 18, 
	22, 18, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 18, 18, 18, 18, 
	23, 18, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 79, 23, 23, 23, 
	23, 23, 23, 23, 18, 18, 18, 18, 
	18, 23, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 22, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 24, 18, 18, 18, 
	18, 22, 18, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 18, 18, 18, 
	18, 23, 18, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 70, 23, 23, 
	23, 23, 23, 23, 23, 18, 18, 18, 
	18, 18, 23, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 22, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 24, 18, 18, 
	18, 18, 22, 18, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 18, 18, 
	18, 18, 23, 18, 23, 23, 23, 23, 
	23, 23, 23, 23, 80, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 18, 18, 
	18, 18, 18, 23, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 22, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 24, 18, 
	18, 18, 18, 22, 18, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 18, 
	18, 18, 18, 23, 18, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	70, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 18, 
	18, 18, 18, 18, 23, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 22, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 24, 
	18, 18, 18, 18, 22, 18, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	18, 18, 18, 18, 23, 18, 23, 23, 
	23, 23, 23, 23, 23, 81, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	18, 18, 18, 18, 18, 23, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 22, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	24, 18, 18, 18, 18, 22, 18, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 18, 18, 18, 18, 23, 18, 23, 
	23, 23, 23, 23, 23, 23, 23, 82, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 18, 18, 18, 18, 18, 23, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	22, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 24, 18, 18, 18, 18, 22, 18, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 18, 18, 18, 18, 23, 18, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 74, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 18, 18, 18, 18, 18, 23, 
	84, 83, 85, 83, 86, 83, 55, 83, 
	87, 83, 83, 83, 83, 83, 83, 83, 
	88, 83, 89, 83, 90, 83, 55, 83, 
	91, 83, 55, 83, 92, 83, 86, 83, 
	93, 93, 93, 93, 93, 93, 93, 93, 
	93, 94, 93, 94, 94, 94, 93, 93, 
	93, 93, 93, 93, 93, 93, 93, 93, 
	93, 93, 93, 93, 93, 93, 93, 93, 
	94, 93, 93, 93, 93, 93, 93, 93, 
	95, 93, 93, 93, 93, 93, 93, 93, 
	93, 93, 93, 93, 93, 93, 93, 93, 
	93, 93, 93, 93, 93, 93, 93, 93, 
	93, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 93, 97, 93, 93, 96, 
	93, 96, 96, 96, 98, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 93, 93, 93, 93, 93, 
	96, 100, 99, 101, 93, 93, 93, 93, 
	93, 93, 93, 93, 93, 93, 102, 93, 
	102, 102, 102, 93, 93, 93, 93, 93, 
	93, 93, 93, 93, 93, 93, 93, 93, 
	93, 93, 93, 93, 93, 102, 93, 93, 
	93, 93, 93, 93, 93, 103, 93, 93, 
	93, 93, 93, 93, 93, 93, 93, 93, 
	93, 93, 93, 93, 93, 93, 93, 93, 
	93, 93, 93, 93, 93, 93, 104, 104, 
	104, 104, 104, 104, 104, 104, 104, 104, 
	104, 104, 104, 104, 104, 104, 104, 104, 
	104, 104, 104, 104, 104, 104, 104, 104, 
	93, 105, 93, 93, 104, 93, 104, 104, 
	104, 106, 104, 104, 104, 104, 104, 104, 
	104, 104, 104, 104, 104, 104, 104, 104, 
	104, 104, 104, 104, 104, 104, 104, 104, 
	93, 93, 93, 93, 93, 104, 108, 107, 
	109, 107, 110, 107, 111, 107, 112, 107, 
	114, 114, 114, 114, 114, 114, 114, 114, 
	114, 114, 114, 114, 114, 114, 114, 114, 
	114, 114, 114, 114, 114, 114, 114, 114, 
	114, 114, 114, 114, 114, 114, 114, 114, 
	114, 114, 114, 114, 114, 114, 114, 114, 
	114, 114, 114, 114, 114, 114, 114, 114, 
	113, 113, 113, 113, 113, 113, 113, 113, 
	113, 113, 114, 114, 114, 114, 114, 114, 
	114, 113, 113, 113, 113, 113, 113, 113, 
	113, 113, 113, 113, 113, 113, 113, 113, 
	113, 113, 113, 113, 113, 113, 113, 113, 
	113, 113, 113, 114, 114, 114, 114, 114, 
	114, 113, 113, 113, 113, 113, 113, 113, 
	113, 113, 113, 113, 113, 113, 113, 113, 
	113, 113, 113, 113, 113, 113, 113, 113, 
	113, 113, 113, 114, 114, 114, 114, 114, 
	113, 116, 115, 117, 118, 117, 117, 117, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 117, 115, 115, 119, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 120, 120, 120, 120, 120, 120, 
	120, 120, 120, 120, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 121, 115, 
	122, 123, 122, 122, 122, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 122, 
	115, 115, 124, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 125, 
	125, 125, 125, 125, 125, 125, 125, 125, 
	125, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 126, 115, 128, 129, 128, 
	128, 128, 127, 127, 127, 127, 127, 127, 
	127, 127, 127, 127, 127, 127, 127, 127, 
	127, 127, 127, 127, 128, 127, 127, 130, 
	127, 127, 127, 127, 127, 127, 127, 127, 
	127, 127, 127, 127, 131, 131, 131, 131, 
	131, 131, 131, 131, 131, 131, 127, 127, 
	127, 127, 127, 127, 127, 127, 127, 127, 
	127, 127, 127, 127, 127, 127, 127, 127, 
	127, 127, 127, 127, 127, 127, 127, 127, 
	127, 127, 127, 127, 127, 127, 127, 127, 
	132, 127, 134, 135, 134, 134, 134, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 134, 133, 133, 136, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 137, 137, 137, 137, 137, 137, 137, 
	137, 137, 137, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 138, 133, 134, 
	139, 134, 134, 134, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 134, 133, 
	133, 136, 133, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 137, 137, 
	137, 137, 137, 137, 137, 137, 137, 137, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 133, 138, 133, 118, 115, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 141, 
	141, 140, 141, 140, 141, 141, 140, 140, 
	141, 141, 141, 142, 141, 141, 143, 143, 
	143, 143, 143, 143, 143, 143, 143, 143, 
	141, 141, 141, 141, 141, 141, 141, 144, 
	144, 144, 144, 144, 144, 144, 144, 144, 
	144, 144, 144, 144, 144, 144, 144, 144, 
	144, 144, 144, 144, 144, 144, 144, 144, 
	144, 140, 141, 140, 140, 144, 141, 144, 
	144, 144, 144, 144, 144, 144, 144, 144, 
	144, 144, 144, 144, 144, 144, 144, 144, 
	144, 144, 144, 144, 144, 144, 144, 144, 
	144, 140, 140, 140, 141, 140, 144, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 141, 
	141, 141, 141, 141, 141, 141, 141, 141, 
	141, 140, 140, 140, 140, 140, 140, 140, 
	141, 141, 141, 141, 141, 141, 141, 141, 
	141, 141, 141, 141, 141, 141, 141, 141, 
	141, 141, 141, 141, 141, 141, 141, 141, 
	141, 141, 140, 140, 140, 140, 141, 140, 
	141, 141, 141, 141, 141, 141, 141, 141, 
	141, 141, 141, 141, 141, 141, 141, 141, 
	141, 141, 141, 141, 141, 141, 141, 141, 
	141, 141, 140, 140, 140, 140, 140, 141, 
	145, 141, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 141, 140, 145, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 146, 
	140, 140, 140, 140, 147, 140, 140, 140, 
	140, 140, 148, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 116, 140, 140, 140, 149, 149, 
	149, 149, 149, 149, 149, 149, 149, 149, 
	149, 149, 149, 149, 149, 149, 149, 149, 
	149, 149, 149, 149, 149, 149, 149, 149, 
	140, 140, 140, 140, 149, 150, 149, 149, 
	149, 149, 149, 149, 149, 149, 149, 149, 
	149, 149, 149, 149, 149, 149, 149, 149, 
	149, 149, 149, 149, 149, 149, 149, 149, 
	140, 140, 140, 148, 140, 149, 153, 152, 
	155, 154, 157, 156, 153, 158, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	146, 140, 140, 140, 140, 147, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 149, 
	149, 149, 149, 149, 149, 149, 149, 149, 
	149, 149, 149, 149, 149, 149, 149, 149, 
	149, 149, 149, 149, 149, 149, 149, 149, 
	149, 140, 140, 140, 140, 149, 150, 149, 
	149, 149, 149, 149, 149, 149, 149, 149, 
	149, 149, 149, 149, 149, 149, 149, 149, 
	149, 149, 149, 149, 149, 149, 149, 149, 
	149, 140, 140, 140, 140, 140, 149, 154, 
	154, 154, 154, 154, 154, 154, 154, 154, 
	154, 155, 154, 154, 154, 154, 154, 154, 
	154, 154, 154, 154, 154, 154, 154, 154, 
	154, 154, 154, 154, 154, 154, 154, 154, 
	154, 154, 154, 154, 154, 154, 154, 154, 
	154, 154, 154, 154, 154, 154, 154, 159, 
	159, 159, 159, 159, 159, 159, 159, 159, 
	159, 154, 154, 154, 154, 154, 154, 154, 
	159, 159, 159, 159, 159, 159, 159, 159, 
	159, 159, 159, 159, 159, 159, 159, 159, 
	159, 159, 159, 159, 159, 159, 159, 159, 
	159, 159, 154, 154, 154, 154, 159, 154, 
	159, 159, 159, 159, 159, 159, 159, 159, 
	159, 159, 159, 159, 159, 159, 159, 159, 
	159, 159, 159, 159, 159, 159, 159, 159, 
	159, 159, 154, 154, 154, 154, 154, 159, 
	161, 160, 160, 160, 160, 160, 160, 160, 
	160, 160, 160, 160, 160, 160, 160, 160, 
	160, 160, 160, 160, 160, 160, 160, 160, 
	160, 160, 160, 160, 160, 160, 160, 160, 
	160, 160, 160, 160, 160, 160, 160, 160, 
	160, 160, 160, 160, 160, 160, 160, 160, 
	160, 160, 160, 160, 160, 160, 160, 160, 
	160, 160, 160, 160, 160, 160, 160, 160, 
	160, 160, 160, 160, 160, 160, 160, 160, 
	160, 160, 160, 160, 160, 160, 160, 160, 
	160, 160, 160, 160, 160, 160, 153, 160, 
	153, 161, 115, 162, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 163, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 165, 115, 
	115, 166, 115, 163, 115, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 115, 
	115, 115, 115, 164, 115, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 115, 
	115, 115, 115, 115, 164, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 163, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 165, 
	140, 140, 166, 140, 163, 140, 164, 164, 
	164, 164, 164, 164, 167, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	140, 140, 140, 140, 164, 140, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	140, 140, 140, 140, 140, 164, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 163, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	165, 140, 140, 166, 140, 163, 140, 164, 
	164, 164, 164, 164, 164, 164, 164, 168, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 140, 140, 140, 140, 164, 140, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 140, 140, 140, 140, 140, 164, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	163, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 165, 140, 140, 166, 140, 163, 140, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 169, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 140, 140, 140, 140, 164, 140, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 140, 140, 140, 140, 140, 164, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	140, 163, 140, 140, 140, 140, 140, 140, 
	140, 140, 140, 140, 140, 140, 140, 140, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 165, 140, 140, 166, 140, 163, 
	140, 164, 164, 164, 169, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 140, 140, 140, 140, 164, 
	140, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 140, 140, 140, 140, 140, 
	164, 171, 170, 171, 171, 171, 170, 170, 
	170, 170, 170, 170, 170, 170, 170, 170, 
	170, 170, 170, 170, 170, 170, 170, 170, 
	171, 170, 170, 170, 170, 170, 170, 170, 
	172, 170, 170, 170, 170, 170, 170, 170, 
	170, 170, 170, 170, 170, 170, 170, 170, 
	170, 170, 170, 170, 170, 170, 170, 170, 
	170, 170, 170, 170, 170, 170, 170, 170, 
	170, 170, 170, 170, 170, 170, 170, 170, 
	170, 170, 170, 170, 170, 170, 170, 170, 
	170, 170, 170, 170, 173, 170, 174, 170, 
	175, 170, 175, 175, 175, 170, 170, 170, 
	170, 170, 170, 170, 170, 170, 170, 170, 
	170, 170, 170, 170, 170, 170, 170, 175, 
	170, 170, 170, 170, 170, 170, 170, 176, 
	170, 170, 170, 170, 170, 170, 170, 170, 
	170, 170, 170, 170, 170, 170, 170, 170, 
	170, 170, 170, 170, 170, 170, 170, 170, 
	170, 170, 170, 170, 170, 170, 170, 170, 
	170, 170, 170, 170, 170, 170, 170, 170, 
	170, 170, 170, 170, 170, 170, 170, 170, 
	170, 170, 170, 177, 170, 179, 178, 178, 
	180, 178, 178, 178, 178, 178, 178, 178, 
	178, 178, 178, 178, 178, 178, 178, 178, 
	178, 178, 178, 178, 178, 178, 178, 178, 
	178, 178, 178, 178, 178, 178, 178, 178, 
	178, 178, 181, 178, 178, 178, 178, 178, 
	178, 178, 178, 178, 178, 178, 178, 178, 
	178, 182, 182, 182, 182, 182, 182, 182, 
	182, 182, 182, 179, 178, 178, 178, 178, 
	181, 178, 182, 182, 182, 182, 182, 182, 
	182, 182, 182, 182, 182, 182, 182, 182, 
	182, 182, 182, 182, 182, 182, 182, 182, 
	182, 182, 182, 182, 178, 178, 178, 178, 
	182, 178, 182, 182, 182, 182, 182, 182, 
	182, 182, 182, 182, 182, 182, 182, 182, 
	182, 182, 182, 182, 182, 182, 182, 182, 
	182, 182, 182, 182, 178, 178, 178, 178, 
	178, 182, 183, 183, 183, 183, 183, 183, 
	183, 183, 183, 183, 183, 183, 183, 183, 
	183, 183, 183, 183, 183, 183, 183, 183, 
	183, 183, 183, 183, 183, 183, 183, 183, 
	183, 183, 183, 183, 183, 183, 183, 183, 
	183, 183, 183, 183, 183, 183, 183, 183, 
	183, 183, 184, 184, 184, 184, 184, 184, 
	184, 184, 184, 184, 183, 183, 183, 183, 
	183, 183, 183, 184, 184, 184, 184, 184, 
	184, 184, 184, 184, 184, 184, 184, 184, 
	184, 184, 184, 184, 184, 184, 184, 184, 
	184, 184, 184, 184, 184, 183, 183, 183, 
	183, 184, 183, 184, 184, 184, 184, 184, 
	184, 184, 184, 184, 184, 184, 184, 184, 
	184, 184, 184, 184, 184, 184, 184, 184, 
	184, 184, 184, 184, 184, 183, 183, 183, 
	183, 183, 184, 186, 185, 186, 185, 185, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 185, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 185, 188, 188, 
	188, 188, 188, 188, 188, 188, 188, 188, 
	185, 190, 189, 191, 191, 191, 191, 191, 
	191, 191, 191, 191, 191, 189, 192, 192, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	189, 194, 193, 195, 193, 196, 193, 197, 
	193, 199, 198, 200, 198, 201, 198, 183, 
	183, 183, 183, 183, 183, 183, 183, 183, 
	183, 183, 183, 183, 183, 183, 183, 183, 
	183, 183, 183, 183, 183, 183, 183, 183, 
	183, 183, 183, 183, 183, 183, 183, 183, 
	183, 183, 183, 183, 183, 183, 183, 183, 
	183, 183, 183, 183, 183, 183, 183, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 183, 183, 183, 183, 183, 183, 183, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 183, 183, 183, 183, 202, 183, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 183, 183, 183, 183, 183, 202, 
	203, 189, 204, 205, 204, 204, 204, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 204, 189, 189, 206, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 207, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 208, 189, 209, 
	210, 209, 209, 209, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 209, 189, 
	189, 211, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 212, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 213, 189, 215, 216, 215, 215, 
	215, 214, 214, 214, 214, 214, 214, 214, 
	214, 214, 214, 214, 214, 214, 214, 214, 
	214, 214, 214, 215, 214, 214, 217, 214, 
	214, 214, 214, 214, 214, 214, 214, 214, 
	214, 214, 214, 214, 214, 214, 214, 214, 
	214, 214, 214, 214, 214, 214, 214, 218, 
	214, 214, 214, 214, 214, 214, 214, 214, 
	214, 214, 214, 214, 214, 214, 214, 214, 
	214, 214, 214, 214, 214, 214, 214, 214, 
	214, 214, 214, 214, 214, 214, 214, 219, 
	214, 221, 222, 221, 221, 221, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	221, 220, 220, 223, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 224, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 225, 220, 221, 222, 
	221, 221, 221, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 221, 220, 220, 
	223, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 226, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 225, 220, 221, 227, 221, 221, 221, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 221, 220, 220, 223, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 224, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 225, 220, 
	228, 189, 205, 189, 230, 231, 230, 230, 
	230, 229, 229, 229, 229, 229, 229, 229, 
	229, 229, 229, 229, 229, 229, 229, 229, 
	229, 229, 229, 230, 229, 229, 232, 229, 
	229, 233, 229, 229, 229, 229, 229, 229, 
	229, 234, 229, 229, 229, 229, 229, 229, 
	229, 229, 229, 229, 229, 229, 229, 229, 
	229, 229, 229, 229, 229, 229, 229, 229, 
	229, 229, 229, 229, 229, 229, 229, 229, 
	229, 229, 229, 229, 229, 229, 229, 229, 
	229, 229, 229, 229, 229, 229, 229, 235, 
	229, 237, 231, 237, 237, 237, 236, 236, 
	236, 236, 236, 236, 236, 236, 236, 236, 
	236, 236, 236, 236, 236, 236, 236, 236, 
	237, 236, 236, 232, 236, 236, 236, 236, 
	236, 236, 236, 236, 236, 236, 236, 236, 
	236, 236, 236, 236, 236, 236, 236, 236, 
	236, 236, 236, 236, 236, 236, 236, 236, 
	236, 236, 236, 236, 236, 236, 236, 236, 
	236, 236, 236, 236, 236, 236, 236, 236, 
	236, 236, 236, 236, 236, 236, 236, 236, 
	236, 236, 236, 236, 235, 236, 240, 239, 
	242, 241, 243, 238, 244, 238, 245, 229, 
	247, 246, 248, 246, 249, 246, 250, 246, 
	251, 246, 252, 246, 253, 246, 254, 246, 
	255, 246, 256, 246, 246, 246, 256, 246, 
	246, 246, 246, 246, 257, 246, 246, 246, 
	246, 246, 246, 246, 246, 246, 246, 246, 
	246, 246, 246, 246, 256, 246, 258, 259, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 260, 1, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 261, 
	261, 261, 261, 261, 261, 261, 261, 261, 
	261, 261, 261, 261, 261, 261, 261, 261, 
	261, 261, 261, 261, 261, 261, 261, 261, 
	261, 261, 261, 261, 261, 261, 261, 261, 
	261, 261, 261, 261, 261, 261, 261, 261, 
	261, 261, 261, 261, 261, 261, 261, 261, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 261, 261, 261, 261, 261, 261, 
	261, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 261, 261, 261, 261, 4, 
	261, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 261, 261, 261, 261, 261, 
	4, 262, 262, 262, 262, 262, 262, 262, 
	262, 262, 262, 262, 262, 262, 262, 262, 
	262, 262, 262, 262, 262, 262, 262, 262, 
	262, 262, 262, 262, 262, 262, 262, 262, 
	262, 262, 262, 262, 262, 262, 262, 262, 
	262, 262, 262, 262, 262, 262, 262, 262, 
	262, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 262, 262, 262, 262, 262, 
	262, 262, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 262, 262, 262, 262, 
	5, 262, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 262, 262, 262, 262, 
	262, 5, 263, 263, 263, 263, 263, 263, 
	263, 263, 263, 263, 263, 263, 263, 263, 
	263, 263, 263, 263, 263, 263, 263, 263, 
	263, 263, 263, 263, 263, 263, 263, 263, 
	263, 263, 263, 263, 263, 263, 263, 263, 
	263, 263, 263, 263, 263, 263, 263, 263, 
	263, 263, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 263, 263, 263, 263, 
	263, 263, 263, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 263, 263, 263, 
	263, 7, 263, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 263, 263, 263, 
	263, 263, 7, 264, 265, 265, 265, 264, 
	265, 265, 265, 265, 266, 267, 266, 266, 
	266, 265, 265, 265, 265, 265, 265, 265, 
	265, 265, 265, 265, 265, 264, 265, 265, 
	265, 265, 265, 266, 268, 265, 269, 270, 
	271, 272, 265, 265, 265, 273, 274, 265, 
	274, 265, 275, 265, 265, 265, 265, 265, 
	265, 265, 265, 265, 265, 276, 265, 277, 
	278, 279, 265, 265, 280, 281, 280, 280, 
	282, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 283, 284, 
	265, 275, 285, 275, 286, 287, 288, 289, 
	290, 291, 292, 292, 293, 292, 292, 292, 
	294, 295, 296, 292, 292, 297, 298, 299, 
	300, 292, 301, 292, 302, 292, 265, 303, 
	265, 274, 265, 292, 266, 304, 266, 266, 
	266, 304, 304, 304, 304, 304, 304, 304, 
	304, 304, 304, 304, 304, 304, 304, 304, 
	304, 304, 304, 266, 304, 305, 275, 306, 
	306, 275, 306, 306, 306, 306, 306, 306, 
	306, 306, 306, 306, 306, 306, 306, 306, 
	306, 306, 306, 306, 306, 306, 306, 306, 
	306, 306, 306, 306, 306, 306, 306, 306, 
	306, 306, 306, 306, 306, 306, 306, 306, 
	306, 306, 306, 306, 306, 306, 306, 306, 
	306, 306, 306, 306, 306, 306, 306, 306, 
	306, 306, 306, 306, 306, 306, 306, 275, 
	306, 307, 308, 309, 310, 311, 311, 311, 
	311, 311, 311, 311, 311, 311, 311, 311, 
	311, 311, 311, 311, 311, 311, 311, 311, 
	311, 311, 311, 311, 311, 311, 311, 311, 
	311, 311, 311, 311, 311, 311, 9, 9, 
	311, 9, 311, 9, 9, 311, 311, 9, 
	9, 9, 312, 9, 9, 313, 313, 313, 
	313, 313, 313, 313, 313, 313, 313, 9, 
	9, 9, 9, 9, 9, 9, 314, 314, 
	314, 314, 314, 314, 314, 314, 314, 314, 
	314, 314, 314, 314, 314, 314, 314, 314, 
	314, 314, 314, 314, 314, 314, 314, 314, 
	311, 9, 311, 311, 314, 9, 314, 314, 
	314, 314, 314, 314, 314, 314, 314, 314, 
	314, 314, 314, 314, 314, 314, 314, 314, 
	314, 314, 314, 314, 314, 314, 314, 314, 
	311, 311, 311, 9, 311, 314, 313, 313, 
	313, 313, 313, 313, 313, 313, 313, 313, 
	315, 315, 315, 315, 315, 315, 315, 315, 
	315, 315, 315, 315, 315, 315, 315, 315, 
	315, 315, 315, 315, 315, 315, 315, 315, 
	315, 315, 315, 315, 315, 315, 315, 315, 
	315, 315, 315, 315, 315, 315, 315, 315, 
	315, 315, 315, 315, 315, 315, 315, 315, 
	315, 314, 314, 314, 314, 314, 314, 314, 
	314, 314, 314, 315, 315, 315, 315, 315, 
	315, 315, 314, 314, 314, 314, 314, 314, 
	314, 314, 314, 314, 314, 314, 314, 314, 
	314, 314, 314, 314, 314, 314, 314, 314, 
	314, 314, 314, 314, 315, 315, 315, 315, 
	314, 315, 314, 314, 314, 314, 314, 314, 
	314, 314, 314, 314, 314, 314, 314, 314, 
	314, 314, 314, 314, 314, 314, 314, 314, 
	314, 314, 314, 314, 315, 315, 315, 315, 
	315, 314, 316, 306, 275, 306, 275, 306, 
	275, 306, 318, 317, 275, 319, 306, 275, 
	306, 320, 275, 311, 311, 311, 311, 311, 
	311, 311, 311, 311, 311, 311, 311, 311, 
	311, 311, 311, 311, 311, 311, 311, 311, 
	311, 311, 311, 311, 311, 311, 311, 311, 
	311, 311, 311, 311, 311, 311, 311, 311, 
	311, 311, 311, 311, 311, 311, 311, 311, 
	311, 311, 311, 311, 311, 311, 311, 311, 
	311, 311, 311, 311, 311, 311, 311, 311, 
	311, 311, 275, 311, 275, 306, 275, 275, 
	306, 321, 321, 321, 321, 321, 321, 321, 
	321, 321, 321, 321, 321, 321, 321, 321, 
	321, 321, 321, 321, 321, 321, 321, 321, 
	321, 321, 321, 321, 321, 321, 321, 321, 
	321, 321, 322, 321, 321, 321, 321, 321, 
	321, 321, 321, 321, 321, 321, 321, 321, 
	321, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 321, 321, 321, 322, 321, 
	322, 321, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 321, 321, 321, 321, 
	280, 321, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 321, 321, 321, 321, 
	321, 280, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 322, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 323, 323, 323, 322, 
	323, 322, 323, 280, 280, 280, 280, 324, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 323, 323, 323, 
	323, 280, 323, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 323, 323, 323, 
	323, 323, 280, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 322, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 323, 323, 323, 
	322, 323, 322, 323, 280, 280, 280, 280, 
	280, 280, 325, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 323, 323, 
	323, 323, 280, 323, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 323, 323, 
	323, 323, 323, 280, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 322, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 323, 323, 
	323, 322, 323, 322, 323, 280, 280, 280, 
	280, 280, 280, 280, 280, 326, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 323, 
	323, 323, 323, 280, 323, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 323, 
	323, 323, 323, 323, 280, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 322, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 323, 
	323, 323, 322, 323, 322, 323, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 327, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	323, 323, 323, 323, 280, 323, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	323, 323, 323, 323, 323, 280, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 322, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	323, 323, 323, 322, 323, 322, 323, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 328, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 323, 323, 323, 323, 280, 323, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 323, 323, 323, 323, 323, 280, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 323, 
	322, 323, 323, 323, 323, 323, 323, 323, 
	323, 323, 323, 323, 323, 323, 323, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 323, 323, 323, 322, 323, 322, 323, 
	280, 280, 280, 327, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 323, 323, 323, 323, 280, 323, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 280, 280, 280, 280, 280, 280, 
	280, 280, 323, 323, 323, 323, 323, 280, 
	320, 311, 267, 311, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 322, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 322, 329, 322, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 330, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 329, 292, 321, 321, 321, 
	321, 321, 321, 321, 321, 321, 321, 321, 
	321, 321, 321, 321, 321, 321, 321, 321, 
	321, 321, 321, 321, 321, 321, 321, 321, 
	321, 321, 321, 321, 321, 321, 322, 321, 
	321, 321, 321, 321, 321, 321, 321, 321, 
	321, 321, 321, 321, 321, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 321, 
	321, 321, 322, 321, 322, 321, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	321, 321, 321, 321, 292, 321, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	321, 321, 321, 321, 321, 292, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 322, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 322, 329, 322, 329, 292, 
	292, 292, 292, 331, 332, 292, 292, 292, 
	292, 292, 333, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 292, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 329, 292, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	322, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 322, 329, 322, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 334, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 292, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 329, 292, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 322, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 322, 329, 322, 
	329, 292, 292, 335, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 292, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 329, 
	292, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 322, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 322, 329, 
	322, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	336, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	292, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	329, 292, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 322, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 322, 
	329, 322, 329, 292, 292, 292, 337, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 292, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 329, 292, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 322, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	322, 329, 322, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 338, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 292, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 329, 292, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 322, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 322, 329, 322, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 339, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 292, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 329, 292, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 322, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 322, 329, 322, 329, 292, 292, 
	292, 292, 292, 292, 340, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 292, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 329, 292, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 322, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 322, 329, 322, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 341, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 329, 292, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	322, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 322, 329, 322, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 342, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 329, 292, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 322, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 322, 329, 322, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 343, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 292, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 329, 
	292, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 322, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 322, 329, 
	322, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 344, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	292, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	329, 292, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 322, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 322, 
	329, 322, 329, 292, 292, 292, 292, 340, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 292, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 329, 292, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 322, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	322, 329, 322, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 345, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 292, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 329, 292, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 322, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 322, 329, 322, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 344, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 292, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 329, 292, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 322, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 322, 329, 322, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 292, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 346, 292, 347, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 329, 292, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 322, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 322, 329, 322, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 292, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 348, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 329, 292, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	322, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 322, 329, 322, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 292, 329, 
	349, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 329, 292, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 322, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 322, 329, 322, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 292, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 342, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 329, 
	292, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 322, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 322, 329, 
	322, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	292, 329, 292, 292, 292, 342, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	329, 292, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 322, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 322, 
	329, 322, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 292, 329, 292, 292, 292, 292, 350, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 351, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 329, 292, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 322, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	322, 329, 322, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 292, 329, 292, 292, 292, 292, 
	292, 292, 352, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 329, 292, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 322, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 322, 329, 322, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 292, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 353, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 329, 292, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 322, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 322, 329, 322, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 292, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 342, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 329, 292, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 322, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 322, 329, 322, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 292, 329, 292, 
	292, 292, 292, 354, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 329, 292, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	322, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 322, 329, 322, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 292, 329, 
	355, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 329, 292, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 322, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 322, 329, 322, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 292, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 342, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 329, 
	292, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 322, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 322, 329, 
	322, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	292, 329, 356, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 357, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	329, 292, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 322, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 322, 
	329, 322, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 292, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 358, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 329, 292, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 322, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	322, 329, 322, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 292, 329, 292, 292, 292, 292, 
	342, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 329, 292, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 322, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 322, 329, 322, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 292, 329, 359, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 329, 292, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 322, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 322, 329, 322, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 292, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	349, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 329, 292, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 322, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 322, 329, 322, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 292, 329, 292, 
	292, 292, 292, 360, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 342, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 329, 292, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	322, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 322, 329, 322, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 292, 329, 
	292, 292, 292, 292, 292, 361, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 329, 292, 
	362, 362, 362, 362, 362, 362, 362, 362, 
	362, 362, 362, 362, 362, 362, 362, 362, 
	362, 362, 362, 362, 362, 362, 362, 362, 
	362, 362, 362, 362, 362, 362, 362, 362, 
	362, 322, 362, 362, 362, 362, 362, 362, 
	362, 362, 362, 362, 362, 362, 362, 362, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 362, 362, 362, 322, 362, 322, 
	362, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 362, 362, 362, 362, 292, 
	362, 292, 292, 292, 292, 292, 292, 292, 
	292, 363, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 362, 362, 362, 362, 362, 
	292, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 322, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 322, 329, 
	322, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	292, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 364, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	329, 292, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 322, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 322, 
	329, 322, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 292, 329, 292, 292, 292, 292, 365, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 329, 292, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 322, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	322, 329, 322, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 292, 329, 292, 292, 292, 366, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 329, 292, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 322, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 322, 329, 367, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 292, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 329, 292, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 322, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 322, 329, 322, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 292, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 368, 292, 369, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 329, 292, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 322, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 322, 329, 322, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 292, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 370, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 329, 292, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	322, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 322, 329, 322, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 292, 329, 
	292, 292, 292, 292, 342, 292, 292, 292, 
	371, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 329, 292, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 322, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 322, 329, 322, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 292, 
	329, 292, 292, 292, 292, 292, 342, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 329, 
	292, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 322, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 322, 329, 
	322, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	292, 329, 292, 292, 292, 342, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 372, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	329, 292, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 322, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 322, 
	329, 322, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 292, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 373, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 329, 292, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 322, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	322, 329, 322, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 292, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 358, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 329, 292, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 322, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 322, 329, 322, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 292, 329, 374, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 296, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 329, 292, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 322, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 322, 329, 322, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 292, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 356, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 329, 292, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 322, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 322, 329, 322, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 292, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	342, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 329, 292, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	322, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 322, 329, 322, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 292, 329, 
	292, 292, 292, 292, 292, 342, 292, 292, 
	292, 292, 292, 292, 292, 342, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 329, 292, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 322, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 322, 329, 322, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 292, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 375, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 329, 
	292, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 322, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 322, 329, 
	322, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	292, 329, 292, 292, 292, 376, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	329, 292, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 322, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 322, 
	329, 322, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 292, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 377, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 329, 292, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 322, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	322, 329, 322, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 292, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 358, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 329, 292, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 322, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 322, 329, 322, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 292, 329, 292, 292, 292, 
	292, 378, 292, 292, 292, 379, 292, 292, 
	292, 292, 292, 380, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 329, 292, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 322, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 322, 329, 322, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 292, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 380, 292, 292, 
	329, 329, 329, 329, 329, 292, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 322, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 322, 329, 322, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 292, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 342, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 329, 292, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	322, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 322, 329, 322, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 292, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 342, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 329, 292, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 322, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 322, 329, 322, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 292, 
	329, 292, 292, 292, 292, 381, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 329, 
	292, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 322, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 322, 329, 
	322, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	292, 329, 292, 292, 292, 382, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 383, 384, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	329, 292, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 322, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 322, 
	329, 322, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 292, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 342, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 329, 292, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 322, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	322, 329, 322, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 292, 329, 292, 292, 385, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 329, 292, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 322, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 322, 329, 322, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 292, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 358, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 329, 292, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 322, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 322, 329, 322, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 292, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 386, 
	292, 292, 387, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 329, 292, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 322, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 322, 329, 322, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 292, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 342, 
	292, 329, 329, 329, 329, 329, 292, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	322, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 322, 329, 322, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 292, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 353, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 329, 292, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 322, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 322, 329, 322, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 292, 
	329, 292, 292, 292, 292, 388, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 389, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 329, 
	292, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 322, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 322, 329, 
	322, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	292, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 371, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	329, 292, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 322, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 322, 
	329, 322, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 292, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 390, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 329, 292, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 322, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	322, 329, 322, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 292, 329, 292, 292, 292, 292, 
	296, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 329, 292, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 322, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 322, 329, 322, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 292, 329, 292, 292, 292, 
	292, 292, 292, 292, 391, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 385, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 329, 292, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 322, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 322, 329, 322, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 292, 329, 292, 292, 
	292, 292, 353, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 329, 292, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 322, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 322, 329, 322, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 292, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 392, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 329, 292, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	322, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 322, 329, 322, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 292, 329, 
	292, 292, 292, 393, 292, 292, 292, 292, 
	292, 292, 292, 394, 292, 292, 292, 292, 
	292, 292, 292, 395, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 329, 292, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 322, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 322, 329, 322, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 292, 
	329, 292, 292, 292, 292, 371, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 329, 329, 
	292, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 322, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 329, 329, 329, 322, 329, 
	322, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	292, 329, 292, 292, 292, 292, 359, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 329, 
	329, 292, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 322, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 329, 329, 329, 322, 
	329, 322, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 292, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 379, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	329, 329, 292, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 322, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 329, 329, 329, 
	322, 329, 322, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 292, 329, 292, 292, 292, 292, 
	292, 292, 292, 396, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 329, 329, 292, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 322, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 329, 329, 
	329, 322, 329, 322, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 292, 329, 292, 292, 292, 
	292, 353, 292, 292, 292, 377, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 329, 329, 292, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 322, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 329, 
	329, 329, 322, 329, 322, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 292, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 397, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 329, 329, 292, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 322, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	329, 329, 329, 322, 329, 322, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 292, 329, 292, 
	292, 292, 292, 398, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 329, 329, 292, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 329, 
	322, 329, 329, 329, 329, 329, 329, 329, 
	329, 329, 329, 329, 329, 329, 329, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 329, 329, 329, 322, 329, 322, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 292, 329, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 292, 347, 292, 292, 292, 292, 
	292, 292, 292, 292, 292, 292, 292, 292, 
	292, 292, 329, 329, 329, 329, 329, 292, 
	275, 306, 399, 400, 400, 400, 399, 400, 
	400, 400, 400, 401, 400, 401, 401, 401, 
	400, 400, 400, 400, 400, 400, 400, 400, 
	400, 400, 400, 400, 399, 400, 400, 400, 
	400, 400, 401, 400, 400, 402, 400, 400, 
	400, 400, 400, 400, 400, 400, 400, 400, 
	403, 400, 400, 400, 400, 400, 400, 400, 
	400, 400, 400, 400, 400, 400, 400, 400, 
	400, 400, 400, 404, 404, 404, 404, 404, 
	404, 404, 404, 404, 404, 404, 404, 404, 
	404, 404, 404, 404, 404, 404, 404, 404, 
	404, 404, 404, 404, 404, 400, 405, 400, 
	400, 404, 400, 404, 404, 404, 404, 404, 
	404, 404, 404, 404, 404, 404, 404, 404, 
	404, 404, 404, 404, 404, 404, 404, 404, 
	404, 404, 404, 404, 404, 400, 400, 400, 
	400, 400, 404, 401, 406, 401, 401, 401, 
	406, 406, 406, 406, 406, 406, 406, 406, 
	406, 406, 406, 406, 406, 406, 406, 406, 
	406, 406, 401, 406, 407, 408, 409, 410, 
	412, 411, 411, 411, 411, 411, 411, 411, 
	411, 411, 411, 411, 411, 411, 411, 411, 
	411, 411, 411, 411, 411, 411, 411, 411, 
	411, 411, 411, 411, 411, 411, 411, 411, 
	411, 411, 411, 16, 411, 411, 411, 411, 
	411, 411, 411, 411, 411, 411, 411, 411, 
	411, 411, 17, 17, 17, 17, 17, 17, 
	17, 17, 17, 17, 14, 411, 411, 411, 
	411, 16, 411, 17, 17, 17, 17, 17, 
	17, 17, 17, 17, 17, 17, 17, 17, 
	17, 17, 17, 17, 17, 17, 17, 17, 
	17, 17, 17, 17, 17, 411, 411, 411, 
	411, 17, 411, 17, 17, 17, 17, 17, 
	17, 17, 17, 17, 17, 17, 17, 17, 
	17, 17, 17, 17, 17, 17, 17, 17, 
	17, 17, 17, 17, 17, 411, 411, 411, 
	411, 411, 17, 413, 411, 414, 415, 416, 
	416, 416, 415, 416, 416, 416, 416, 417, 
	418, 417, 417, 417, 416, 416, 416, 416, 
	416, 416, 416, 416, 416, 416, 416, 416, 
	415, 416, 416, 416, 416, 416, 417, 419, 
	416, 420, 416, 421, 422, 416, 416, 416, 
	423, 424, 416, 424, 416, 421, 416, 416, 
	416, 416, 416, 416, 416, 416, 416, 416, 
	416, 416, 425, 426, 427, 416, 416, 428, 
	428, 428, 428, 428, 428, 428, 428, 428, 
	428, 428, 428, 428, 428, 428, 428, 428, 
	428, 428, 428, 428, 428, 428, 428, 428, 
	428, 429, 430, 416, 421, 431, 421, 431, 
	431, 431, 431, 431, 431, 431, 431, 431, 
	431, 431, 431, 431, 431, 431, 431, 431, 
	431, 431, 431, 431, 431, 431, 431, 431, 
	431, 416, 432, 416, 424, 416, 431, 417, 
	433, 417, 417, 417, 433, 433, 433, 433, 
	433, 433, 433, 433, 433, 433, 433, 433, 
	433, 433, 433, 433, 433, 433, 417, 433, 
	434, 421, 435, 435, 421, 435, 435, 435, 
	435, 435, 435, 435, 435, 435, 435, 435, 
	435, 435, 435, 435, 435, 435, 435, 435, 
	435, 435, 435, 435, 435, 435, 435, 435, 
	435, 435, 435, 435, 435, 435, 435, 435, 
	435, 435, 435, 435, 435, 435, 435, 435, 
	435, 435, 435, 435, 435, 435, 435, 435, 
	435, 435, 435, 435, 435, 435, 435, 435, 
	435, 435, 421, 435, 436, 437, 438, 439, 
	421, 435, 421, 435, 421, 435, 421, 440, 
	435, 421, 435, 442, 421, 441, 441, 441, 
	441, 441, 441, 441, 441, 441, 441, 441, 
	441, 441, 441, 441, 441, 441, 441, 441, 
	441, 441, 441, 441, 441, 441, 441, 441, 
	441, 441, 441, 441, 441, 441, 441, 441, 
	441, 441, 441, 441, 441, 441, 441, 441, 
	441, 441, 441, 441, 441, 441, 441, 441, 
	441, 441, 441, 441, 441, 441, 441, 441, 
	441, 441, 441, 441, 421, 441, 421, 435, 
	421, 421, 435, 443, 443, 443, 443, 443, 
	443, 443, 443, 443, 443, 443, 443, 443, 
	443, 443, 443, 443, 443, 443, 443, 443, 
	443, 443, 443, 443, 443, 443, 443, 443, 
	443, 443, 443, 443, 444, 443, 443, 443, 
	443, 443, 443, 443, 443, 443, 443, 443, 
	443, 443, 443, 428, 428, 428, 428, 428, 
	428, 428, 428, 428, 428, 443, 443, 443, 
	443, 443, 444, 443, 428, 428, 428, 428, 
	428, 428, 428, 428, 428, 428, 428, 428, 
	428, 428, 428, 428, 428, 428, 428, 428, 
	428, 428, 428, 428, 428, 428, 443, 443, 
	443, 443, 428, 443, 428, 428, 428, 428, 
	428, 428, 428, 428, 428, 428, 428, 428, 
	428, 428, 428, 428, 428, 428, 428, 428, 
	428, 428, 428, 428, 428, 428, 443, 443, 
	443, 443, 443, 428, 446, 445, 447, 442, 
	441, 418, 441, 448, 448, 448, 448, 448, 
	448, 448, 448, 448, 448, 448, 448, 448, 
	448, 448, 448, 448, 448, 448, 448, 448, 
	448, 448, 448, 448, 448, 448, 448, 448, 
	448, 448, 448, 448, 444, 448, 448, 448, 
	448, 448, 448, 448, 448, 448, 448, 448, 
	448, 448, 448, 431, 431, 431, 431, 431, 
	431, 431, 431, 431, 431, 448, 448, 448, 
	448, 448, 444, 448, 431, 431, 431, 431, 
	431, 431, 431, 431, 431, 431, 431, 431, 
	431, 431, 431, 431, 431, 431, 431, 431, 
	431, 431, 431, 431, 431, 431, 448, 448, 
	448, 448, 431, 448, 431, 431, 431, 431, 
	431, 431, 431, 431, 431, 431, 431, 431, 
	431, 431, 431, 431, 431, 431, 431, 431, 
	431, 431, 431, 431, 431, 431, 448, 448, 
	448, 448, 448, 431, 421, 435, 449, 450, 
	450, 450, 449, 450, 450, 450, 450, 451, 
	452, 451, 451, 451, 450, 450, 450, 450, 
	450, 450, 450, 450, 450, 450, 450, 450, 
	449, 450, 450, 450, 450, 450, 451, 450, 
	450, 453, 450, 20, 454, 450, 455, 450, 
	456, 20, 55, 457, 57, 20, 450, 450, 
	450, 450, 450, 450, 450, 450, 450, 450, 
	458, 450, 459, 55, 460, 461, 450, 450, 
	450, 450, 450, 450, 450, 450, 450, 450, 
	450, 450, 450, 450, 450, 450, 450, 450, 
	450, 450, 450, 450, 450, 450, 450, 450, 
	450, 55, 462, 55, 20, 450, 450, 450, 
	450, 450, 450, 450, 450, 450, 450, 463, 
	450, 450, 450, 450, 450, 450, 450, 450, 
	464, 450, 450, 465, 450, 466, 450, 450, 
	450, 68, 69, 450, 20, 450, 467, 467, 
	467, 467, 467, 467, 467, 467, 467, 451, 
	467, 451, 451, 451, 467, 467, 467, 467, 
	467, 467, 467, 467, 467, 467, 467, 467, 
	467, 467, 467, 467, 467, 467, 451, 467, 
	467, 467, 467, 50, 51, 467, 52, 467, 
	53, 54, 55, 56, 57, 50, 467, 467, 
	467, 467, 467, 467, 467, 467, 467, 467, 
	58, 467, 59, 55, 60, 61, 467, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 62, 63, 55, 20, 23, 467, 23, 
	23, 23, 23, 23, 23, 23, 23, 64, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	65, 23, 23, 66, 23, 67, 23, 23, 
	23, 68, 69, 467, 20, 467, 23, 468, 
	469, 469, 469, 468, 469, 469, 469, 469, 
	55, 470, 55, 55, 55, 469, 469, 469, 
	469, 469, 469, 469, 469, 469, 469, 469, 
	469, 468, 469, 469, 469, 469, 469, 55, 
	469, 469, 469, 469, 469, 469, 469, 469, 
	469, 469, 469, 469, 469, 469, 469, 469, 
	469, 469, 469, 469, 469, 469, 469, 469, 
	469, 469, 469, 469, 55, 469, 55, 470, 
	55, 55, 55, 21, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 55, 21, 21, 
	21, 21, 21, 20, 21, 21, 21, 21, 
	21, 21, 21, 55, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 21, 21, 21, 
	21, 21, 55, 21, 55, 470, 55, 55, 
	55, 21, 21, 21, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 21, 21, 21, 
	21, 21, 21, 55, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 21, 21, 21, 
	55, 21, 471, 55, 470, 55, 55, 55, 
	472, 472, 472, 472, 472, 472, 472, 472, 
	472, 472, 472, 472, 472, 472, 472, 472, 
	472, 472, 55, 472, 472, 472, 472, 472, 
	472, 472, 472, 472, 473, 472, 472, 472, 
	472, 472, 472, 472, 472, 472, 472, 472, 
	472, 472, 472, 472, 472, 472, 472, 55, 
	472, 55, 470, 55, 55, 55, 21, 21, 
	21, 21, 21, 21, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 21, 21, 21, 
	55, 21, 21, 21, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 21, 21, 21, 
	21, 21, 21, 21, 21, 55, 55, 21, 
	474, 468, 55, 468, 476, 475, 478, 479, 
	478, 478, 478, 477, 477, 477, 477, 477, 
	477, 477, 477, 477, 477, 477, 477, 477, 
	477, 477, 477, 477, 477, 478, 477, 480, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 22, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 24, 468, 468, 468, 468, 22, 
	468, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 468, 468, 468, 468, 23, 
	468, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 23, 23, 23, 23, 23, 
	23, 23, 23, 468, 468, 468, 468, 468, 
	23, 481, 55, 470, 55, 55, 55, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 55, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 55, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 20, 468, 482, 
	483, 484, 485, 486, 487, 55, 470, 55, 
	55, 55, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 55, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 20, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 468, 468, 468, 468, 468, 468, 468, 
	468, 55, 468, 55, 475, 20, 488, 20, 
	488, 489, 490, 489, 489, 489, 477, 477, 
	477, 477, 477, 477, 477, 477, 477, 477, 
	477, 477, 477, 477, 477, 477, 477, 477, 
	489, 477, 491, 488, 492, 492, 492, 492, 
	492, 492, 492, 492, 492, 26, 492, 26, 
	26, 26, 492, 492, 492, 492, 492, 492, 
	492, 492, 492, 492, 492, 492, 492, 492, 
	492, 492, 492, 492, 26, 492, 492, 492, 
	492, 27, 28, 492, 29, 492, 30, 31, 
	32, 33, 34, 27, 492, 492, 492, 492, 
	492, 492, 492, 492, 492, 492, 35, 492, 
	36, 32, 37, 38, 492, 39, 39, 39, 
	39, 39, 39, 39, 39, 39, 39, 39, 
	39, 39, 39, 39, 39, 39, 39, 39, 
	39, 39, 39, 39, 39, 39, 39, 40, 
	41, 32, 42, 39, 492, 39, 39, 39, 
	39, 39, 39, 39, 39, 43, 39, 39, 
	39, 39, 39, 39, 39, 39, 44, 39, 
	39, 45, 39, 46, 39, 39, 39, 47, 
	48, 492, 42, 492, 39, 55, 488, 493, 
	488, 494, 488, 495, 488, 496, 100, 100, 
	100, 496, 100, 100, 100, 100, 497, 100, 
	497, 497, 497, 100, 100, 100, 100, 100, 
	100, 100, 100, 100, 100, 100, 100, 496, 
	100, 100, 100, 100, 100, 497, 100, 100, 
	100, 100, 100, 100, 100, 100, 100, 100, 
	100, 100, 100, 100, 100, 100, 100, 100, 
	100, 100, 100, 100, 100, 100, 100, 100, 
	100, 100, 100, 100, 100, 100, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	100, 498, 100, 100, 96, 100, 96, 96, 
	96, 98, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	100, 100, 100, 100, 100, 96, 499, 499, 
	499, 499, 499, 499, 499, 499, 499, 94, 
	499, 94, 94, 94, 499, 499, 499, 499, 
	499, 499, 499, 499, 499, 499, 499, 499, 
	499, 499, 499, 499, 499, 499, 94, 499, 
	499, 499, 499, 499, 499, 499, 95, 499, 
	499, 499, 499, 499, 499, 499, 499, 499, 
	499, 499, 499, 499, 499, 499, 499, 499, 
	499, 499, 499, 499, 499, 499, 499, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 499, 97, 499, 499, 96, 499, 96, 
	96, 96, 98, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 499, 499, 499, 499, 499, 96, 500, 
	99, 99, 99, 99, 99, 99, 99, 99, 
	99, 99, 99, 99, 99, 99, 99, 99, 
	99, 99, 99, 99, 99, 99, 99, 99, 
	99, 99, 99, 99, 99, 99, 99, 99, 
	99, 501, 99, 99, 99, 99, 99, 99, 
	99, 99, 99, 99, 99, 99, 99, 99, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 100, 99, 99, 99, 99, 501, 
	99, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 99, 99, 99, 99, 96, 
	99, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 99, 99, 99, 99, 99, 
	96, 499, 499, 499, 499, 499, 499, 499, 
	499, 499, 499, 499, 499, 499, 499, 499, 
	499, 499, 499, 499, 499, 499, 499, 499, 
	499, 499, 499, 499, 499, 499, 499, 499, 
	499, 499, 501, 499, 499, 499, 499, 499, 
	499, 499, 499, 499, 499, 499, 499, 499, 
	499, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 100, 499, 499, 499, 499, 
	501, 499, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 499, 499, 499, 499, 
	96, 499, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	502, 96, 96, 96, 96, 96, 96, 96, 
	96, 96, 96, 96, 499, 499, 499, 499, 
	499, 96, 101, 499, 503, 504, 504, 504, 
	503, 504, 504, 504, 504, 505, 504, 505, 
	505, 505, 504, 504, 504, 504, 504, 504, 
	504, 504, 504, 504, 504, 504, 503, 504, 
	504, 504, 504, 504, 505, 504, 504, 506, 
	504, 504, 504, 504, 504, 504, 504, 504, 
	504, 504, 504, 504, 504, 504, 504, 504, 
	504, 504, 504, 504, 504, 504, 504, 504, 
	504, 504, 504, 504, 504, 504, 504, 504, 
	504, 504, 504, 504, 504, 504, 504, 504, 
	504, 504, 504, 504, 504, 504, 504, 504, 
	504, 504, 504, 504, 504, 504, 504, 504, 
	507, 504, 504, 504, 504, 504, 504, 504, 
	508, 504, 504, 504, 504, 504, 504, 504, 
	504, 504, 504, 504, 504, 504, 504, 504, 
	504, 504, 504, 504, 504, 504, 504, 509, 
	504, 505, 510, 505, 505, 505, 510, 510, 
	510, 510, 510, 510, 510, 510, 510, 510, 
	510, 510, 510, 510, 510, 510, 510, 510, 
	505, 510, 511, 512, 513, 514, 516, 515, 
	517, 518, 515, 519, 520, 521, 521, 521, 
	520, 521, 521, 521, 521, 522, 523, 522, 
	522, 522, 521, 521, 521, 521, 521, 521, 
	521, 521, 521, 521, 521, 521, 520, 521, 
	521, 521, 521, 521, 522, 521, 521, 524, 
	521, 521, 521, 521, 521, 521, 521, 521, 
	521, 521, 521, 521, 521, 521, 521, 521, 
	521, 521, 521, 521, 521, 521, 521, 521, 
	521, 521, 521, 521, 521, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 521, 
	526, 521, 521, 525, 521, 525, 525, 525, 
	525, 525, 525, 525, 525, 527, 525, 525, 
	525, 525, 525, 525, 525, 525, 528, 525, 
	525, 529, 525, 530, 525, 525, 525, 521, 
	521, 521, 521, 521, 525, 522, 531, 522, 
	522, 522, 531, 531, 531, 531, 531, 531, 
	531, 531, 531, 531, 531, 531, 531, 531, 
	531, 531, 531, 531, 522, 531, 532, 533, 
	534, 535, 536, 537, 537, 537, 537, 537, 
	537, 537, 537, 537, 537, 537, 537, 537, 
	537, 537, 537, 537, 537, 537, 537, 537, 
	537, 537, 537, 537, 537, 537, 537, 537, 
	537, 537, 537, 537, 537, 537, 537, 537, 
	537, 537, 537, 537, 537, 537, 537, 537, 
	537, 537, 537, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 537, 537, 537, 
	537, 537, 537, 537, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 537, 537, 
	537, 537, 525, 537, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 537, 537, 
	537, 537, 537, 525, 539, 538, 540, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 541, 541, 541, 541, 541, 541, 541, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 541, 541, 541, 541, 525, 541, 
	525, 525, 525, 525, 525, 542, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 541, 541, 541, 541, 541, 525, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 541, 541, 541, 541, 541, 541, 
	541, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 541, 541, 541, 541, 525, 
	541, 525, 525, 525, 525, 543, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 541, 541, 541, 541, 541, 
	525, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 541, 541, 541, 541, 541, 
	541, 541, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 541, 541, 541, 541, 
	525, 541, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 544, 525, 525, 525, 
	525, 525, 525, 525, 541, 541, 541, 541, 
	541, 525, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 541, 541, 541, 541, 
	541, 541, 541, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 541, 541, 541, 
	541, 525, 541, 525, 525, 545, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 541, 541, 541, 
	541, 541, 525, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 541, 541, 541, 
	541, 541, 541, 541, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 541, 541, 
	541, 541, 525, 541, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	546, 525, 525, 525, 525, 525, 541, 541, 
	541, 541, 541, 525, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 541, 541, 
	541, 541, 541, 541, 541, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 541, 
	541, 541, 541, 525, 541, 525, 525, 525, 
	525, 542, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 541, 
	541, 541, 541, 541, 525, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 541, 
	541, 541, 541, 541, 541, 541, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	541, 541, 541, 541, 525, 541, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 547, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	541, 541, 541, 541, 541, 525, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	541, 541, 541, 541, 541, 541, 541, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 541, 541, 541, 541, 525, 541, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 548, 525, 525, 525, 525, 525, 
	525, 525, 549, 525, 525, 525, 525, 525, 
	525, 541, 541, 541, 541, 541, 525, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 541, 541, 541, 541, 541, 541, 541, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 541, 541, 541, 541, 525, 541, 
	525, 525, 525, 525, 550, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 541, 541, 541, 541, 541, 525, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 541, 541, 541, 541, 541, 541, 
	541, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 541, 541, 541, 541, 525, 
	541, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 551, 525, 525, 525, 525, 
	525, 525, 525, 541, 541, 541, 541, 541, 
	525, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 541, 541, 541, 541, 541, 
	541, 541, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 541, 541, 541, 541, 
	525, 541, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 542, 525, 525, 525, 
	525, 525, 525, 525, 541, 541, 541, 541, 
	541, 525, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 541, 541, 541, 541, 
	541, 541, 541, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 541, 541, 541, 
	541, 525, 541, 525, 525, 525, 525, 525, 
	525, 525, 525, 552, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 541, 541, 541, 
	541, 541, 525, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 541, 541, 541, 
	541, 541, 541, 541, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 541, 541, 
	541, 541, 525, 541, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 542, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 541, 541, 
	541, 541, 541, 525, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 541, 541, 
	541, 541, 541, 541, 541, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 541, 
	541, 541, 541, 525, 541, 525, 525, 525, 
	525, 525, 525, 525, 553, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 541, 
	541, 541, 541, 541, 525, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 541, 
	541, 541, 541, 541, 541, 541, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	541, 541, 541, 541, 525, 541, 525, 525, 
	525, 525, 525, 525, 525, 525, 554, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	541, 541, 541, 541, 541, 525, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 541, 541, 
	541, 541, 541, 541, 541, 541, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	541, 541, 541, 541, 541, 541, 541, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 541, 541, 541, 541, 525, 541, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 525, 546, 525, 525, 525, 525, 525, 
	525, 525, 525, 525, 525, 525, 525, 525, 
	525, 541, 541, 541, 541, 541, 525, 555, 
	116, 116, 116, 555, 116, 116, 116, 116, 
	556, 557, 556, 556, 556, 116, 116, 116, 
	116, 116, 116, 116, 116, 116, 116, 116, 
	116, 555, 116, 116, 116, 116, 116, 556, 
	558, 116, 559, 116, 560, 561, 116, 562, 
	116, 563, 564, 116, 565, 566, 567, 116, 
	116, 116, 116, 116, 116, 116, 116, 116, 
	116, 568, 116, 569, 570, 571, 572, 116, 
	573, 574, 573, 573, 575, 573, 573, 573, 
	573, 573, 573, 573, 573, 573, 573, 573, 
	573, 573, 573, 573, 573, 573, 573, 573, 
	573, 573, 576, 577, 116, 578, 579, 116, 
	580, 581, 582, 583, 584, 585, 586, 586, 
	587, 586, 586, 586, 588, 589, 590, 586, 
	586, 591, 592, 593, 594, 586, 595, 586, 
	596, 586, 597, 598, 116, 578, 116, 586, 
	556, 599, 556, 556, 556, 599, 599, 599, 
	599, 599, 599, 599, 599, 599, 599, 599, 
	599, 599, 599, 599, 599, 599, 599, 556, 
	599, 601, 600, 603, 604, 603, 603, 603, 
	602, 602, 602, 602, 602, 602, 602, 602, 
	602, 602, 602, 602, 602, 602, 602, 602, 
	602, 602, 603, 602, 116, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 116, 605, 606, 
	607, 608, 609, 611, 611, 611, 611, 611, 
	611, 611, 611, 611, 611, 611, 611, 611, 
	611, 611, 611, 611, 611, 611, 611, 611, 
	611, 611, 611, 611, 611, 611, 611, 611, 
	611, 611, 611, 611, 611, 611, 611, 611, 
	611, 611, 611, 611, 611, 611, 611, 611, 
	611, 611, 611, 610, 610, 610, 610, 610, 
	610, 610, 610, 610, 610, 611, 611, 611, 
	611, 611, 611, 611, 612, 612, 612, 612, 
	612, 612, 612, 612, 612, 612, 612, 612, 
	612, 612, 612, 612, 612, 612, 612, 612, 
	612, 612, 612, 612, 612, 612, 611, 611, 
	611, 611, 611, 611, 612, 612, 612, 612, 
	612, 612, 612, 612, 612, 612, 612, 612, 
	612, 612, 612, 612, 612, 612, 612, 612, 
	612, 612, 612, 612, 612, 612, 611, 611, 
	611, 611, 611, 610, 614, 613, 613, 613, 
	613, 613, 613, 613, 613, 613, 613, 613, 
	613, 613, 613, 613, 613, 613, 613, 613, 
	613, 613, 613, 116, 613, 615, 617, 616, 
	616, 616, 616, 616, 616, 616, 616, 616, 
	616, 616, 616, 616, 616, 616, 616, 616, 
	616, 116, 616, 116, 115, 117, 118, 117, 
	117, 117, 613, 613, 613, 613, 613, 613, 
	613, 613, 613, 613, 613, 613, 613, 613, 
	613, 613, 613, 613, 117, 613, 613, 119, 
	613, 613, 613, 613, 613, 613, 613, 613, 
	613, 613, 613, 613, 120, 120, 120, 120, 
	120, 120, 120, 120, 120, 120, 613, 613, 
	613, 116, 613, 613, 613, 613, 613, 613, 
	613, 613, 613, 613, 613, 613, 613, 613, 
	613, 613, 613, 613, 613, 613, 613, 613, 
	613, 613, 613, 613, 613, 613, 613, 613, 
	121, 613, 134, 135, 134, 134, 134, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 134, 133, 133, 136, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 137, 137, 137, 137, 137, 137, 137, 
	137, 137, 137, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 133, 133, 133, 
	133, 133, 133, 133, 133, 138, 133, 117, 
	118, 117, 117, 117, 613, 613, 613, 613, 
	613, 613, 613, 613, 613, 613, 613, 613, 
	613, 613, 613, 613, 613, 613, 117, 613, 
	613, 119, 613, 613, 613, 613, 613, 613, 
	613, 613, 613, 613, 613, 613, 120, 120, 
	120, 120, 120, 120, 120, 120, 120, 120, 
	613, 613, 613, 116, 116, 613, 613, 613, 
	613, 613, 613, 613, 613, 613, 613, 613, 
	613, 613, 613, 613, 613, 613, 613, 613, 
	613, 613, 613, 613, 613, 613, 613, 613, 
	613, 613, 121, 613, 619, 605, 621, 620, 
	623, 622, 605, 624, 624, 624, 605, 624, 
	624, 624, 624, 624, 624, 624, 624, 624, 
	624, 624, 624, 624, 624, 624, 624, 624, 
	624, 624, 624, 624, 605, 624, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 625, 
	626, 605, 627, 141, 628, 626, 605, 605, 
	629, 630, 605, 630, 605, 141, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	631, 605, 632, 633, 634, 605, 635, 636, 
	636, 636, 636, 636, 636, 636, 636, 636, 
	636, 636, 636, 636, 636, 636, 636, 636, 
	636, 636, 636, 636, 636, 636, 636, 636, 
	636, 637, 605, 605, 141, 636, 141, 636, 
	636, 636, 636, 636, 636, 636, 636, 636, 
	636, 636, 636, 636, 636, 636, 636, 636, 
	636, 636, 636, 636, 636, 636, 636, 636, 
	636, 605, 638, 605, 639, 605, 636, 141, 
	640, 640, 641, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	141, 640, 143, 143, 143, 143, 143, 143, 
	143, 143, 143, 143, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 144, 144, 144, 
	144, 144, 144, 144, 144, 144, 144, 640, 
	640, 640, 640, 640, 640, 640, 144, 144, 
	144, 144, 144, 144, 144, 144, 144, 144, 
	144, 144, 144, 144, 144, 144, 144, 144, 
	144, 144, 144, 144, 144, 144, 144, 144, 
	640, 640, 640, 640, 144, 640, 144, 144, 
	144, 144, 144, 144, 144, 144, 144, 144, 
	144, 144, 144, 144, 144, 144, 144, 144, 
	144, 144, 144, 144, 144, 144, 144, 144, 
	640, 640, 640, 640, 640, 144, 642, 640, 
	141, 640, 141, 640, 141, 643, 640, 141, 
	640, 141, 640, 141, 141, 640, 644, 644, 
	644, 644, 644, 644, 644, 644, 644, 644, 
	644, 644, 644, 644, 644, 644, 644, 644, 
	644, 644, 644, 644, 644, 644, 644, 644, 
	644, 644, 644, 644, 644, 644, 644, 644, 
	644, 644, 644, 644, 644, 644, 644, 644, 
	644, 644, 644, 644, 644, 644, 645, 645, 
	645, 645, 645, 645, 645, 645, 645, 645, 
	644, 644, 644, 644, 644, 644, 646, 647, 
	647, 647, 647, 647, 647, 647, 647, 647, 
	647, 647, 647, 647, 647, 647, 647, 647, 
	647, 647, 647, 647, 647, 647, 647, 647, 
	647, 644, 644, 644, 644, 647, 644, 647, 
	647, 647, 647, 647, 647, 647, 647, 647, 
	647, 647, 647, 647, 647, 647, 647, 647, 
	647, 647, 647, 647, 647, 647, 647, 647, 
	647, 644, 644, 644, 644, 644, 647, 649, 
	649, 649, 649, 649, 649, 649, 649, 649, 
	649, 648, 650, 650, 650, 650, 650, 650, 
	650, 650, 650, 650, 650, 650, 650, 650, 
	650, 650, 650, 650, 650, 650, 650, 650, 
	650, 650, 650, 650, 650, 650, 650, 650, 
	650, 650, 650, 650, 650, 650, 650, 650, 
	650, 650, 650, 650, 650, 650, 650, 650, 
	650, 650, 651, 651, 651, 651, 651, 651, 
	651, 651, 651, 651, 650, 650, 650, 650, 
	650, 650, 650, 652, 652, 652, 652, 652, 
	652, 652, 652, 652, 652, 652, 652, 652, 
	652, 652, 652, 652, 652, 652, 652, 652, 
	652, 652, 652, 652, 652, 650, 650, 650, 
	650, 652, 650, 652, 652, 652, 652, 652, 
	652, 652, 652, 652, 652, 652, 652, 652, 
	652, 652, 652, 652, 652, 652, 652, 652, 
	652, 652, 652, 652, 652, 650, 650, 650, 
	650, 650, 652, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 640, 653, 640, 640, 640, 
	640, 640, 640, 640, 640, 640, 640, 640, 
	640, 640, 640, 636, 636, 636, 636, 636, 
	636, 636, 636, 636, 636, 640, 640, 640, 
	654, 640, 653, 640, 636, 636, 636, 636, 
	636, 636, 636, 636, 636, 636, 636, 636, 
	636, 636, 636, 636, 636, 636, 636, 636, 
	636, 636, 636, 636, 636, 636, 640, 640, 
	640, 640, 636, 640, 636, 636, 636, 636, 
	636, 636, 636, 636, 636, 636, 636, 636, 
	636, 636, 636, 636, 636, 636, 636, 636, 
	636, 636, 636, 636, 636, 636, 640, 640, 
	640, 640, 640, 636, 656, 655, 657, 659, 
	660, 658, 658, 658, 658, 658, 658, 658, 
	658, 658, 658, 658, 658, 658, 658, 658, 
	658, 658, 658, 658, 658, 658, 658, 658, 
	658, 658, 658, 658, 658, 658, 658, 658, 
	658, 658, 658, 658, 658, 658, 658, 658, 
	658, 658, 658, 658, 658, 658, 658, 658, 
	658, 658, 658, 658, 658, 658, 658, 658, 
	658, 658, 658, 658, 658, 658, 658, 658, 
	661, 658, 663, 664, 662, 665, 666, 667, 
	668, 642, 640, 641, 640, 669, 670, 605, 
	152, 146, 146, 146, 146, 146, 146, 146, 
	146, 146, 146, 146, 146, 146, 146, 146, 
	146, 146, 146, 146, 146, 146, 146, 146, 
	153, 146, 672, 158, 147, 147, 147, 147, 
	147, 147, 147, 147, 147, 147, 147, 147, 
	147, 147, 147, 147, 147, 147, 147, 147, 
	147, 147, 147, 147, 147, 147, 147, 147, 
	153, 147, 153, 161, 116, 605, 578, 116, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 116, 
	605, 116, 614, 605, 674, 675, 675, 675, 
	674, 675, 675, 675, 675, 675, 675, 675, 
	675, 675, 675, 675, 675, 675, 675, 675, 
	675, 675, 675, 675, 675, 675, 674, 675, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 163, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 165, 115, 115, 166, 115, 163, 
	115, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 115, 115, 115, 115, 164, 
	115, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 115, 115, 115, 115, 115, 
	164, 677, 676, 676, 678, 676, 679, 681, 
	682, 680, 680, 680, 680, 680, 680, 680, 
	680, 680, 680, 680, 680, 680, 680, 680, 
	680, 680, 680, 680, 680, 680, 680, 680, 
	680, 680, 680, 680, 680, 680, 680, 680, 
	680, 680, 680, 680, 680, 680, 680, 680, 
	680, 680, 680, 680, 680, 680, 680, 680, 
	680, 680, 680, 680, 680, 680, 680, 680, 
	680, 680, 680, 680, 680, 680, 680, 680, 
	683, 680, 685, 684, 686, 687, 688, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	163, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 165, 605, 605, 166, 605, 163, 605, 
	164, 164, 164, 164, 689, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 605, 605, 605, 605, 164, 605, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 605, 605, 605, 605, 605, 164, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 163, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 165, 605, 605, 166, 605, 163, 
	605, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 690, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 605, 605, 605, 605, 164, 
	605, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 164, 164, 164, 164, 164, 
	164, 164, 164, 605, 605, 605, 605, 605, 
	164, 691, 692, 605, 600, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 693, 
	694, 694, 694, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 163, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 165, 
	693, 693, 166, 693, 163, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 695, 693, 693, 696, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 693, 693, 693, 693, 586, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	693, 694, 694, 694, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 163, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	165, 693, 693, 166, 693, 163, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 695, 693, 693, 586, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 693, 693, 693, 693, 586, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 693, 694, 694, 694, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	163, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 165, 693, 693, 166, 693, 163, 693, 
	586, 586, 586, 586, 697, 698, 586, 586, 
	586, 586, 586, 699, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 695, 693, 693, 586, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 693, 693, 693, 693, 586, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 693, 694, 694, 694, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 163, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 165, 693, 693, 166, 693, 163, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 700, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 695, 693, 693, 586, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 693, 693, 693, 693, 
	586, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 693, 694, 694, 694, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 163, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 165, 693, 693, 166, 693, 
	163, 693, 586, 586, 701, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 695, 693, 693, 
	586, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 693, 693, 693, 
	693, 586, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 693, 694, 694, 694, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 163, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 165, 693, 693, 166, 
	693, 163, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 702, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 695, 693, 
	693, 586, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 693, 693, 
	693, 693, 586, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 693, 694, 694, 
	694, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 163, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 165, 693, 693, 
	166, 693, 163, 693, 586, 586, 586, 703, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 695, 
	693, 693, 586, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 693, 
	693, 693, 693, 586, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 693, 694, 
	694, 694, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 163, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 165, 693, 
	693, 166, 693, 163, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 704, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	695, 693, 693, 586, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	693, 693, 693, 693, 586, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 693, 
	694, 694, 694, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 163, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 165, 
	693, 693, 166, 693, 163, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 705, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 695, 693, 693, 586, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 693, 693, 693, 693, 586, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	693, 694, 694, 694, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 163, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	165, 693, 693, 166, 693, 163, 693, 586, 
	586, 586, 586, 586, 586, 706, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 695, 693, 693, 586, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 693, 693, 693, 693, 586, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 693, 694, 694, 694, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	163, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 165, 693, 693, 166, 693, 163, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 695, 693, 693, 707, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 693, 693, 693, 693, 586, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 693, 694, 694, 694, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 163, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 165, 693, 693, 166, 693, 163, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 695, 693, 693, 708, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 693, 693, 693, 693, 
	586, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 163, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 165, 115, 115, 166, 115, 
	163, 115, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 115, 115, 115, 115, 
	586, 115, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 115, 115, 115, 115, 
	115, 586, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 693, 694, 694, 694, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 163, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 165, 693, 693, 166, 
	693, 163, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 709, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 695, 693, 
	693, 586, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 693, 693, 
	693, 693, 586, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 693, 694, 694, 
	694, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 163, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 165, 693, 693, 
	166, 693, 163, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 710, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 695, 
	693, 693, 586, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 693, 
	693, 693, 693, 586, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 693, 694, 
	694, 694, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 163, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 165, 693, 
	693, 166, 693, 163, 693, 586, 586, 586, 
	586, 706, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	695, 693, 693, 586, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	693, 693, 693, 693, 586, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 693, 
	694, 694, 694, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 163, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 165, 
	693, 693, 166, 693, 163, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 711, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 695, 693, 693, 586, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 693, 693, 693, 693, 586, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	693, 694, 694, 694, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 163, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	165, 693, 693, 166, 693, 163, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 710, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 695, 693, 693, 586, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 693, 693, 693, 693, 586, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 693, 694, 694, 694, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	163, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 165, 693, 693, 166, 693, 163, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 695, 693, 693, 586, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 712, 586, 713, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 693, 693, 693, 693, 586, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 693, 694, 694, 694, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 163, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 165, 693, 693, 166, 693, 163, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 695, 693, 693, 586, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 714, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 693, 693, 693, 693, 
	586, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 693, 694, 694, 694, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 163, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 165, 693, 693, 166, 693, 
	163, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 695, 693, 693, 
	586, 693, 715, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 693, 693, 693, 
	693, 586, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 693, 694, 694, 694, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 163, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 165, 693, 693, 166, 
	693, 163, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 695, 693, 
	693, 586, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 708, 586, 586, 
	586, 586, 586, 586, 586, 693, 693, 693, 
	693, 693, 586, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 693, 694, 694, 
	694, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 163, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 165, 693, 693, 
	166, 693, 163, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 695, 
	693, 693, 586, 693, 586, 586, 586, 708, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 693, 
	693, 693, 693, 586, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 693, 694, 
	694, 694, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 163, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 165, 693, 
	693, 166, 693, 163, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	695, 693, 693, 586, 693, 586, 586, 586, 
	586, 716, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 717, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	693, 693, 693, 693, 586, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 693, 
	694, 694, 694, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 163, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 165, 
	693, 693, 166, 693, 163, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 695, 693, 693, 586, 693, 586, 586, 
	586, 586, 586, 586, 718, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 693, 693, 693, 693, 586, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	693, 694, 694, 694, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 163, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	165, 693, 693, 166, 693, 163, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 695, 693, 693, 586, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 719, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 693, 693, 693, 693, 586, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 693, 694, 694, 694, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	163, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 165, 693, 693, 166, 693, 163, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 695, 693, 693, 586, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 708, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 693, 693, 693, 693, 586, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 693, 694, 694, 694, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 163, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 165, 693, 693, 166, 693, 163, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 695, 693, 693, 586, 
	693, 586, 586, 586, 586, 720, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 693, 693, 693, 693, 
	586, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 693, 694, 694, 694, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 163, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 165, 693, 693, 166, 693, 
	163, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 695, 693, 693, 
	586, 693, 721, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 693, 693, 693, 
	693, 586, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 693, 694, 694, 694, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 163, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 165, 693, 693, 166, 
	693, 163, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 695, 693, 
	693, 586, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 708, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 693, 693, 
	693, 693, 586, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 693, 694, 694, 
	694, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 163, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 165, 693, 693, 
	166, 693, 163, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 695, 
	693, 693, 586, 693, 722, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 723, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 693, 
	693, 693, 693, 586, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 693, 694, 
	694, 694, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 163, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 165, 693, 
	693, 166, 693, 163, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	695, 693, 693, 586, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 724, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	693, 693, 693, 693, 586, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 693, 
	694, 694, 694, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 163, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 165, 
	693, 693, 166, 693, 163, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 695, 693, 693, 586, 693, 586, 586, 
	586, 586, 708, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 693, 693, 693, 693, 586, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	693, 694, 694, 694, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 163, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	165, 693, 693, 166, 693, 163, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 695, 693, 693, 586, 693, 725, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 693, 693, 693, 693, 586, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 693, 694, 694, 694, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	163, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 165, 693, 693, 166, 693, 163, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 695, 693, 693, 586, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 715, 586, 586, 586, 586, 586, 
	586, 586, 693, 693, 693, 693, 693, 586, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 693, 694, 694, 694, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 163, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 165, 693, 693, 166, 693, 163, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 695, 693, 693, 586, 
	693, 586, 586, 586, 586, 726, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 708, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 693, 693, 693, 693, 
	586, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 693, 694, 694, 694, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 163, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 165, 693, 693, 166, 693, 
	163, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 695, 693, 693, 
	586, 693, 586, 586, 586, 586, 586, 708, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 693, 693, 693, 
	693, 586, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 693, 694, 694, 694, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 163, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 165, 693, 693, 166, 
	693, 163, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 695, 693, 
	693, 586, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 727, 586, 
	728, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 693, 693, 
	693, 693, 586, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 693, 694, 694, 
	694, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 163, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 165, 693, 693, 
	166, 693, 163, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 695, 
	693, 693, 586, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 729, 586, 
	586, 586, 586, 586, 586, 586, 693, 693, 
	693, 693, 693, 586, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 693, 694, 
	694, 694, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 163, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 165, 693, 
	693, 166, 693, 163, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	695, 693, 693, 586, 693, 586, 586, 586, 
	586, 708, 586, 586, 586, 726, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	693, 693, 693, 693, 586, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 693, 
	694, 694, 694, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 163, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 165, 
	693, 693, 166, 693, 163, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 695, 693, 693, 586, 693, 586, 586, 
	586, 708, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	730, 586, 586, 586, 586, 586, 586, 586, 
	693, 693, 693, 693, 693, 586, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	693, 694, 694, 694, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 163, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	165, 693, 693, 166, 693, 163, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 695, 693, 693, 586, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 731, 586, 586, 586, 586, 
	586, 693, 693, 693, 693, 693, 586, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 693, 694, 694, 694, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	163, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 165, 693, 693, 166, 693, 163, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 695, 693, 693, 586, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 724, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 693, 693, 693, 693, 586, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 693, 694, 694, 694, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 163, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 165, 693, 693, 166, 693, 163, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 695, 693, 693, 586, 
	693, 732, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 590, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 693, 693, 693, 693, 
	586, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 693, 694, 694, 694, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 163, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 165, 693, 693, 166, 693, 
	163, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 695, 693, 693, 
	586, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 722, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 693, 693, 693, 
	693, 586, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 693, 694, 694, 694, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 163, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 165, 693, 693, 166, 
	693, 163, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 695, 693, 
	693, 586, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 708, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 693, 693, 
	693, 693, 586, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 693, 694, 694, 
	694, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 163, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 165, 693, 693, 
	166, 693, 163, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 695, 
	693, 693, 586, 693, 586, 586, 586, 586, 
	586, 733, 586, 586, 586, 586, 586, 586, 
	586, 708, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 693, 
	693, 693, 693, 586, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 693, 694, 
	694, 694, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 163, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 165, 693, 
	693, 166, 693, 163, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	695, 693, 693, 586, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 734, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	693, 693, 693, 693, 586, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 693, 
	694, 694, 694, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 163, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 165, 
	693, 693, 166, 693, 163, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 695, 693, 693, 586, 693, 586, 586, 
	586, 735, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 693, 693, 693, 693, 586, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	693, 694, 694, 694, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 163, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	165, 693, 693, 166, 693, 163, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 695, 693, 693, 586, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 736, 586, 586, 586, 586, 
	586, 693, 693, 693, 693, 693, 586, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 693, 694, 694, 694, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	163, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 165, 693, 693, 166, 693, 163, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 695, 693, 693, 586, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 724, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 693, 693, 693, 693, 586, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 693, 694, 694, 694, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 163, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 165, 693, 693, 166, 693, 163, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 695, 693, 693, 586, 
	693, 586, 586, 586, 586, 737, 586, 586, 
	586, 738, 586, 586, 586, 586, 586, 739, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 693, 693, 693, 693, 
	586, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 693, 694, 694, 694, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 163, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 165, 693, 693, 166, 693, 
	163, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 695, 693, 693, 
	586, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 739, 586, 586, 693, 693, 693, 693, 
	693, 586, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 693, 694, 694, 694, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 163, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 165, 693, 693, 166, 
	693, 163, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 695, 693, 
	693, 586, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 708, 586, 
	586, 586, 586, 586, 586, 693, 693, 693, 
	693, 693, 586, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 693, 694, 694, 
	694, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 163, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 165, 693, 693, 
	166, 693, 163, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 695, 
	693, 693, 586, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 708, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 693, 
	693, 693, 693, 586, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 693, 694, 
	694, 694, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 163, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 165, 693, 
	693, 166, 693, 163, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	695, 693, 693, 586, 693, 586, 586, 586, 
	586, 740, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	693, 693, 693, 693, 586, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 693, 
	694, 694, 694, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 163, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 165, 
	693, 693, 166, 693, 163, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 695, 693, 693, 586, 693, 586, 586, 
	586, 741, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	742, 743, 586, 586, 586, 586, 586, 586, 
	693, 693, 693, 693, 693, 586, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	693, 694, 694, 694, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 163, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	165, 693, 693, 166, 693, 163, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 695, 693, 693, 586, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 708, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 693, 693, 693, 693, 586, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 693, 694, 694, 694, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	163, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 165, 693, 693, 166, 693, 163, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 695, 693, 693, 586, 693, 
	586, 586, 744, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 693, 693, 693, 693, 586, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 693, 694, 694, 694, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 163, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 165, 693, 693, 166, 693, 163, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 695, 693, 693, 586, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 745, 586, 586, 
	586, 586, 586, 693, 693, 693, 693, 693, 
	586, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 693, 694, 694, 694, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 163, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 165, 693, 693, 166, 693, 
	163, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 695, 693, 693, 
	586, 693, 586, 586, 586, 586, 746, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 693, 693, 693, 
	693, 586, 747, 747, 747, 747, 747, 747, 
	747, 747, 747, 747, 747, 747, 747, 747, 
	747, 747, 747, 747, 747, 747, 747, 747, 
	747, 747, 747, 747, 747, 747, 747, 747, 
	747, 747, 747, 748, 747, 747, 747, 747, 
	747, 747, 747, 747, 747, 747, 747, 747, 
	747, 747, 749, 749, 749, 749, 749, 749, 
	749, 749, 749, 749, 750, 747, 747, 751, 
	747, 748, 747, 749, 749, 749, 749, 749, 
	749, 749, 749, 749, 749, 749, 749, 749, 
	749, 749, 749, 749, 749, 749, 749, 749, 
	749, 749, 749, 749, 749, 747, 747, 747, 
	747, 749, 747, 749, 749, 749, 749, 749, 
	749, 749, 749, 749, 749, 749, 749, 749, 
	749, 749, 749, 749, 749, 749, 749, 749, 
	749, 749, 749, 749, 749, 747, 747, 747, 
	747, 747, 749, 681, 752, 680, 680, 680, 
	680, 680, 680, 680, 680, 680, 680, 680, 
	680, 680, 680, 680, 680, 680, 680, 680, 
	680, 680, 680, 680, 680, 680, 680, 680, 
	680, 680, 680, 680, 680, 680, 680, 680, 
	680, 680, 680, 680, 680, 680, 680, 680, 
	680, 680, 680, 680, 680, 680, 680, 680, 
	680, 680, 680, 680, 680, 680, 680, 680, 
	680, 680, 680, 680, 683, 680, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	693, 694, 694, 694, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 163, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	165, 693, 693, 166, 693, 163, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 695, 693, 693, 586, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	753, 586, 586, 754, 586, 586, 586, 586, 
	586, 693, 693, 693, 693, 693, 586, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 693, 694, 694, 694, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	163, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 165, 693, 693, 166, 693, 163, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 695, 693, 693, 586, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	708, 586, 693, 693, 693, 693, 693, 586, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 693, 694, 694, 694, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 163, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 165, 693, 693, 166, 693, 163, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 695, 693, 693, 586, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 719, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 693, 693, 693, 693, 
	586, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 693, 694, 694, 694, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 163, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 165, 693, 693, 166, 693, 
	163, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 695, 693, 693, 
	586, 693, 586, 586, 586, 586, 755, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 756, 586, 
	586, 586, 586, 586, 693, 693, 693, 693, 
	693, 586, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 693, 694, 694, 694, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 163, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 165, 693, 693, 166, 
	693, 163, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 695, 693, 
	693, 586, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 726, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 693, 693, 
	693, 693, 586, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 693, 694, 694, 
	694, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 163, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 165, 693, 693, 
	166, 693, 163, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 695, 
	693, 693, 586, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 757, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 693, 
	693, 693, 693, 586, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 693, 694, 
	694, 694, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 163, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 165, 693, 
	693, 166, 693, 163, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	695, 693, 693, 586, 693, 586, 586, 586, 
	586, 590, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	693, 693, 693, 693, 586, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 693, 
	694, 694, 694, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 163, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 165, 
	693, 693, 166, 693, 163, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 695, 693, 693, 586, 693, 586, 586, 
	586, 586, 586, 586, 586, 758, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 759, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 693, 693, 693, 693, 586, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	693, 694, 694, 694, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 163, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	165, 693, 693, 166, 693, 163, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 695, 693, 693, 586, 693, 586, 
	586, 586, 586, 719, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 693, 693, 693, 693, 586, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 693, 694, 694, 694, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	163, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 165, 693, 693, 166, 693, 163, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 695, 693, 693, 586, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 724, 586, 586, 586, 
	586, 586, 693, 693, 693, 693, 693, 586, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 693, 694, 694, 694, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 163, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 165, 693, 693, 166, 693, 163, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 695, 693, 693, 586, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 760, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 693, 693, 693, 693, 
	586, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 693, 694, 694, 694, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 163, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 165, 693, 693, 166, 693, 
	163, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 695, 693, 693, 
	586, 693, 586, 586, 586, 761, 586, 586, 
	586, 586, 586, 586, 586, 762, 586, 586, 
	586, 586, 586, 586, 586, 763, 586, 586, 
	586, 586, 586, 586, 693, 693, 693, 693, 
	693, 586, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 693, 694, 694, 694, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 163, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 165, 693, 693, 166, 
	693, 163, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 695, 693, 
	693, 586, 693, 586, 586, 586, 586, 726, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 693, 693, 
	693, 693, 586, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 693, 694, 694, 
	694, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 163, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 165, 693, 693, 
	166, 693, 163, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 695, 
	693, 693, 586, 693, 586, 586, 586, 586, 
	764, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 693, 
	693, 693, 693, 586, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 693, 694, 
	694, 694, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 163, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 165, 693, 
	693, 166, 693, 163, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	695, 693, 693, 586, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 765, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	693, 693, 693, 693, 586, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 693, 
	694, 694, 694, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 163, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 165, 
	693, 693, 166, 693, 163, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 695, 693, 693, 586, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	733, 586, 586, 586, 586, 586, 586, 586, 
	693, 693, 693, 693, 693, 586, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	693, 694, 694, 694, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 163, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	165, 693, 693, 166, 693, 163, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 695, 693, 693, 586, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 766, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 693, 693, 693, 693, 586, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 693, 694, 694, 694, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	163, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 165, 693, 693, 166, 693, 163, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 695, 693, 693, 586, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 733, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 693, 693, 693, 693, 693, 586, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 693, 694, 694, 694, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	694, 163, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 165, 693, 693, 166, 693, 163, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 695, 693, 693, 586, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	767, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 693, 693, 693, 693, 693, 
	586, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 693, 694, 694, 694, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 694, 163, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 165, 693, 693, 166, 693, 
	163, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 695, 693, 693, 
	586, 693, 586, 586, 586, 586, 719, 586, 
	586, 586, 768, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 693, 693, 693, 693, 
	693, 586, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 693, 694, 694, 694, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 694, 163, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 165, 693, 693, 166, 
	693, 163, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 695, 693, 
	693, 586, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 769, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 693, 693, 693, 
	693, 693, 586, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 693, 694, 694, 
	694, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 694, 163, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 165, 693, 693, 
	166, 693, 163, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 695, 
	693, 693, 586, 693, 586, 586, 586, 586, 
	733, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 693, 693, 
	693, 693, 693, 586, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 693, 694, 
	694, 694, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 694, 163, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 165, 693, 
	693, 166, 693, 163, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	695, 693, 693, 586, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 770, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 693, 
	693, 693, 693, 693, 586, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 693, 
	694, 694, 694, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 694, 163, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 165, 
	693, 693, 166, 693, 163, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 695, 693, 693, 586, 693, 586, 586, 
	586, 586, 771, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	693, 693, 693, 693, 693, 586, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 694, 
	693, 694, 694, 694, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 694, 163, 
	693, 693, 693, 693, 693, 693, 693, 693, 
	693, 693, 693, 693, 693, 693, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	165, 693, 693, 166, 693, 163, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 695, 693, 693, 586, 693, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 586, 713, 586, 586, 586, 586, 586, 
	586, 586, 586, 586, 586, 586, 586, 586, 
	586, 693, 693, 693, 693, 693, 586, 772, 
	116, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 605, 
	605, 605, 605, 605, 605, 605, 605, 773, 
	605, 774, 775, 775, 775, 774, 775, 775, 
	775, 775, 776, 777, 776, 776, 776, 775, 
	775, 775, 775, 775, 775, 775, 775, 775, 
	775, 775, 775, 774, 775, 775, 775, 775, 
	775, 776, 775, 775, 778, 775, 775, 775, 
	775, 775, 775, 775, 775, 775, 775, 775, 
	775, 775, 775, 775, 775, 775, 775, 775, 
	775, 775, 775, 775, 775, 775, 775, 775, 
	775, 775, 775, 775, 775, 775, 775, 775, 
	775, 775, 775, 775, 775, 775, 775, 775, 
	775, 775, 775, 775, 775, 775, 775, 775, 
	775, 775, 775, 775, 775, 779, 775, 776, 
	780, 776, 776, 776, 780, 780, 780, 780, 
	780, 780, 780, 780, 780, 780, 780, 780, 
	780, 780, 780, 780, 780, 780, 776, 780, 
	781, 782, 783, 784, 785, 787, 786, 788, 
	789, 790, 790, 790, 789, 790, 790, 790, 
	790, 791, 792, 791, 791, 791, 790, 790, 
	790, 790, 790, 790, 790, 790, 790, 790, 
	790, 790, 789, 790, 790, 790, 790, 790, 
	791, 790, 793, 794, 790, 790, 790, 793, 
	790, 790, 790, 790, 790, 790, 790, 790, 
	790, 790, 790, 790, 790, 790, 790, 790, 
	790, 790, 790, 790, 790, 790, 790, 790, 
	790, 795, 795, 795, 795, 795, 795, 795, 
	795, 795, 795, 795, 795, 795, 795, 795, 
	795, 795, 795, 795, 795, 795, 795, 795, 
	795, 795, 795, 790, 796, 790, 790, 795, 
	790, 795, 795, 795, 795, 795, 795, 795, 
	795, 795, 795, 795, 795, 795, 795, 795, 
	795, 795, 795, 795, 795, 795, 795, 795, 
	795, 795, 795, 790, 790, 790, 790, 790, 
	795, 791, 797, 791, 791, 791, 797, 797, 
	797, 797, 797, 797, 797, 797, 797, 797, 
	797, 797, 797, 797, 797, 797, 797, 797, 
	791, 797, 798, 799, 800, 801, 802, 803, 
	803, 803, 803, 803, 803, 803, 803, 803, 
	803, 803, 803, 803, 803, 803, 803, 803, 
	803, 803, 803, 803, 803, 803, 803, 803, 
	803, 803, 803, 803, 803, 803, 803, 803, 
	181, 803, 803, 803, 803, 803, 803, 803, 
	803, 803, 803, 803, 803, 803, 803, 182, 
	182, 182, 182, 182, 182, 182, 182, 182, 
	182, 179, 803, 803, 803, 803, 181, 803, 
	182, 182, 182, 182, 182, 182, 182, 182, 
	182, 182, 182, 182, 182, 182, 182, 182, 
	182, 182, 182, 182, 182, 182, 182, 182, 
	182, 182, 803, 803, 803, 803, 182, 803, 
	182, 182, 182, 182, 182, 182, 182, 182, 
	182, 182, 182, 182, 182, 182, 182, 182, 
	182, 182, 182, 182, 182, 182, 182, 182, 
	182, 182, 803, 803, 803, 803, 803, 182, 
	804, 803, 805, 806, 807, 807, 807, 806, 
	807, 807, 807, 807, 808, 809, 808, 808, 
	808, 807, 807, 807, 807, 807, 807, 807, 
	807, 807, 807, 807, 807, 806, 807, 807, 
	807, 807, 807, 808, 810, 811, 812, 813, 
	814, 815, 811, 816, 817, 818, 814, 819, 
	820, 821, 814, 822, 823, 823, 823, 823, 
	823, 823, 823, 823, 823, 824, 825, 826, 
	827, 828, 829, 830, 831, 832, 831, 831, 
	833, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 834, 835, 
	836, 814, 837, 811, 838, 839, 840, 841, 
	842, 843, 844, 844, 845, 844, 844, 844, 
	846, 847, 848, 844, 844, 849, 850, 851, 
	852, 844, 853, 844, 854, 844, 855, 856, 
	857, 858, 807, 844, 808, 859, 808, 808, 
	808, 859, 859, 859, 859, 859, 859, 859, 
	859, 859, 859, 859, 859, 859, 859, 859, 
	859, 859, 859, 808, 859, 860, 862, 861, 
	861, 861, 861, 861, 861, 861, 861, 861, 
	861, 861, 861, 861, 861, 861, 861, 861, 
	861, 861, 861, 861, 861, 861, 861, 861, 
	861, 861, 861, 861, 861, 861, 861, 861, 
	861, 861, 861, 861, 861, 861, 861, 861, 
	861, 861, 861, 861, 861, 861, 861, 861, 
	861, 861, 861, 861, 861, 861, 861, 861, 
	861, 861, 861, 861, 861, 861, 861, 862, 
	861, 863, 864, 865, 866, 867, 867, 867, 
	867, 867, 867, 867, 867, 867, 867, 867, 
	867, 867, 867, 867, 867, 867, 867, 867, 
	867, 867, 867, 867, 867, 867, 867, 867, 
	867, 867, 867, 867, 867, 867, 184, 184, 
	867, 184, 867, 184, 184, 867, 867, 184, 
	184, 184, 868, 184, 184, 869, 869, 869, 
	869, 869, 869, 869, 869, 869, 869, 184, 
	184, 184, 184, 184, 184, 184, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	867, 184, 867, 867, 202, 184, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	867, 867, 867, 184, 867, 202, 869, 869, 
	869, 869, 869, 869, 869, 869, 869, 869, 
	870, 870, 870, 870, 870, 870, 870, 870, 
	870, 870, 870, 870, 870, 870, 870, 870, 
	870, 870, 870, 870, 870, 870, 870, 870, 
	870, 870, 870, 870, 870, 870, 870, 870, 
	870, 870, 870, 870, 870, 870, 870, 870, 
	870, 870, 870, 870, 870, 870, 870, 870, 
	870, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 870, 870, 870, 870, 870, 
	870, 870, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 870, 870, 870, 870, 
	202, 870, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 870, 870, 870, 870, 
	870, 202, 871, 189, 814, 872, 872, 872, 
	872, 872, 872, 872, 873, 872, 872, 872, 
	872, 872, 872, 872, 872, 872, 872, 872, 
	872, 872, 872, 871, 872, 874, 875, 814, 
	876, 876, 876, 876, 876, 876, 876, 876, 
	876, 876, 876, 876, 876, 876, 876, 876, 
	876, 876, 871, 876, 871, 877, 872, 879, 
	878, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 188, 880, 878, 882, 881, 883, 
	881, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 188, 884, 884, 884, 884, 884, 
	884, 884, 884, 884, 884, 884, 885, 884, 
	884, 884, 884, 884, 884, 884, 884, 884, 
	884, 884, 884, 884, 884, 884, 884, 884, 
	884, 884, 884, 884, 884, 884, 884, 884, 
	886, 884, 884, 884, 884, 884, 885, 884, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 884, 884, 884, 884, 884, 884, 
	884, 884, 884, 884, 884, 884, 884, 884, 
	884, 884, 884, 884, 884, 884, 884, 884, 
	884, 884, 884, 884, 884, 884, 884, 884, 
	884, 884, 884, 884, 884, 884, 884, 186, 
	884, 887, 189, 887, 887, 887, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	887, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 888, 189, 890, 889, 
	890, 890, 890, 889, 889, 889, 889, 889, 
	889, 889, 889, 889, 889, 889, 889, 889, 
	889, 889, 889, 889, 889, 890, 889, 889, 
	889, 889, 889, 889, 889, 889, 889, 889, 
	889, 889, 889, 889, 889, 889, 889, 889, 
	889, 889, 889, 889, 889, 889, 889, 889, 
	889, 889, 889, 889, 889, 889, 889, 889, 
	889, 889, 889, 889, 889, 889, 889, 889, 
	889, 889, 889, 889, 889, 889, 889, 889, 
	889, 889, 889, 889, 889, 889, 889, 889, 
	889, 891, 889, 893, 892, 894, 894, 894, 
	894, 894, 894, 894, 894, 894, 894, 892, 
	892, 892, 892, 892, 892, 892, 892, 895, 
	892, 896, 897, 892, 892, 892, 892, 892, 
	892, 892, 892, 892, 898, 892, 892, 892, 
	892, 892, 892, 892, 892, 899, 892, 892, 
	892, 892, 892, 892, 900, 892, 892, 895, 
	892, 896, 897, 892, 892, 892, 901, 892, 
	892, 892, 892, 892, 898, 892, 892, 902, 
	892, 892, 892, 892, 892, 899, 892, 191, 
	191, 191, 191, 191, 191, 191, 191, 191, 
	191, 903, 903, 903, 903, 903, 903, 903, 
	903, 903, 903, 903, 904, 903, 903, 903, 
	903, 903, 903, 903, 903, 903, 903, 903, 
	903, 903, 903, 903, 903, 903, 903, 903, 
	903, 903, 903, 903, 903, 903, 905, 903, 
	903, 903, 903, 903, 904, 903, 903, 903, 
	906, 903, 903, 903, 903, 903, 903, 903, 
	903, 907, 903, 908, 189, 908, 189, 189, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	192, 192, 189, 192, 192, 192, 192, 192, 
	192, 192, 192, 192, 192, 909, 909, 909, 
	909, 909, 909, 909, 909, 909, 909, 909, 
	909, 909, 909, 909, 909, 909, 909, 909, 
	909, 909, 909, 909, 909, 909, 909, 909, 
	909, 909, 909, 909, 909, 909, 909, 909, 
	909, 909, 908, 909, 909, 909, 909, 909, 
	909, 909, 909, 909, 910, 909, 912, 911, 
	913, 915, 914, 914, 914, 916, 914, 917, 
	918, 894, 894, 894, 894, 894, 894, 894, 
	894, 894, 894, 892, 892, 892, 892, 892, 
	892, 892, 892, 892, 892, 892, 892, 892, 
	892, 892, 892, 892, 892, 892, 892, 892, 
	892, 892, 892, 892, 892, 892, 892, 892, 
	892, 892, 892, 892, 892, 892, 892, 892, 
	900, 892, 892, 892, 892, 892, 892, 892, 
	892, 892, 901, 892, 892, 892, 892, 892, 
	892, 892, 892, 902, 892, 919, 919, 919, 
	919, 919, 919, 919, 919, 919, 919, 892, 
	892, 892, 892, 892, 892, 892, 892, 892, 
	892, 892, 892, 892, 892, 892, 892, 892, 
	892, 892, 892, 892, 892, 892, 892, 892, 
	892, 892, 892, 892, 892, 892, 892, 892, 
	892, 892, 892, 892, 920, 892, 892, 892, 
	892, 892, 892, 892, 892, 892, 901, 892, 
	892, 892, 892, 892, 892, 892, 892, 902, 
	892, 922, 922, 922, 922, 922, 922, 922, 
	922, 922, 922, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	923, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 924, 921, 921, 921, 921, 921, 
	921, 921, 921, 925, 921, 922, 922, 922, 
	922, 922, 922, 922, 922, 922, 922, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 926, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 924, 921, 
	921, 921, 921, 921, 921, 921, 921, 925, 
	921, 924, 921, 921, 921, 921, 921, 921, 
	921, 921, 925, 921, 928, 927, 929, 931, 
	930, 930, 930, 932, 930, 934, 933, 935, 
	936, 938, 938, 937, 937, 937, 937, 937, 
	937, 937, 937, 937, 937, 937, 937, 937, 
	937, 937, 937, 937, 937, 937, 937, 937, 
	937, 937, 937, 937, 937, 937, 937, 937, 
	937, 937, 937, 937, 937, 937, 937, 937, 
	937, 937, 937, 937, 937, 937, 937, 937, 
	939, 937, 937, 937, 937, 937, 937, 937, 
	937, 937, 940, 937, 937, 937, 937, 937, 
	937, 937, 937, 941, 937, 942, 942, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 943, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 924, 921, 
	921, 921, 921, 921, 921, 921, 921, 925, 
	921, 942, 942, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	926, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 924, 921, 921, 921, 921, 921, 
	921, 921, 921, 925, 921, 945, 945, 945, 
	945, 945, 945, 945, 945, 945, 945, 944, 
	944, 944, 944, 944, 944, 944, 944, 944, 
	944, 944, 944, 944, 944, 944, 944, 944, 
	944, 944, 944, 944, 944, 944, 944, 944, 
	944, 944, 944, 944, 944, 944, 944, 944, 
	944, 944, 944, 944, 946, 944, 944, 944, 
	944, 944, 944, 944, 944, 944, 947, 944, 
	944, 944, 944, 944, 944, 944, 944, 948, 
	944, 950, 950, 950, 950, 950, 950, 950, 
	950, 950, 950, 949, 949, 949, 949, 949, 
	949, 949, 949, 949, 949, 949, 949, 949, 
	949, 949, 949, 949, 949, 949, 949, 949, 
	949, 949, 949, 949, 949, 949, 949, 949, 
	949, 949, 949, 949, 949, 949, 949, 949, 
	951, 949, 949, 949, 949, 949, 949, 949, 
	949, 949, 952, 949, 949, 949, 949, 949, 
	949, 949, 949, 953, 949, 955, 955, 955, 
	955, 955, 955, 955, 955, 955, 955, 954, 
	954, 954, 954, 954, 954, 954, 955, 955, 
	955, 955, 955, 955, 954, 954, 954, 954, 
	954, 954, 954, 954, 954, 954, 954, 954, 
	954, 954, 954, 954, 954, 954, 954, 954, 
	954, 954, 954, 954, 956, 954, 955, 955, 
	955, 955, 955, 955, 954, 954, 957, 954, 
	954, 954, 954, 954, 954, 954, 954, 958, 
	954, 959, 959, 959, 959, 959, 959, 959, 
	959, 959, 959, 921, 921, 921, 921, 921, 
	921, 921, 959, 959, 959, 959, 959, 959, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	960, 921, 959, 959, 959, 959, 959, 959, 
	921, 921, 924, 921, 921, 921, 921, 921, 
	921, 921, 921, 925, 921, 959, 959, 959, 
	959, 959, 959, 959, 959, 959, 959, 921, 
	921, 921, 921, 921, 921, 921, 959, 959, 
	959, 959, 959, 959, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 926, 921, 959, 959, 
	959, 959, 959, 959, 921, 921, 924, 921, 
	921, 921, 921, 921, 921, 921, 921, 925, 
	921, 962, 961, 963, 963, 963, 963, 963, 
	963, 963, 963, 963, 963, 961, 961, 961, 
	961, 961, 961, 961, 961, 961, 961, 961, 
	964, 961, 961, 961, 961, 961, 961, 961, 
	961, 961, 961, 961, 961, 961, 961, 961, 
	961, 961, 961, 961, 961, 961, 961, 961, 
	961, 961, 965, 961, 961, 961, 961, 961, 
	964, 961, 961, 961, 966, 961, 961, 961, 
	961, 961, 961, 961, 961, 967, 961, 968, 
	968, 968, 968, 968, 968, 968, 968, 968, 
	968, 961, 961, 961, 961, 961, 961, 961, 
	961, 961, 961, 961, 961, 961, 961, 961, 
	961, 961, 961, 961, 961, 961, 961, 961, 
	961, 961, 961, 961, 961, 961, 961, 961, 
	961, 961, 961, 961, 961, 961, 969, 961, 
	961, 961, 961, 961, 961, 961, 961, 961, 
	966, 961, 961, 961, 961, 961, 961, 961, 
	961, 967, 961, 970, 921, 971, 971, 971, 
	971, 971, 971, 971, 971, 971, 971, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 972, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 973, 921, 921, 921, 
	921, 921, 972, 921, 921, 921, 924, 921, 
	921, 921, 921, 921, 921, 921, 921, 925, 
	921, 971, 971, 971, 971, 971, 971, 971, 
	971, 971, 971, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 921, 921, 921, 921, 921, 921, 
	926, 921, 921, 921, 921, 921, 921, 921, 
	921, 921, 924, 921, 921, 921, 921, 921, 
	921, 921, 921, 925, 921, 873, 881, 814, 
	974, 872, 862, 872, 975, 976, 881, 881, 
	881, 881, 881, 881, 881, 881, 881, 881, 
	881, 881, 881, 881, 881, 881, 881, 881, 
	881, 881, 881, 881, 881, 881, 881, 881, 
	881, 881, 881, 881, 881, 881, 881, 881, 
	881, 881, 881, 881, 881, 881, 881, 881, 
	881, 881, 881, 881, 881, 881, 881, 881, 
	881, 881, 881, 881, 881, 881, 881, 881, 
	881, 881, 881, 881, 881, 862, 881, 862, 
	872, 862, 814, 872, 867, 867, 867, 867, 
	867, 867, 867, 867, 867, 867, 867, 867, 
	867, 867, 867, 867, 867, 867, 867, 867, 
	867, 867, 867, 867, 867, 867, 867, 867, 
	867, 867, 867, 867, 867, 867, 867, 867, 
	867, 867, 867, 867, 867, 867, 867, 867, 
	867, 867, 867, 867, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 867, 867, 
	867, 867, 867, 867, 977, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 867, 
	867, 867, 867, 202, 867, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 202, 
	202, 202, 202, 202, 202, 202, 202, 867, 
	867, 867, 867, 867, 202, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 978, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 979, 
	189, 189, 189, 189, 978, 189, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	189, 189, 189, 189, 831, 189, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	189, 189, 189, 189, 189, 831, 981, 980, 
	982, 983, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 978, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 979, 984, 984, 984, 
	984, 978, 984, 831, 831, 831, 831, 985, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 984, 984, 984, 
	984, 831, 984, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 984, 984, 984, 
	984, 984, 831, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 978, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 979, 984, 984, 
	984, 984, 978, 984, 831, 831, 831, 831, 
	831, 831, 986, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 984, 984, 
	984, 984, 831, 984, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 984, 984, 
	984, 984, 984, 831, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 978, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 979, 984, 
	984, 984, 984, 978, 984, 831, 831, 831, 
	831, 831, 831, 831, 831, 987, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 984, 
	984, 984, 984, 831, 984, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 984, 
	984, 984, 984, 984, 831, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 978, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 979, 
	984, 984, 984, 984, 978, 984, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 988, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	984, 984, 984, 984, 831, 984, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	984, 984, 984, 984, 984, 831, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 978, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	979, 984, 984, 984, 984, 978, 984, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 989, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 984, 984, 984, 984, 831, 984, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 984, 984, 984, 984, 984, 831, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 984, 
	978, 984, 984, 984, 984, 984, 984, 984, 
	984, 984, 984, 984, 984, 984, 984, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 979, 984, 984, 984, 984, 978, 984, 
	831, 831, 831, 988, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 984, 984, 984, 984, 831, 984, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 831, 831, 831, 831, 831, 831, 
	831, 831, 984, 984, 984, 984, 984, 831, 
	990, 992, 991, 993, 994, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 978, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 978, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 996, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 844, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 189, 978, 
	189, 189, 189, 189, 189, 189, 189, 189, 
	189, 189, 189, 189, 189, 189, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	189, 189, 189, 189, 189, 978, 189, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 189, 189, 189, 189, 844, 189, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 189, 189, 189, 189, 189, 844, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	978, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 978, 995, 
	844, 844, 844, 844, 997, 998, 844, 844, 
	844, 844, 844, 999, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 844, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 844, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 978, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 978, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 1000, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 844, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	844, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 978, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	978, 995, 844, 844, 1001, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	844, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 844, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 978, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 978, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 1002, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 844, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 844, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 978, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 978, 995, 844, 844, 844, 1003, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 844, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 844, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 978, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 978, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 1004, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 844, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 844, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 978, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 978, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 1005, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 844, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 844, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 978, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 978, 995, 844, 
	844, 844, 844, 844, 844, 1006, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 844, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 844, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	978, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 978, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 1007, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 844, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 978, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 978, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 1008, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	844, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 978, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	978, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 1009, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	844, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 844, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 978, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 978, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 1010, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 844, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 844, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 978, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 978, 995, 844, 844, 844, 844, 
	1011, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 844, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 844, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 978, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 978, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 1012, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 844, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 978, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 978, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 1013, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 844, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 978, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 978, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 1014, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 844, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 844, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	978, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 978, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 1010, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 844, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 844, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 978, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 978, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 844, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 1015, 844, 1016, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	844, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 978, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	978, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	844, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 1017, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 844, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 978, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 978, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 844, 995, 1018, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 844, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 978, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 978, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 844, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 1019, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 844, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 978, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 978, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 844, 995, 844, 844, 844, 
	1020, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 844, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 978, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 978, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 844, 995, 844, 844, 
	844, 844, 1021, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 1022, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 844, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 978, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 978, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 844, 995, 844, 
	844, 844, 844, 844, 844, 1023, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 844, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	978, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 978, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 844, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	1024, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 844, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 978, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 978, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 844, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 1020, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	844, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 978, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	978, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	844, 995, 844, 844, 844, 844, 1025, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 844, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 978, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 978, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 844, 995, 1026, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 844, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 978, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 978, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 844, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 1027, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 844, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 978, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 978, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 844, 995, 1028, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	1029, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 844, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 978, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 978, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 844, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	1030, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 844, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 978, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 978, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 844, 995, 844, 
	844, 844, 844, 1020, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 844, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	978, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 978, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 844, 995, 
	1031, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 844, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 978, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 978, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 844, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 1032, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	844, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 978, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	978, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	844, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 1033, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 844, 1034, 1034, 1034, 1034, 1034, 1034, 
	1034, 1034, 1034, 204, 205, 204, 204, 204, 
	1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 
	1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 
	1034, 1034, 204, 978, 1034, 206, 1034, 1034, 
	1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 
	1034, 1034, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 1034, 1034, 207, 1034, 
	1034, 978, 1034, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 1034, 208, 1034, 
	1034, 844, 1034, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 1034, 1034, 1034, 
	1034, 1034, 844, 221, 222, 221, 221, 221, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 221, 220, 220, 223, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 226, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 220, 220, 
	220, 220, 220, 220, 220, 220, 225, 220, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 978, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 978, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 844, 
	995, 844, 844, 844, 844, 1036, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 1037, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	844, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 978, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	978, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	844, 995, 844, 844, 844, 844, 844, 1038, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 844, 1039, 1039, 1039, 1039, 1039, 1039, 
	1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 
	1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 
	1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 
	1039, 1039, 1039, 978, 1039, 1039, 1039, 1039, 
	1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 
	1039, 1039, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 1039, 1039, 1039, 1039, 
	1039, 978, 1039, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 1039, 1039, 1039, 
	1039, 844, 1039, 844, 844, 844, 844, 844, 
	844, 844, 844, 1040, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 1039, 1039, 1039, 
	1039, 1039, 844, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 978, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 978, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 844, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 1041, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 844, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 978, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 978, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 844, 995, 844, 844, 844, 
	844, 1042, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 844, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 978, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 978, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 844, 995, 844, 844, 
	844, 1043, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 844, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 978, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 1044, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 844, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 844, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	978, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 978, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 844, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 1045, 844, 1046, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 844, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 978, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 978, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 844, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 1047, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	844, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 978, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	978, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	844, 995, 844, 844, 844, 844, 1020, 844, 
	844, 844, 1048, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 844, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 978, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 978, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 844, 995, 844, 844, 844, 844, 844, 
	1020, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 844, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 978, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 978, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 844, 995, 844, 844, 844, 1013, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 1049, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 844, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 978, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 978, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 844, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 1050, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 844, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 978, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 978, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 844, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 1030, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 844, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 978, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 978, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 844, 995, 1051, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 848, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 844, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	978, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 978, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 844, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 1052, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 844, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 978, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 978, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 844, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 1053, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	844, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 978, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	978, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	844, 995, 844, 844, 844, 844, 1013, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 844, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 978, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 978, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 844, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 1020, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 844, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 978, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 978, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 844, 995, 844, 844, 844, 844, 
	844, 1054, 844, 844, 844, 844, 844, 844, 
	844, 1020, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 844, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 978, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 978, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 844, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 1055, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 844, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 978, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 978, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 844, 995, 844, 844, 
	844, 1056, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 844, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 978, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 978, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 844, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 1057, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 844, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	978, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 978, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 844, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 1030, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 844, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 978, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 978, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 844, 
	995, 844, 844, 844, 844, 1058, 844, 844, 
	844, 1059, 844, 844, 844, 844, 844, 1060, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	844, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 978, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	978, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	844, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 1061, 844, 844, 995, 995, 995, 995, 
	995, 844, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 978, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 978, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 844, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 1027, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 844, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 978, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 978, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 844, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 1013, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 844, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 978, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 978, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 844, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	1062, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 844, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 978, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 978, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 844, 995, 844, 844, 
	844, 844, 1063, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 844, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 978, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 978, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 844, 995, 844, 
	844, 844, 1064, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 1065, 1066, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 844, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	978, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 978, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 844, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 1013, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 844, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 978, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 978, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 844, 
	995, 844, 844, 1067, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	844, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 978, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	978, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	844, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 1068, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 844, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 978, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 978, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 844, 995, 844, 844, 844, 844, 1054, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 844, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 978, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 978, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 844, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 1069, 844, 844, 
	1070, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 844, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 978, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 978, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 844, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 1013, 844, 995, 
	995, 995, 995, 995, 844, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 978, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 978, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 844, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 1071, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 844, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 978, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 978, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 844, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 1027, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 844, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	978, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 978, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 844, 995, 
	844, 844, 844, 844, 1072, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 1073, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 844, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 978, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 978, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 844, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 1074, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	844, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 978, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	978, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	844, 995, 844, 844, 844, 844, 844, 1013, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 844, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 978, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 978, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 844, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 1075, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 844, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 978, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 978, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 844, 995, 844, 844, 844, 844, 
	1076, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 844, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 978, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 978, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 844, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 1062, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 844, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 978, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 978, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 844, 995, 844, 844, 
	844, 844, 844, 844, 844, 1077, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 1078, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 844, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 978, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 978, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 844, 995, 844, 
	844, 844, 844, 1024, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 844, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	978, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 978, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 844, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 1053, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 844, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 978, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 978, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 844, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 1079, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	844, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 978, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	978, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	844, 995, 844, 844, 844, 1080, 844, 844, 
	844, 844, 844, 844, 844, 1081, 844, 844, 
	844, 844, 844, 844, 844, 1082, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 844, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 978, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 978, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 844, 995, 844, 844, 844, 844, 1083, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 844, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 978, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 978, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 844, 995, 844, 844, 844, 844, 
	844, 1019, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 844, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 978, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 978, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 844, 995, 844, 844, 844, 
	844, 1084, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 844, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 978, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 978, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 844, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	1085, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 844, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 978, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 978, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 844, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 1054, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 844, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	978, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 978, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 844, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	1086, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 844, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 978, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 978, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 844, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 1054, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	844, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 978, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	978, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	844, 995, 844, 844, 844, 844, 844, 844, 
	844, 1087, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 844, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 978, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 995, 995, 995, 995, 
	995, 978, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 844, 995, 844, 844, 844, 844, 1024, 
	844, 844, 844, 1088, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 844, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 978, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 995, 995, 995, 
	995, 995, 978, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 844, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 1089, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 844, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 978, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 995, 995, 
	995, 995, 995, 978, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 844, 995, 844, 844, 844, 
	844, 1054, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 844, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 978, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 995, 
	995, 995, 995, 995, 978, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 844, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 1090, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 844, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 978, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	995, 995, 995, 995, 995, 978, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 844, 995, 844, 
	844, 844, 844, 1091, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 844, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	978, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 995, 995, 995, 995, 995, 978, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 844, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 1092, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 844, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	995, 978, 995, 995, 995, 995, 995, 995, 
	995, 995, 995, 995, 995, 995, 995, 995, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 995, 995, 995, 995, 995, 978, 
	995, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 844, 
	995, 844, 844, 844, 1062, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 844, 844, 844, 844, 844, 
	844, 844, 844, 995, 995, 995, 995, 995, 
	844, 1093, 871, 861, 861, 861, 861, 861, 
	861, 861, 861, 861, 861, 861, 861, 861, 
	861, 861, 861, 861, 861, 861, 861, 861, 
	861, 861, 861, 861, 861, 861, 861, 861, 
	861, 861, 861, 861, 861, 861, 861, 861, 
	861, 861, 861, 861, 861, 861, 861, 861, 
	861, 861, 861, 861, 861, 861, 861, 861, 
	861, 861, 861, 861, 861, 861, 861, 861, 
	861, 814, 861, 1094, 1096, 1095, 1096, 1096, 
	1096, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 
	1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 
	1095, 1095, 1095, 1096, 1095, 1095, 1097, 1095, 
	1095, 1098, 1095, 1095, 1095, 1095, 1095, 1095, 
	1095, 234, 1095, 1095, 1095, 1095, 1095, 1095, 
	1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 
	1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 
	1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 
	1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 
	1095, 1095, 1095, 1095, 1095, 1095, 1095, 1099, 
	1095, 230, 231, 230, 230, 230, 1100, 1100, 
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 
	230, 1100, 1100, 232, 1100, 1100, 233, 1100, 
	1100, 1100, 1100, 1100, 1100, 1100, 234, 1100, 
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 
	1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 
	1100, 1100, 1100, 1100, 235, 1100, 237, 1101, 
	237, 237, 237, 1101, 1101, 1101, 1101, 1101, 
	1101, 1101, 1101, 1101, 1101, 1101, 1101, 1101, 
	1101, 1101, 1101, 1101, 1101, 237, 1101, 1101, 
	232, 1101, 1101, 1101, 1101, 1101, 1101, 1101, 
	1101, 1101, 1101, 1101, 1101, 1101, 1101, 1101, 
	1101, 1101, 1101, 1101, 1101, 1101, 1101, 1101, 
	1101, 1101, 1101, 1101, 1101, 1101, 1101, 1101, 
	1101, 1101, 1101, 1101, 1101, 1101, 1101, 1101, 
	1101, 1101, 1101, 1101, 1101, 1101, 1101, 1101, 
	1101, 1101, 1101, 1101, 1101, 1101, 1101, 1101, 
	1101, 235, 1101, 1103, 1102, 1105, 1104, 240, 
	239, 245, 1100, 243, 1100, 1107, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1108, 1106, 1107, 1106, 1107, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1110, 
	1106, 1107, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1111, 1106, 1107, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 
	1106, 1112, 1106, 1114, 1112, 1115, 1116, 1116, 
	1116, 1115, 1116, 1116, 1116, 1116, 1117, 1118, 
	1117, 1117, 1117, 1116, 1116, 1116, 1116, 1116, 
	1116, 1116, 1116, 1116, 1116, 1116, 1116, 1115, 
	1116, 1116, 1116, 1116, 1116, 1117, 1116, 1116, 
	1119, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 
	1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 
	1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 
	1116, 1116, 1120, 1116, 1116, 1116, 1116, 1116, 
	1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 
	1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 
	1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 
	1116, 1121, 1116, 1116, 1122, 1116, 1117, 1123, 
	1117, 1117, 1117, 1123, 1123, 1123, 1123, 1123, 
	1123, 1123, 1123, 1123, 1123, 1123, 1123, 1123, 
	1123, 1123, 1123, 1123, 1123, 1117, 1123, 1124, 
	1125, 1126, 1127, 1128, 1130, 1129, 1132, 1133, 
	1132, 1132, 1132, 1131, 1131, 1131, 1131, 1131, 
	1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 
	1131, 1131, 1131, 1131, 1131, 1132, 1131, 1118, 
	1129, 1134, 1129, 0
]

class << self
	attr_accessor :_lex_trans_targs
	private :_lex_trans_targs, :_lex_trans_targs=
end
self._lex_trans_targs = [
	130, 0, 2, 131, 132, 133, 4, 134, 
	135, 135, 135, 135, 248, 248, 9, 248, 
	8, 10, 277, 281, 281, 277, 14, 13, 
	277, 16, 17, 279, 280, 282, 283, 281, 
	277, 284, 285, 287, 11, 12, 288, 13, 
	289, 15, 281, 18, 19, 24, 31, 291, 
	292, 17, 279, 280, 282, 283, 281, 277, 
	284, 285, 287, 11, 12, 288, 289, 15, 
	18, 19, 24, 31, 291, 292, 290, 20, 
	21, 22, 23, 25, 26, 29, 27, 28, 
	30, 32, 33, 277, 35, 36, 37, 39, 
	42, 40, 41, 43, 45, 308, 46, 310, 
	311, 48, 312, 308, 308, 49, 46, 310, 
	311, 48, 312, 346, 51, 52, 53, 54, 
	349, 346, 346, 346, 346, 57, 58, 59, 
	346, 62, 57, 58, 59, 346, 62, 60, 
	60, 58, 59, 359, 61, 60, 60, 58, 
	59, 359, 61, 58, 346, 346, 64, 367, 
	368, 374, 391, 393, 72, 73, 74, 346, 
	68, 69, 70, 392, 70, 392, 71, 73, 
	394, 75, 346, 400, 77, 76, 402, 79, 
	80, 399, 346, 82, 346, 83, 84, 82, 
	346, 83, 509, 86, 509, 85, 87, 517, 
	517, 517, 90, 536, 535, 517, 538, 540, 
	542, 517, 96, 97, 98, 546, 517, 100, 
	101, 557, 525, 581, 104, 105, 106, 110, 
	111, 104, 105, 106, 110, 111, 107, 107, 
	105, 106, 108, 109, 107, 107, 105, 106, 
	108, 109, 630, 105, 517, 699, 112, 701, 
	114, 118, 702, 116, 699, 113, 699, 115, 
	701, 115, 701, 117, 701, 699, 713, 120, 
	121, 122, 719, 124, 125, 126, 127, 128, 
	713, 713, 129, 1, 3, 130, 130, 130, 
	135, 135, 136, 137, 138, 139, 141, 144, 
	145, 146, 147, 135, 148, 149, 151, 153, 
	154, 155, 159, 161, 162, 163, 180, 185, 
	192, 197, 204, 211, 164, 214, 215, 219, 
	213, 223, 231, 235, 237, 242, 244, 247, 
	135, 135, 135, 135, 140, 135, 140, 135, 
	5, 142, 143, 135, 6, 135, 135, 150, 
	152, 135, 135, 135, 156, 157, 158, 154, 
	160, 135, 165, 166, 175, 178, 167, 168, 
	169, 170, 171, 172, 173, 174, 164, 176, 
	177, 179, 181, 184, 182, 183, 186, 189, 
	187, 188, 190, 191, 193, 195, 194, 196, 
	198, 199, 135, 200, 201, 202, 203, 135, 
	205, 208, 206, 207, 209, 210, 212, 216, 
	217, 218, 220, 222, 221, 224, 225, 226, 
	228, 227, 229, 230, 232, 233, 234, 236, 
	238, 239, 240, 241, 243, 245, 246, 248, 
	248, 249, 250, 252, 253, 254, 248, 248, 
	251, 248, 251, 248, 7, 255, 248, 256, 
	256, 257, 258, 259, 260, 256, 262, 263, 
	264, 265, 267, 269, 270, 273, 274, 275, 
	276, 256, 256, 256, 256, 261, 256, 261, 
	266, 256, 268, 256, 271, 256, 272, 256, 
	256, 277, 277, 278, 293, 294, 280, 296, 
	297, 284, 298, 299, 300, 301, 302, 304, 
	305, 306, 307, 277, 277, 277, 277, 277, 
	277, 281, 286, 277, 277, 277, 277, 277, 
	277, 277, 277, 277, 295, 277, 295, 277, 
	277, 277, 277, 303, 277, 34, 38, 44, 
	308, 309, 313, 308, 308, 47, 311, 314, 
	314, 315, 316, 318, 320, 321, 314, 314, 
	317, 314, 317, 314, 319, 314, 314, 314, 
	322, 322, 323, 324, 325, 327, 328, 330, 
	331, 336, 343, 322, 322, 322, 326, 322, 
	326, 322, 322, 329, 322, 322, 327, 332, 
	333, 334, 335, 337, 338, 341, 339, 340, 
	342, 344, 345, 346, 347, 348, 350, 351, 
	353, 354, 355, 356, 358, 360, 361, 364, 
	365, 390, 396, 397, 398, 399, 407, 408, 
	409, 410, 357, 412, 430, 435, 442, 447, 
	449, 455, 413, 458, 459, 463, 457, 467, 
	478, 482, 485, 493, 497, 500, 501, 346, 
	346, 50, 346, 346, 346, 346, 346, 352, 
	346, 352, 346, 346, 55, 346, 56, 346, 
	346, 357, 346, 362, 346, 363, 346, 346, 
	346, 366, 346, 63, 369, 370, 371, 346, 
	372, 65, 375, 376, 379, 66, 388, 389, 
	346, 346, 346, 373, 346, 377, 378, 368, 
	346, 377, 346, 377, 368, 380, 382, 346, 
	381, 346, 346, 383, 386, 387, 346, 384, 
	385, 346, 346, 346, 346, 67, 395, 346, 
	346, 346, 346, 346, 346, 76, 401, 346, 
	346, 403, 405, 406, 346, 404, 346, 346, 
	346, 78, 81, 346, 411, 346, 82, 83, 
	414, 415, 425, 428, 416, 417, 418, 419, 
	420, 421, 422, 423, 424, 426, 427, 429, 
	431, 434, 432, 433, 436, 439, 437, 438, 
	440, 441, 443, 445, 444, 446, 448, 450, 
	452, 451, 453, 454, 456, 424, 460, 461, 
	462, 464, 466, 465, 468, 469, 470, 475, 
	471, 472, 473, 346, 400, 413, 76, 474, 
	405, 476, 477, 479, 480, 481, 483, 484, 
	486, 487, 488, 491, 489, 490, 492, 494, 
	495, 496, 498, 499, 346, 357, 502, 502, 
	503, 504, 505, 507, 502, 502, 502, 506, 
	502, 506, 502, 508, 502, 509, 509, 510, 
	511, 509, 512, 514, 515, 509, 509, 509, 
	513, 509, 513, 509, 516, 509, 517, 517, 
	518, 519, 520, 517, 521, 523, 526, 527, 
	528, 529, 530, 517, 531, 532, 539, 567, 
	571, 517, 572, 574, 576, 517, 577, 578, 
	582, 586, 588, 589, 591, 592, 611, 616, 
	623, 631, 638, 645, 593, 650, 651, 655, 
	649, 660, 670, 676, 679, 688, 692, 696, 
	697, 698, 526, 517, 517, 517, 517, 517, 
	522, 517, 522, 517, 88, 524, 517, 517, 
	517, 517, 517, 517, 517, 517, 517, 533, 
	537, 517, 534, 517, 517, 89, 91, 537, 
	92, 517, 537, 92, 517, 93, 548, 559, 
	562, 541, 563, 564, 549, 553, 555, 517, 
	541, 93, 543, 545, 94, 517, 543, 517, 
	544, 517, 517, 95, 547, 517, 517, 550, 
	552, 517, 550, 551, 553, 555, 552, 517, 
	554, 517, 517, 556, 558, 517, 99, 517, 
	517, 517, 560, 552, 553, 555, 560, 561, 
	517, 550, 552, 553, 555, 517, 550, 552, 
	553, 555, 517, 565, 552, 553, 555, 565, 
	566, 517, 93, 567, 541, 568, 553, 555, 
	569, 552, 93, 569, 541, 570, 573, 575, 
	517, 102, 579, 103, 517, 580, 517, 517, 
	517, 583, 584, 585, 578, 587, 517, 517, 
	590, 517, 517, 517, 594, 595, 604, 609, 
	596, 597, 598, 599, 600, 601, 602, 603, 
	593, 605, 606, 607, 608, 593, 610, 612, 
	615, 613, 614, 593, 593, 617, 620, 618, 
	619, 621, 622, 593, 624, 626, 625, 627, 
	628, 629, 517, 517, 632, 593, 633, 517, 
	634, 635, 636, 637, 579, 639, 642, 640, 
	641, 643, 644, 646, 647, 648, 593, 652, 
	653, 654, 656, 658, 659, 657, 593, 661, 
	662, 663, 666, 664, 665, 667, 668, 669, 
	671, 673, 672, 674, 675, 677, 678, 680, 
	681, 683, 686, 682, 684, 685, 687, 689, 
	690, 691, 693, 694, 695, 517, 517, 699, 
	700, 704, 705, 706, 699, 699, 699, 703, 
	699, 699, 708, 707, 709, 707, 710, 711, 
	712, 707, 707, 713, 713, 714, 715, 716, 
	718, 720, 721, 713, 713, 713, 717, 713, 
	717, 713, 119, 713, 713, 713, 123
]

class << self
	attr_accessor :_lex_trans_actions
	private :_lex_trans_actions, :_lex_trans_actions=
end
self._lex_trans_actions = [
	53, 0, 0, 0, 0, 0, 0, 0, 
	95, 65, 93, 71, 111, 101, 0, 99, 
	0, 0, 157, 730, 736, 161, 0, 0, 
	135, 1, 3, 481, 988, 3, 484, 988, 
	499, 988, 3, 3, 481, 3, 487, 3, 
	3, 3, 914, 3, 3, 3, 3, 3, 
	3, 0, 11, 942, 0, 13, 942, 139, 
	942, 0, 0, 11, 0, 15, 0, 0, 
	0, 0, 0, 0, 0, 0, 736, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 159, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 169, 0, 0, 
	745, 0, 745, 171, 163, 1, 3, 3, 
	918, 3, 918, 261, 0, 0, 0, 0, 
	0, 255, 201, 265, 223, 0, 1, 0, 
	195, 0, 3, 478, 3, 517, 3, 5, 
	550, 838, 550, 993, 550, 0, 7, 553, 
	7, 930, 7, 397, 263, 209, 0, 0, 
	0, 0, 754, 754, 0, 0, 0, 257, 
	0, 0, 17, 679, 0, 1, 0, 17, 
	754, 0, 217, 769, 0, 0, 0, 0, 
	0, 769, 259, 0, 219, 0, 1, 3, 
	520, 3, 287, 0, 275, 0, 0, 351, 
	295, 347, 0, 51, 51, 353, 910, 808, 
	808, 349, 0, 0, 0, 0, 345, 0, 
	0, 0, 0, 0, 0, 1, 0, 0, 
	0, 3, 478, 3, 3, 3, 5, 550, 
	838, 550, 550, 550, 0, 7, 553, 7, 
	7, 7, 934, 397, 291, 371, 0, 832, 
	0, 45, 45, 0, 369, 0, 373, 5, 
	998, 0, 938, 1, 926, 357, 393, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	381, 427, 395, 0, 0, 55, 59, 57, 
	75, 73, 0, 1, 0, 0, 51, 51, 
	0, 0, 0, 67, 0, 0, 0, 0, 
	724, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 727, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	89, 490, 85, 842, 5, 556, 0, 91, 
	0, 0, 0, 83, 0, 87, 69, 0, 
	0, 97, 63, 79, 0, 0, 0, 721, 
	0, 81, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 721, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 77, 0, 0, 0, 0, 61, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 105, 
	103, 0, 0, 51, 51, 0, 107, 846, 
	5, 559, 0, 109, 0, 1, 493, 117, 
	115, 0, 1, 0, 0, 113, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 125, 496, 123, 850, 5, 562, 0, 
	0, 127, 0, 119, 0, 589, 0, 601, 
	121, 143, 141, 739, 1, 0, 736, 0, 
	0, 736, 0, 0, 0, 0, 0, 0, 
	51, 51, 51, 153, 151, 131, 406, 661, 
	147, 733, 0, 149, 133, 145, 137, 403, 
	649, 463, 505, 854, 5, 565, 0, 664, 
	155, 129, 400, 906, 502, 0, 0, 0, 
	165, 51, 51, 167, 667, 0, 742, 177, 
	175, 0, 0, 0, 0, 0, 179, 858, 
	5, 568, 0, 181, 1, 508, 173, 466, 
	185, 183, 0, 1, 0, 751, 0, 0, 
	0, 0, 0, 189, 514, 862, 5, 571, 
	0, 193, 191, 1, 511, 187, 748, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 225, 0, 715, 0, 0, 
	51, 760, 0, 0, 760, 760, 0, 0, 
	51, 775, 0, 775, 0, 775, 775, 775, 
	0, 0, 775, 772, 772, 772, 772, 772, 
	772, 772, 772, 772, 772, 772, 772, 772, 
	772, 772, 772, 772, 772, 0, 0, 249, 
	523, 3, 251, 221, 412, 253, 866, 5, 
	574, 0, 231, 199, 0, 241, 0, 670, 
	229, 760, 227, 0, 243, 0, 245, 409, 
	197, 0, 205, 0, 0, 0, 0, 215, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	235, 207, 203, 0, 685, 19, 0, 19, 
	237, 0, 688, 21, 21, 0, 0, 592, 
	0, 604, 613, 0, 0, 0, 619, 0, 
	0, 637, 643, 631, 625, 0, 0, 233, 
	682, 239, 213, 211, 595, 9, 0, 607, 
	616, 0, 769, 0, 622, 0, 640, 634, 
	628, 0, 0, 652, 1, 247, 25, 25, 
	772, 772, 772, 772, 772, 772, 772, 772, 
	772, 772, 772, 772, 769, 772, 772, 772, 
	772, 772, 772, 772, 772, 772, 772, 772, 
	772, 772, 772, 772, 772, 772, 772, 772, 
	772, 772, 772, 772, 772, 766, 772, 772, 
	772, 772, 772, 772, 772, 772, 772, 772, 
	772, 772, 763, 691, 946, 950, 23, 23, 
	763, 772, 772, 772, 772, 772, 772, 772, 
	772, 772, 772, 772, 772, 772, 772, 772, 
	772, 772, 772, 772, 469, 757, 269, 267, 
	0, 1, 0, 0, 271, 529, 870, 5, 
	577, 0, 273, 1, 526, 281, 279, 0, 
	1, 277, 0, 51, 0, 283, 535, 874, 
	5, 580, 0, 285, 1, 532, 315, 313, 
	0, 1, 0, 293, 0, 51, 826, 0, 
	0, 0, 0, 307, 0, 0, 802, 802, 
	0, 309, 0, 0, 0, 305, 51, 811, 
	811, 811, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 820, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 829, 341, 544, 337, 301, 878, 
	5, 583, 0, 343, 0, 0, 327, 303, 
	335, 297, 673, 676, 333, 289, 329, 0, 
	817, 339, 0, 415, 323, 0, 0, 814, 
	0, 538, 922, 3, 983, 890, 37, 0, 
	0, 1014, 0, 0, 37, 709, 709, 902, 
	805, 0, 43, 718, 0, 898, 41, 448, 
	0, 451, 454, 0, 0, 460, 457, 37, 
	37, 894, 0, 0, 39, 39, 0, 433, 
	0, 442, 430, 51, 0, 439, 0, 445, 
	436, 973, 33, 33, 703, 703, 0, 0, 
	963, 29, 29, 697, 697, 968, 31, 31, 
	700, 700, 958, 27, 27, 694, 694, 0, 
	0, 978, 886, 954, 1008, 35, 706, 706, 
	954, 35, 712, 802, 1003, 0, 0, 0, 
	299, 0, 823, 0, 598, 0, 610, 646, 
	325, 811, 811, 811, 799, 811, 655, 311, 
	1, 541, 658, 331, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	796, 0, 0, 0, 0, 799, 0, 0, 
	0, 0, 0, 781, 787, 0, 0, 0, 
	0, 0, 0, 790, 0, 0, 0, 0, 
	0, 787, 321, 319, 0, 778, 0, 317, 
	0, 0, 0, 0, 793, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 784, 0, 
	0, 0, 0, 0, 0, 0, 793, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 472, 475, 359, 
	835, 835, 45, 835, 367, 361, 365, 0, 
	363, 355, 0, 421, 0, 377, 0, 0, 
	0, 375, 418, 385, 383, 0, 1, 0, 
	51, 0, 51, 387, 547, 882, 5, 586, 
	0, 391, 0, 389, 379, 424, 0
]

class << self
	attr_accessor :_lex_to_state_actions
	private :_lex_to_state_actions, :_lex_to_state_actions=
end
self._lex_to_state_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 47, 47, 0, 0, 0, 0, 47, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	47, 0, 0, 0, 0, 0, 0, 0, 
	47, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 47, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 47, 0, 0, 0, 
	0, 0, 47, 0, 0, 0, 0, 0, 
	0, 0, 47, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 47, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 47, 0, 
	0, 0, 0, 0, 0, 47, 0, 0, 
	0, 0, 0, 0, 0, 47, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 47, 0, 0, 0, 0, 
	0, 0, 0, 47, 0, 0, 0, 0, 
	0, 47, 0, 0, 0, 0, 0, 0, 
	0, 0
]

class << self
	attr_accessor :_lex_from_state_actions
	private :_lex_from_state_actions, :_lex_from_state_actions=
end
self._lex_from_state_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 49, 49, 0, 0, 0, 0, 49, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	49, 0, 0, 0, 0, 0, 0, 0, 
	49, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 49, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 49, 0, 0, 0, 
	0, 0, 49, 0, 0, 0, 0, 0, 
	0, 0, 49, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 49, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 49, 0, 
	0, 0, 0, 0, 0, 49, 0, 0, 
	0, 0, 0, 0, 0, 49, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 49, 0, 0, 0, 0, 
	0, 0, 0, 49, 0, 0, 0, 0, 
	0, 49, 0, 0, 0, 0, 0, 0, 
	0, 0
]

class << self
	attr_accessor :_lex_eof_trans
	private :_lex_eof_trans, :_lex_eof_trans=
end
self._lex_eof_trans = [
	0, 0, 0, 0, 0, 9, 11, 13, 
	13, 13, 13, 19, 19, 22, 22, 19, 
	19, 19, 19, 19, 19, 19, 19, 19, 
	19, 19, 19, 19, 19, 19, 19, 19, 
	19, 19, 84, 84, 84, 84, 84, 84, 
	84, 84, 84, 84, 84, 84, 94, 100, 
	94, 94, 108, 108, 108, 108, 108, 114, 
	116, 116, 116, 116, 116, 116, 116, 141, 
	141, 141, 141, 141, 152, 116, 116, 152, 
	141, 141, 141, 116, 116, 116, 141, 141, 
	141, 141, 171, 171, 171, 179, 179, 179, 
	184, 186, 186, 186, 190, 190, 190, 194, 
	194, 194, 194, 199, 199, 199, 184, 190, 
	190, 190, 190, 190, 190, 190, 190, 190, 
	230, 237, 239, 239, 239, 239, 230, 247, 
	247, 247, 247, 247, 247, 247, 247, 247, 
	247, 0, 0, 262, 262, 263, 264, 0, 
	305, 306, 307, 308, 310, 312, 316, 316, 
	307, 307, 307, 307, 318, 307, 307, 312, 
	307, 307, 322, 324, 324, 324, 324, 324, 
	324, 312, 312, 330, 322, 330, 330, 330, 
	330, 330, 330, 330, 330, 330, 330, 330, 
	330, 330, 330, 330, 330, 330, 330, 330, 
	330, 330, 330, 330, 330, 330, 330, 330, 
	330, 330, 330, 330, 330, 330, 330, 363, 
	330, 330, 330, 330, 330, 330, 330, 330, 
	330, 330, 330, 330, 330, 330, 330, 330, 
	330, 330, 330, 330, 330, 330, 330, 330, 
	330, 330, 330, 330, 330, 330, 330, 330, 
	330, 330, 330, 330, 330, 330, 330, 330, 
	330, 330, 330, 330, 330, 330, 330, 307, 
	0, 407, 408, 410, 412, 412, 412, 415, 
	0, 434, 435, 436, 437, 439, 436, 436, 
	436, 436, 436, 442, 436, 436, 444, 446, 
	448, 442, 442, 449, 436, 0, 468, 469, 
	22, 22, 472, 473, 22, 469, 469, 476, 
	478, 481, 469, 482, 469, 483, 484, 486, 
	488, 469, 476, 489, 489, 478, 489, 493, 
	489, 489, 489, 489, 0, 500, 501, 100, 
	500, 500, 0, 511, 512, 514, 516, 518, 
	516, 520, 0, 532, 533, 534, 536, 538, 
	539, 541, 542, 542, 542, 542, 542, 542, 
	542, 542, 542, 542, 542, 542, 542, 542, 
	542, 542, 0, 600, 601, 603, 606, 607, 
	609, 611, 614, 616, 617, 116, 614, 619, 
	614, 606, 621, 623, 606, 606, 641, 641, 
	641, 641, 641, 641, 641, 641, 641, 641, 
	645, 649, 651, 641, 656, 658, 659, 663, 
	666, 667, 668, 669, 641, 641, 606, 672, 
	673, 672, 672, 606, 606, 606, 674, 116, 
	677, 680, 681, 685, 687, 688, 689, 606, 
	606, 692, 606, 601, 694, 694, 694, 694, 
	694, 694, 694, 694, 694, 694, 694, 694, 
	116, 694, 694, 694, 694, 694, 694, 694, 
	694, 694, 694, 694, 694, 694, 694, 694, 
	694, 694, 694, 694, 694, 694, 694, 694, 
	694, 694, 694, 694, 694, 694, 694, 694, 
	694, 694, 694, 694, 694, 694, 694, 694, 
	694, 694, 694, 694, 694, 694, 694, 694, 
	694, 748, 681, 694, 694, 694, 694, 694, 
	694, 694, 694, 694, 694, 694, 694, 694, 
	694, 694, 694, 694, 694, 694, 694, 694, 
	694, 694, 694, 694, 773, 606, 0, 781, 
	782, 783, 785, 787, 789, 0, 798, 799, 
	800, 802, 804, 804, 806, 0, 860, 861, 
	862, 864, 866, 868, 871, 871, 190, 873, 
	875, 876, 877, 873, 879, 882, 882, 885, 
	885, 190, 890, 893, 904, 190, 910, 912, 
	914, 915, 918, 919, 893, 893, 922, 922, 
	922, 928, 930, 931, 934, 936, 937, 938, 
	922, 922, 945, 950, 955, 922, 922, 962, 
	962, 922, 922, 882, 873, 873, 882, 873, 
	873, 868, 190, 981, 983, 984, 985, 985, 
	985, 985, 985, 985, 991, 868, 994, 995, 
	996, 190, 996, 996, 996, 996, 996, 996, 
	996, 996, 996, 996, 996, 996, 996, 996, 
	996, 996, 996, 996, 996, 996, 996, 996, 
	996, 996, 996, 996, 996, 996, 996, 996, 
	996, 996, 996, 996, 996, 1035, 1036, 996, 
	996, 1040, 996, 996, 996, 996, 996, 996, 
	996, 996, 996, 996, 996, 996, 996, 996, 
	996, 996, 996, 996, 996, 996, 996, 996, 
	996, 996, 996, 996, 996, 996, 996, 996, 
	996, 996, 996, 996, 996, 996, 996, 996, 
	996, 996, 996, 996, 996, 996, 996, 996, 
	996, 996, 996, 996, 996, 996, 996, 996, 
	996, 996, 996, 996, 996, 996, 996, 996, 
	1094, 862, 1095, 0, 1101, 1102, 1103, 1105, 
	1101, 1101, 1101, 0, 1110, 1110, 1110, 1110, 
	1114, 0, 1124, 1125, 1126, 1128, 1130, 1132, 
	1130, 1130
]

class << self
	attr_accessor :lex_start
end
self.lex_start = 129;
class << self
	attr_accessor :lex_error
end
self.lex_error = 0;

class << self
	attr_accessor :lex_en_expr_variable
end
self.lex_en_expr_variable = 130;
class << self
	attr_accessor :lex_en_expr_fname
end
self.lex_en_expr_fname = 135;
class << self
	attr_accessor :lex_en_expr_endfn
end
self.lex_en_expr_endfn = 248;
class << self
	attr_accessor :lex_en_expr_dot
end
self.lex_en_expr_dot = 256;
class << self
	attr_accessor :lex_en_expr_arg
end
self.lex_en_expr_arg = 277;
class << self
	attr_accessor :lex_en_expr_cmdarg
end
self.lex_en_expr_cmdarg = 308;
class << self
	attr_accessor :lex_en_expr_endarg
end
self.lex_en_expr_endarg = 314;
class << self
	attr_accessor :lex_en_expr_mid
end
self.lex_en_expr_mid = 322;
class << self
	attr_accessor :lex_en_expr_beg
end
self.lex_en_expr_beg = 346;
class << self
	attr_accessor :lex_en_expr_labelarg
end
self.lex_en_expr_labelarg = 502;
class << self
	attr_accessor :lex_en_expr_value
end
self.lex_en_expr_value = 509;
class << self
	attr_accessor :lex_en_expr_end
end
self.lex_en_expr_end = 517;
class << self
	attr_accessor :lex_en_leading_dot
end
self.lex_en_leading_dot = 699;
class << self
	attr_accessor :lex_en_line_comment
end
self.lex_en_line_comment = 707;
class << self
	attr_accessor :lex_en_line_begin
end
self.lex_en_line_begin = 713;
class << self
	attr_accessor :lex_en_inside_string
end
self.lex_en_inside_string = 129;


# line 83 "lib/parser/ruby-next/lexer.rl"
  # %

  attr_reader   :source_buffer

  attr_accessor :diagnostics
  attr_accessor :static_env
  attr_accessor :force_utf32

  attr_accessor :cond, :cmdarg, :context, :command_start

  attr_accessor :tokens, :comments

  attr_reader :paren_nest, :cmdarg_stack, :cond_stack, :lambda_stack, :version

  def initialize(version)
    @version    = version
    @static_env = nil
    @context    = nil

    @tokens     = nil
    @comments   = nil

    @_lex_actions =
      if self.class.respond_to?(:_lex_actions, true)
        self.class.send :_lex_actions
      else
        []
      end

    @emit_integer = lambda { |chars, p| emit(:tINTEGER,   chars); p }
    @emit_rational = lambda { |chars, p| emit(:tRATIONAL,  Rational(chars)); p }
    @emit_imaginary = lambda { |chars, p| emit(:tIMAGINARY, Complex(0, chars)); p }
    @emit_imaginary_rational = lambda { |chars, p| emit(:tIMAGINARY, Complex(0, Rational(chars))); p }
    @emit_integer_re = lambda { |chars, p| emit(:tINTEGER,   chars, @ts, @te - 2); p - 2 }
    @emit_integer_if = lambda { |chars, p| emit(:tINTEGER,   chars, @ts, @te - 2); p - 2 }
    @emit_integer_rescue = lambda { |chars, p| emit(:tINTEGER,   chars, @ts, @te - 6); p - 6 }

    @emit_float = lambda { |chars, p| emit(:tFLOAT,     Float(chars)); p }
    @emit_imaginary_float = lambda { |chars, p| emit(:tIMAGINARY, Complex(0, Float(chars))); p }
    @emit_float_if =     lambda { |chars, p| emit(:tFLOAT,     Float(chars), @ts, @te - 2); p - 2 }
    @emit_float_rescue = lambda { |chars, p| emit(:tFLOAT,     Float(chars), @ts, @te - 6); p - 6 }

    reset
  end

  def reset(reset_state=true)
    # Ragel state:
    if reset_state
      # Unit tests set state prior to resetting lexer.
      @cs     = self.class.lex_en_line_begin

      @cond   = StackState.new('cond')
      @cmdarg = StackState.new('cmdarg')
      @cond_stack   = []
      @cmdarg_stack = []
    end

    @force_utf32   = false # Set to true by some tests

    @source_pts    = nil # @source as a codepoint array

    @p             = 0   # stream position (saved manually in #advance)
    @ts            = nil # token start
    @te            = nil # token end
    @act           = 0   # next action

    @stack         = []  # state stack
    @top           = 0   # state stack top pointer

    # Lexer state:
    @token_queue   = []

    @eq_begin_s    = nil # location of last encountered =begin
    @sharp_s       = nil # location of last encountered #

    @newline_s     = nil # location of last encountered newline

    @num_base      = nil # last numeric base
    @num_digits_s  = nil # starting position of numeric digits
    @num_suffix_s  = nil # starting position of numeric suffix
    @num_xfrm      = nil # numeric suffix-induced transformation

    # Ruby 1.9 ->() lambdas emit a distinct token if do/{ is
    # encountered after a matching closing parenthesis.
    @paren_nest    = 0
    @lambda_stack  = []

    # If the lexer is in `command state' (aka expr_value)
    # at the entry to #advance, it will transition to expr_cmdarg
    # instead of expr_arg at certain points.
    @command_start = true

    # State before =begin / =end block comment
    @cs_before_block_comment = self.class.lex_en_line_begin

    @strings = Parser::LexerStrings.new(self, @version)
  end

  def source_buffer=(source_buffer)
    @source_buffer = source_buffer

    if @source_buffer
      source = @source_buffer.source

      if source.encoding == Encoding::UTF_8
        @source_pts = source.unpack('U*')
      else
        @source_pts = source.unpack('C*')
      end

      if @source_pts[0] == 0xfeff
        # Skip byte order mark.
        @p = 1
      end
    else
      @source_pts = nil
    end

    @strings.source_buffer = @source_buffer
    @strings.source_pts = @source_pts
  end

  def encoding
    @source_buffer.source.encoding
  end

  LEX_STATES = {
    :line_begin    => lex_en_line_begin,
    :expr_dot      => lex_en_expr_dot,
    :expr_fname    => lex_en_expr_fname,
    :expr_value    => lex_en_expr_value,
    :expr_beg      => lex_en_expr_beg,
    :expr_mid      => lex_en_expr_mid,
    :expr_arg      => lex_en_expr_arg,
    :expr_cmdarg   => lex_en_expr_cmdarg,
    :expr_end      => lex_en_expr_end,
    :expr_endarg   => lex_en_expr_endarg,
    :expr_endfn    => lex_en_expr_endfn,
    :expr_labelarg => lex_en_expr_labelarg,

    :inside_string => lex_en_inside_string
  }

  def state
    LEX_STATES.invert.fetch(@cs, @cs)
  end

  def state=(state)
    @cs = LEX_STATES.fetch(state)
  end

  def push_cmdarg
    @cmdarg_stack.push(@cmdarg)
    @cmdarg = StackState.new("cmdarg.#{@cmdarg_stack.count}")
  end

  def pop_cmdarg
    @cmdarg = @cmdarg_stack.pop
  end

  def push_cond
    @cond_stack.push(@cond)
    @cond = StackState.new("cond.#{@cond_stack.count}")
  end

  def pop_cond
    @cond = @cond_stack.pop
  end

  def dedent_level
    @strings.dedent_level
  end

  # Return next token: [type, value].
  def advance
    unless @token_queue.empty?
      return @token_queue.shift
    end

    # Ugly, but dependent on Ragel output. Consider refactoring it somehow.
    klass = self.class
    _lex_trans_keys         = klass.send :_lex_trans_keys
    _lex_key_spans          = klass.send :_lex_key_spans
    _lex_index_offsets      = klass.send :_lex_index_offsets
    _lex_indicies           = klass.send :_lex_indicies
    _lex_trans_targs        = klass.send :_lex_trans_targs
    _lex_trans_actions      = klass.send :_lex_trans_actions
    _lex_to_state_actions   = klass.send :_lex_to_state_actions
    _lex_from_state_actions = klass.send :_lex_from_state_actions
    _lex_eof_trans          = klass.send :_lex_eof_trans
    _lex_actions            = @_lex_actions

    pe = @source_pts.size + 2
    p, eof = @p, pe

    cmd_state = @command_start
    @command_start = false

    
# line 8601 "lib/parser/ruby-next/lexer-F0.rb"
begin # ragel flat
	testEof = false
	_slen, _trans, _keys, _inds, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if  @cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_acts = _lex_from_state_actions[ @cs]
	_nacts = _lex_actions[_acts]
	_acts += 1
	while _nacts > 0
		_nacts -= 1
		_acts += 1
		case _lex_actions[_acts - 1]
	when 52 then
# line 1 "NONE"
		begin
 @ts = p
		end
# line 8636 "lib/parser/ruby-next/lexer-F0.rb"
		end # from state action switch
	end
	if _trigger_goto
		next
	end
	_keys =  @cs << 1
	_inds = _lex_index_offsets[ @cs]
	_slen = _lex_key_spans[ @cs]
	_wide = ( (@source_pts[p] || 0))
	_trans = if (   _slen > 0 && 
			_lex_trans_keys[_keys] <= _wide && 
			_wide <= _lex_trans_keys[_keys + 1] 
		    ) then
			_lex_indicies[ _inds + _wide - _lex_trans_keys[_keys] ] 
		 else 
			_lex_indicies[ _inds + _slen ]
		 end
	end
	if _goto_level <= _eof_trans
	 @cs = _lex_trans_targs[_trans]
	if _lex_trans_actions[_trans] != 0
		_acts = _lex_trans_actions[_trans]
		_nacts = _lex_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _lex_actions[_acts - 1]
	when 0 then
# line 540 "lib/parser/ruby-next/lexer.rl"
		begin

    # Record position of a newline for precise location reporting on tNL
    # tokens.
    #
    # This action is embedded directly into c_nl, as it is idempotent and
    # there are no cases when we need to skip it.
    @newline_s = p
  		end
	when 1 then
# line 674 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_xfrm = @emit_integer 		end
	when 2 then
# line 675 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_xfrm = @emit_rational 		end
	when 3 then
# line 676 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_xfrm = @emit_imaginary 		end
	when 4 then
# line 677 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_xfrm = @emit_imaginary_rational 		end
	when 5 then
# line 678 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_xfrm = @emit_integer_re 		end
	when 6 then
# line 679 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_xfrm = @emit_integer_if 		end
	when 7 then
# line 680 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_xfrm = @emit_integer_rescue 		end
	when 8 then
# line 683 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_xfrm = @emit_float 		end
	when 9 then
# line 684 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_xfrm = @emit_imaginary_float 		end
	when 10 then
# line 685 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_xfrm = @emit_float_if 		end
	when 11 then
# line 689 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_xfrm = @emit_rational 		end
	when 12 then
# line 690 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_xfrm = @emit_imaginary_rational 		end
	when 13 then
# line 691 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_xfrm = @emit_float_rescue 		end
	when 14 then
# line 697 "lib/parser/ruby-next/lexer.rl"
		begin

    e_lbrace
  		end
	when 15 then
# line 701 "lib/parser/ruby-next/lexer.rl"
		begin

    if @strings.close_interp_on_current_literal(p)
      p = p - 1;
       @cs = 129;
      	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

    end

    @paren_nest -= 1
  		end
	when 16 then
# line 724 "lib/parser/ruby-next/lexer.rl"
		begin

    p = on_newline(p)
  		end
	when 17 then
# line 734 "lib/parser/ruby-next/lexer.rl"
		begin
 @sharp_s = p - 1 		end
	when 18 then
# line 737 "lib/parser/ruby-next/lexer.rl"
		begin
 emit_comment_from_range(p, pe) 		end
	when 19 then
# line 778 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p 		end
	when 20 then
# line 779 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p - 2 		end
	when 21 then
# line 784 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p 		end
	when 22 then
# line 785 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p - 2 		end
	when 23 then
# line 786 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p - 2 		end
	when 24 then
# line 787 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p - 2 		end
	when 25 then
# line 788 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p - 3 		end
	when 26 then
# line 793 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p - 2 		end
	when 27 then
# line 798 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p - 2 		end
	when 28 then
# line 804 "lib/parser/ruby-next/lexer.rl"
		begin

    @cond.push(false); @cmdarg.push(false)

    @paren_nest += 1
  		end
	when 29 then
# line 810 "lib/parser/ruby-next/lexer.rl"
		begin

    @paren_nest -= 1
  		end
	when 30 then
# line 817 "lib/parser/ruby-next/lexer.rl"
		begin

    @cond.push(false); @cmdarg.push(false)

    @paren_nest += 1

    if version?(18)
      @command_start = true
    end
  		end
	when 31 then
# line 827 "lib/parser/ruby-next/lexer.rl"
		begin

    @paren_nest -= 1
  		end
	when 32 then
# line 1060 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p 		end
	when 33 then
# line 1073 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p 		end
	when 34 then
# line 1101 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p 		end
	when 35 then
# line 1298 "lib/parser/ruby-next/lexer.rl"
		begin
 heredoc_e      = p 		end
	when 36 then
# line 1299 "lib/parser/ruby-next/lexer.rl"
		begin
 new_herebody_s = p 		end
	when 37 then
# line 1393 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p - 1; diag_msg = :ivar_name 		end
	when 38 then
# line 1394 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p - 2; diag_msg = :cvar_name 		end
	when 39 then
# line 1481 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p 		end
	when 40 then
# line 1588 "lib/parser/ruby-next/lexer.rl"
		begin
 ident_tok = tok; ident_ts = @ts; ident_te = @te; 		end
	when 41 then
# line 1774 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_base = 16; @num_digits_s = p 		end
	when 42 then
# line 1775 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_base = 10; @num_digits_s = p 		end
	when 43 then
# line 1776 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_base = 8;  @num_digits_s = p 		end
	when 44 then
# line 1777 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_base = 2;  @num_digits_s = p 		end
	when 45 then
# line 1778 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_base = 10; @num_digits_s = @ts 		end
	when 46 then
# line 1779 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_base = 8;  @num_digits_s = @ts 		end
	when 47 then
# line 1780 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_suffix_s = p 		end
	when 48 then
# line 1823 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_suffix_s = p 		end
	when 49 then
# line 1824 "lib/parser/ruby-next/lexer.rl"
		begin
 @num_suffix_s = p 		end
	when 50 then
# line 2045 "lib/parser/ruby-next/lexer.rl"
		begin
 tm = p 		end
	when 53 then
# line 1 "NONE"
		begin
 @te = p+1
		end
	when 54 then
# line 847 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        emit_global_var

         @cs = (stack_pop); 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 55 then
# line 847 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        emit_global_var

         @cs = (stack_pop); 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 56 then
# line 854 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        emit_class_var

         @cs = (stack_pop); 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 57 then
# line 861 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        emit_instance_var

         @cs = (stack_pop); 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 58 then
# line 879 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 4;		end
	when 59 then
# line 883 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 5;		end
	when 60 then
# line 887 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 6;		end
	when 61 then
# line 879 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  emit_table(KEYWORDS_BEGIN);
            @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 62 then
# line 887 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  emit(:tIDENTIFIER)
            @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 63 then
# line 891 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = @ts - 1
            @cs = 517; 	begin
		 @stack[ @top] =  @cs
		 @top+= 1
		 @cs = 130
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 64 then
# line 900 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  emit_table(PUNCTUATION)
            @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 65 then
# line 904 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = p - 1; p = p - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 66 then
# line 910 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        if version?(23)
          type, delimiter = tok[0..-2], tok[-1].chr
          @strings.push_literal(type, delimiter, @ts)
          	begin
		 @cs = 129
		_trigger_goto = true
		_goto_level = _again
		break
	end

        else
          p = @ts - 1
          	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end

        end
       end
		end
	when 67 then
# line 924 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = p - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 68 then
# line 567 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
    # Sit at EOF indefinitely. #advance would return $eof each time.
    # This allows to feed the lexer more data if needed; this is only used
    # in tests.
    #
    # Note that this action is not embedded into e_eof like e_nl and e_bs
    # below. This is due to the fact that scanner state at EOF is observed
    # by tests, and encapsulating it in a rule would break the introspection.
    p = p - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

   end
		end
	when 69 then
# line 879 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit_table(KEYWORDS_BEGIN);
            @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 70 then
# line 883 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tCONSTANT)
            @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 71 then
# line 887 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tIDENTIFIER)
            @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 72 then
# line 891 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = @ts - 1
            @cs = 517; 	begin
		 @stack[ @top] =  @cs
		 @top+= 1
		 @cs = 130
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 73 then
# line 900 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit_table(PUNCTUATION)
            @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 74 then
# line 907 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = p - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 75 then
# line 921 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1;		end
	when 76 then
# line 924 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = p - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 77 then
# line 900 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin  emit_table(PUNCTUATION)
            @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 78 then
# line 924 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin  p = p - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 79 then
# line 1 "NONE"
		begin
	case  @act
	when 4 then
	begin begin p = (( @te))-1; end
 emit_table(KEYWORDS_BEGIN);
            @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
	when 5 then
	begin begin p = (( @te))-1; end
 emit(:tCONSTANT)
            @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
	when 6 then
	begin begin p = (( @te))-1; end
 emit(:tIDENTIFIER)
            @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
end 
			end
	when 80 then
# line 936 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  emit(:tLABEL, tok(@ts, @te - 2), @ts, @te - 1)
           p = p - 1;  @cs = 502; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 81 then
# line 940 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        if @version >= 31 && @context.in_argdef
          emit(:tBDOT3, '...'.freeze)
          # emit(:tNL, "\n".freeze, @te - 1, @te)
           @cs = 517; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        else
          p -= 3;
          	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end

        end
       end
		end
	when 82 then
# line 954 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = p - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 83 then
# line 567 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
    # Sit at EOF indefinitely. #advance would return $eof each time.
    # This allows to feed the lexer more data if needed; this is only used
    # in tests.
    #
    # Note that this action is not embedded into e_eof like e_nl and e_bs
    # below. This is due to the fact that scanner state at EOF is observed
    # by tests, and encapsulating it in a rule would break the introspection.
    p = p - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

   end
		end
	when 84 then
# line 951 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1;		end
	when 85 then
# line 954 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = p - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 86 then
# line 954 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin  p = p - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 87 then
# line 980 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  emit_table(PUNCTUATION)
            @cs = 277; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 88 then
# line 986 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = p - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 89 then
# line 567 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
    # Sit at EOF indefinitely. #advance would return $eof each time.
    # This allows to feed the lexer more data if needed; this is only used
    # in tests.
    #
    # Note that this action is not embedded into e_eof like e_nl and e_bs
    # below. This is due to the fact that scanner state at EOF is observed
    # by tests, and encapsulating it in a rule would break the introspection.
    p = p - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

   end
		end
	when 90 then
# line 965 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tCONSTANT)
            @cs = (arg_or_cmdarg(cmd_state)); 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 91 then
# line 969 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tIDENTIFIER)
            @cs = (arg_or_cmdarg(cmd_state)); 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 92 then
# line 973 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tFID, tok(@ts, tm), @ts, tm)
            @cs = (arg_or_cmdarg(cmd_state)); p = tm - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 93 then
# line 980 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit_table(PUNCTUATION)
            @cs = 277; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 94 then
# line 983 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1;		end
	when 95 then
# line 986 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = p - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 96 then
# line 1064 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 33;		end
	when 97 then
# line 1074 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 34;		end
	when 98 then
# line 1113 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 39;		end
	when 99 then
# line 1118 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 40;		end
	when 100 then
# line 1046 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        # Unlike expr_beg as invoked in the next rule, do not warn
        p = @ts - 1
        	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 101 then
# line 1064 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        check_ambiguous_slash(tm)

        p = tm - 1
        	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 102 then
# line 1085 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = p - 1; p = p - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 103 then
# line 1093 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = @ts - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 104 then
# line 1102 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = tm - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 105 then
# line 1113 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        p = @ts - 1
        	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 106 then
# line 1127 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = p - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 107 then
# line 567 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
    # Sit at EOF indefinitely. #advance would return $eof each time.
    # This allows to feed the lexer more data if needed; this is only used
    # in tests.
    #
    # Note that this action is not embedded into e_eof like e_nl and e_bs
    # below. This is due to the fact that scanner state at EOF is observed
    # by tests, and encapsulating it in a rule would break the introspection.
    p = p - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

   end
		end
	when 108 then
# line 1002 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        if version?(18)
          emit(:tLPAREN2, '('.freeze, @te - 1, @te)
           @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        else
          emit(:tLPAREN_ARG, '('.freeze, @te - 1, @te)
           @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        end
       end
		end
	when 109 then
# line 1015 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tLPAREN2, '('.freeze)
            @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 110 then
# line 1021 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tLBRACK, '['.freeze, @te - 1, @te)
            @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 111 then
# line 1027 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        if @lambda_stack.last == @paren_nest
          @lambda_stack.pop
          emit(:tLAMBEG, '{'.freeze, @te - 1, @te)
        else
          emit(:tLCURLY, '{'.freeze, @te - 1, @te)
        end
        @command_start = true
        @paren_nest += 1
         @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 112 then
# line 1055 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = p - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 113 then
# line 1074 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        diagnostic :warning, :ambiguous_prefix, { :prefix => tok(tm, @te) },
                   range(tm, @te)

        p = tm - 1
        	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 114 then
# line 1090 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = p - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 115 then
# line 1113 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        p = @ts - 1
        	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 116 then
# line 1118 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1;		end
	when 117 then
# line 1121 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 118 then
# line 1124 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = p - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 119 then
# line 1127 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = p - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 120 then
# line 1118 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
		end
	when 121 then
# line 1127 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin  p = p - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 122 then
# line 1 "NONE"
		begin
	case  @act
	when 33 then
	begin begin p = (( @te))-1; end

        check_ambiguous_slash(tm)

        p = tm - 1
        	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end

      end
	when 34 then
	begin begin p = (( @te))-1; end

        diagnostic :warning, :ambiguous_prefix, { :prefix => tok(tm, @te) },
                   range(tm, @te)

        p = tm - 1
        	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end

      end
	when 39 then
	begin begin p = (( @te))-1; end

        p = @ts - 1
        	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end

      end
	else
	begin begin p = (( @te))-1; end
end
end 
			end
	when 123 then
# line 1150 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 46;		end
	when 124 then
# line 1163 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 47;		end
	when 125 then
# line 1163 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = @ts - 1
           	begin
		 @cs = 277
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 126 then
# line 567 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
    # Sit at EOF indefinitely. #advance would return $eof each time.
    # This allows to feed the lexer more data if needed; this is only used
    # in tests.
    #
    # Note that this action is not embedded into e_eof like e_nl and e_bs
    # below. This is due to the fact that scanner state at EOF is observed
    # by tests, and encapsulating it in a rule would break the introspection.
    p = p - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

   end
		end
	when 127 then
# line 1140 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        emit(:tLPAREN_ARG, '('.freeze, @te - 1, @te)
        if version?(18)
           @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        else
           @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        end
       end
		end
	when 128 then
# line 1163 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = @ts - 1
           	begin
		 @cs = 277
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 129 then
# line 1163 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin  p = @ts - 1
           	begin
		 @cs = 277
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 130 then
# line 1 "NONE"
		begin
	case  @act
	when 46 then
	begin begin p = (( @te))-1; end

        if @cond.active?
          emit(:kDO_COND, 'do'.freeze, @te - 2, @te)
        else
          emit(:kDO, 'do'.freeze, @te - 2, @te)
        end
         @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

      end
	when 47 then
	begin begin p = (( @te))-1; end
 p = @ts - 1
           	begin
		 @cs = 277
		_trigger_goto = true
		_goto_level = _again
		break
	end
 end
end 
			end
	when 131 then
# line 1199 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  emit_do(true)
            @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 132 then
# line 1205 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = p - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 133 then
# line 567 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
    # Sit at EOF indefinitely. #advance would return $eof each time.
    # This allows to feed the lexer more data if needed; this is only used
    # in tests.
    #
    # Note that this action is not embedded into e_eof like e_nl and e_bs
    # below. This is due to the fact that scanner state at EOF is observed
    # by tests, and encapsulating it in a rule would break the introspection.
    p = p - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

   end
		end
	when 134 then
# line 1186 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        if @lambda_stack.last == @paren_nest
          @lambda_stack.pop
          emit(:tLAMBEG, '{'.freeze)
        else
          emit(:tLBRACE_ARG, '{'.freeze)
        end
        @paren_nest += 1
        @command_start = true
         @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 135 then
# line 1202 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1;		end
	when 136 then
# line 1205 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = p - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 137 then
# line 1217 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 54;		end
	when 138 then
# line 1221 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 55;		end
	when 139 then
# line 1229 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = p - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 140 then
# line 567 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
    # Sit at EOF indefinitely. #advance would return $eof each time.
    # This allows to feed the lexer more data if needed; this is only used
    # in tests.
    #
    # Note that this action is not embedded into e_eof like e_nl and e_bs
    # below. This is due to the fact that scanner state at EOF is observed
    # by tests, and encapsulating it in a rule would break the introspection.
    p = p - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

   end
		end
	when 141 then
# line 1221 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = @ts - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 142 then
# line 1223 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1;		end
	when 143 then
# line 1226 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = p - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 144 then
# line 1229 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = p - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 145 then
# line 1 "NONE"
		begin
	case  @act
	when 54 then
	begin begin p = (( @te))-1; end
 emit_table(KEYWORDS)
            @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
	when 55 then
	begin begin p = (( @te))-1; end
 p = @ts - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
 end
end 
			end
	when 146 then
# line 1244 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 60;		end
	when 147 then
# line 1347 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 67;		end
	when 148 then
# line 1435 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 76;		end
	when 149 then
# line 1476 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 80;		end
	when 150 then
# line 1482 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 81;		end
	when 151 then
# line 1488 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 82;		end
	when 152 then
# line 1579 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 86;		end
	when 153 then
# line 832 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 87;		end
	when 154 then
# line 1625 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 91;		end
	when 155 then
# line 1244 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        emit(:tUNARY_NUM, tok(@ts, @ts + 1), @ts, @ts + 1)
        p = p - 1;  @cs = 517; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 156 then
# line 1261 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        type = delimiter = tok[0].chr
        @strings.push_literal(type, delimiter, @ts)

        p = p - 1;
        	begin
		 @cs = 129
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 157 then
# line 1271 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        type, delimiter = @source_buffer.slice(@ts, 1).chr, tok[-1].chr
        @strings.push_literal(type, delimiter, @ts)
        	begin
		 @cs = 129
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 158 then
# line 1279 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        type, delimiter = tok[0..-2], tok[-1].chr
        @strings.push_literal(type, delimiter, @ts)
        	begin
		 @cs = 129
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 159 then
# line 1356 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        p = p - 1; p = p - 1;
        emit(:tSYMBEG, tok(@ts, @ts + 1), @ts, @ts + 1)
        	begin
		 @cs = 135
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 160 then
# line 1364 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        type, delimiter = tok, tok[-1].chr
        @strings.push_literal(type, delimiter, @ts);

        	begin
		 @cs = 129
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 161 then
# line 1374 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        emit(:tSYMBOL, tok(@ts + 1, @ts + 2))
         @cs = 517; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 162 then
# line 1388 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        emit(:tSYMBOL, tok(@ts + 1), @ts)
         @cs = 517; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 163 then
# line 1409 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        p, next_state = @strings.read_character_constant(@ts)
        p = p - 1; # Ragel will do `p += 1` to consume input, prevent it

        # If strings lexer founds a character constant (?a) emit it,
        # otherwise read ternary operator
        if @token_queue.empty?
          	begin
		 @cs = (next_state)
		_trigger_goto = true
		_goto_level = _again
		break
	end

        else
           @cs = (next_state);
          	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        end
       end
		end
	when 164 then
# line 1424 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        diagnostic :fatal, :incomplete_escape, nil, range(@ts, @ts + 1)
       end
		end
	when 165 then
# line 1476 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  emit_table(PUNCTUATION_BEGIN)
           	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 166 then
# line 1497 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        p = p - 1;

        if version?(18)
          ident = tok(@ts, @te - 2)

          emit((@source_buffer.slice(@ts, 1) =~ /[A-Z]/) ? :tCONSTANT : :tIDENTIFIER,
               ident, @ts, @te - 2)
          p = p - 1; # continue as a symbol

          if !@static_env.nil? && @static_env.declared?(ident)
             @cs = 517;
          else
             @cs = (arg_or_cmdarg(cmd_state));
          end
        else
          emit(:tLABEL, tok(@ts, @te - 2), @ts, @te - 1)
           @cs = 502;
        end

        	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 167 then
# line 1535 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        # Here we scan and conditionally emit "\n":
        # + if it's there
        #   + and emitted we do nothing
        #   + and not emitted we return `p` to "\n" to process it on the next scan
        # + if it's not there we do nothing
        followed_by_nl = @te - 1 == @newline_s
        nl_emitted = false
        dots_te = followed_by_nl ? @te - 1 : @te

        if @version >= 30
          if @lambda_stack.any? && @lambda_stack.last + 1 == @paren_nest
            # To reject `->(...)` like `->...`
            emit(:tDOT3, '...'.freeze, @ts, dots_te)
          else
            emit(:tBDOT3, '...'.freeze, @ts, dots_te)

            if @version >= 31 && followed_by_nl && @context.in_argdef
              emit(:tNL, @te - 1, @te)
              nl_emitted = true
            end
          end
        elsif @version >= 27
          emit(:tBDOT3, '...'.freeze, @ts, dots_te)
        else
          emit(:tDOT3, '...'.freeze, @ts, dots_te)
        end

        if followed_by_nl && !nl_emitted
          # return "\n" to process it on the next scan
          p = p - 1;
        end

         @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 168 then
# line 1590 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        emit(:tIDENTIFIER, ident_tok, ident_ts, ident_te)
        p = ident_te - 1

        if !@static_env.nil? && @static_env.declared?(ident_tok) && @version < 25
           @cs = 248;
        else
           @cs = 308;
        end
        	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 169 then
# line 1609 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        p = @ts - 1
        @cs_before_block_comment = @cs
        	begin
		 @cs = 713
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 170 then
# line 1625 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = @ts - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 171 then
# line 567 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
    # Sit at EOF indefinitely. #advance would return $eof each time.
    # This allows to feed the lexer more data if needed; this is only used
    # in tests.
    #
    # Note that this action is not embedded into e_eof like e_nl and e_bs
    # below. This is due to the fact that scanner state at EOF is observed
    # by tests, and encapsulating it in a rule would break the introspection.
    p = p - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

   end
		end
	when 172 then
# line 1244 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        emit(:tUNARY_NUM, tok(@ts, @ts + 1), @ts, @ts + 1)
        p = p - 1;  @cs = 517; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 173 then
# line 1251 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tSTAR, '*'.freeze)
           	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 174 then
# line 1286 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        diagnostic :fatal, :string_eof, nil, range(@ts, @ts + 1)
       end
		end
	when 175 then
# line 1300 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        tok(@ts, heredoc_e) =~ /^<<(-?)(~?)(["'`]?)(.*)\3$/m

        indent      = !$1.empty? || !$2.empty?
        dedent_body = !$2.empty?
        type        =  $3.empty? ? '<<"'.freeze : ('<<'.freeze + $3)
        delimiter   =  $4

        if @version >= 27
          if delimiter.count("\n") > 0 || delimiter.count("\r") > 0
            diagnostic :error, :unterminated_heredoc_id, nil, range(@ts, @ts + 1)
          end
        elsif @version >= 24
          if delimiter.count("\n") > 0
            if delimiter.end_with?("\n")
              diagnostic :warning, :heredoc_id_ends_with_nl, nil, range(@ts, @ts + 1)
              delimiter = delimiter.rstrip
            else
              diagnostic :fatal, :heredoc_id_has_newline, nil, range(@ts, @ts + 1)
            end
          end
        end

        if dedent_body && version?(18, 19, 20, 21, 22)
          emit(:tLSHFT, '<<'.freeze, @ts, @ts + 2)
          p = @ts + 1
           @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        else
          @strings.push_literal(type, delimiter, @ts, heredoc_e, indent, dedent_body);
          @strings.herebody_s ||= new_herebody_s

          p = @strings.herebody_s - 1
           @cs = 129;
        end
       end
		end
	when 176 then
# line 1347 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        diagnostic :error, :unterminated_heredoc_id, nil, range(@ts, @ts + 1)
       end
		end
	when 177 then
# line 1380 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        emit(:tSYMBOL, tok(@ts + 1, tm), @ts, tm)
        p = tm - 1
         @cs = 517; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 178 then
# line 1388 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        emit(:tSYMBOL, tok(@ts + 1), @ts)
         @cs = 517; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 179 then
# line 1396 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        emit_colon_with_digits(p, tm, diag_msg)

         @cs = 517; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 180 then
# line 1424 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        diagnostic :fatal, :incomplete_escape, nil, range(@ts, @ts + 1)
       end
		end
	when 181 then
# line 1452 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        if @lambda_stack.last == @paren_nest
          @lambda_stack.pop
          @command_start = true
          emit(:tLAMBEG, '{'.freeze)
        else
          emit(:tLBRACE, '{'.freeze)
        end
        @paren_nest += 1
        	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 182 then
# line 1466 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tLBRACK, '['.freeze)
           	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 183 then
# line 1471 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tLPAREN, '('.freeze)
           	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 184 then
# line 1476 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit_table(PUNCTUATION_BEGIN)
           	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 185 then
# line 1482 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:kRESCUE, 'rescue'.freeze, @ts, tm)
           p = tm - 1
            @cs = 322; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 186 then
# line 1524 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        if @version >= 27
          emit(:tBDOT2)
        else
          emit(:tDOT2)
        end

         @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 187 then
# line 1535 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        # Here we scan and conditionally emit "\n":
        # + if it's there
        #   + and emitted we do nothing
        #   + and not emitted we return `p` to "\n" to process it on the next scan
        # + if it's not there we do nothing
        followed_by_nl = @te - 1 == @newline_s
        nl_emitted = false
        dots_te = followed_by_nl ? @te - 1 : @te

        if @version >= 30
          if @lambda_stack.any? && @lambda_stack.last + 1 == @paren_nest
            # To reject `->(...)` like `->...`
            emit(:tDOT3, '...'.freeze, @ts, dots_te)
          else
            emit(:tBDOT3, '...'.freeze, @ts, dots_te)

            if @version >= 31 && followed_by_nl && @context.in_argdef
              emit(:tNL, @te - 1, @te)
              nl_emitted = true
            end
          end
        elsif @version >= 27
          emit(:tBDOT3, '...'.freeze, @ts, dots_te)
        else
          emit(:tDOT3, '...'.freeze, @ts, dots_te)
        end

        if followed_by_nl && !nl_emitted
          # return "\n" to process it on the next scan
          p = p - 1;
        end

         @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 188 then
# line 1579 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = @ts - 1
           	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 189 then
# line 832 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
    emit(:tIDENTIFIER)

    if !@static_env.nil? && @static_env.declared?(tok)
       @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

    else
       @cs = (arg_or_cmdarg(cmd_state)); 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

    end
   end
		end
	when 190 then
# line 1606 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1;		end
	when 191 then
# line 1609 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        p = @ts - 1
        @cs_before_block_comment = @cs
        	begin
		 @cs = 713
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 192 then
# line 1625 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = @ts - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 193 then
# line 1286 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin 
        diagnostic :fatal, :string_eof, nil, range(@ts, @ts + 1)
       end
		end
	when 194 then
# line 1347 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin 
        diagnostic :error, :unterminated_heredoc_id, nil, range(@ts, @ts + 1)
       end
		end
	when 195 then
# line 832 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin 
    emit(:tIDENTIFIER)

    if !@static_env.nil? && @static_env.declared?(tok)
       @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

    else
       @cs = (arg_or_cmdarg(cmd_state)); 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

    end
   end
		end
	when 196 then
# line 1606 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
		end
	when 197 then
# line 1625 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin  p = @ts - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 198 then
# line 1 "NONE"
		begin
	case  @act
	when 60 then
	begin begin p = (( @te))-1; end

        emit(:tUNARY_NUM, tok(@ts, @ts + 1), @ts, @ts + 1)
        p = p - 1;  @cs = 517; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

      end
	when 67 then
	begin begin p = (( @te))-1; end

        diagnostic :error, :unterminated_heredoc_id, nil, range(@ts, @ts + 1)
      end
	when 76 then
	begin begin p = (( @te))-1; end

        if @version >= 27
          emit(:tPIPE, tok(@ts, @ts + 1), @ts, @ts + 1)
          p = p - 1;
           @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        else
          p -= 2
          	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end

        end
      end
	when 80 then
	begin begin p = (( @te))-1; end
 emit_table(PUNCTUATION_BEGIN)
           	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
	when 81 then
	begin begin p = (( @te))-1; end
 emit(:kRESCUE, 'rescue'.freeze, @ts, tm)
           p = tm - 1
            @cs = 322; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
	when 82 then
	begin begin p = (( @te))-1; end
 emit_table(KEYWORDS_BEGIN)
           @command_start = true
            @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
	when 86 then
	begin begin p = (( @te))-1; end
 p = @ts - 1
           	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
 end
	when 87 then
	begin begin p = (( @te))-1; end

    emit(:tIDENTIFIER)

    if !@static_env.nil? && @static_env.declared?(tok)
       @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

    else
       @cs = (arg_or_cmdarg(cmd_state)); 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

    end
  end
	when 91 then
	begin begin p = (( @te))-1; end
 p = @ts - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
 end
end 
			end
	when 199 then
# line 1645 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = p - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 200 then
# line 567 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
    # Sit at EOF indefinitely. #advance would return $eof each time.
    # This allows to feed the lexer more data if needed; this is only used
    # in tests.
    #
    # Note that this action is not embedded into e_eof like e_nl and e_bs
    # below. This is due to the fact that scanner state at EOF is observed
    # by tests, and encapsulating it in a rule would break the introspection.
    p = p - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

   end
		end
	when 201 then
# line 1633 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1;		end
	when 202 then
# line 1636 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
      if @context.in_kwarg
        p = p - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end

      else
        	begin
		 @cs = 713
		_trigger_goto = true
		_goto_level = _again
		break
	end

      end
     end
		end
	when 203 then
# line 1645 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = p - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 204 then
# line 1655 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = @ts - 1
           	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 205 then
# line 1660 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        @strings.push_literal(tok, tok, @ts)
        	begin
		 @cs = 129
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 206 then
# line 1671 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = p - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 207 then
# line 567 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
    # Sit at EOF indefinitely. #advance would return $eof each time.
    # This allows to feed the lexer more data if needed; this is only used
    # in tests.
    #
    # Note that this action is not embedded into e_eof like e_nl and e_bs
    # below. This is due to the fact that scanner state at EOF is observed
    # by tests, and encapsulating it in a rule would break the introspection.
    p = p - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

   end
		end
	when 208 then
# line 1665 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1;		end
	when 209 then
# line 1668 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  	begin
		 @cs = 713
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 210 then
# line 1671 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = p - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 211 then
# line 1671 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin  p = p - 1; 	begin
		 @cs = 346
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 212 then
# line 1690 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 104;		end
	when 213 then
# line 1719 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 105;		end
	when 214 then
# line 1723 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 106;		end
	when 215 then
# line 1728 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 107;		end
	when 216 then
# line 1733 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 108;		end
	when 217 then
# line 1738 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 109;		end
	when 218 then
# line 1742 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 110;		end
	when 219 then
# line 1753 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 111;		end
	when 220 then
# line 1767 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 112;		end
	when 221 then
# line 1781 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 113;		end
	when 222 then
# line 1799 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 115;		end
	when 223 then
# line 1811 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 116;		end
	when 224 then
# line 1826 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 117;		end
	when 225 then
# line 1855 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 119;		end
	when 226 then
# line 1870 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 122;		end
	when 227 then
# line 1876 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 123;		end
	when 228 then
# line 832 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 125;		end
	when 229 then
# line 1895 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 126;		end
	when 230 then
# line 1921 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 128;		end
	when 231 then
# line 1927 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 129;		end
	when 232 then
# line 1682 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        emit(:tLAMBDA, '->'.freeze, @ts, @ts + 2)

        @lambda_stack.push @paren_nest
         @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 233 then
# line 1723 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  emit_singleton_class
            @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 234 then
# line 1844 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        type, delimiter = tok, tok[-1].chr
        @strings.push_literal(type, delimiter, @ts, nil, false, false, true);
        	begin
		 @cs = 129
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 235 then
# line 1863 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = @ts - 1; 	begin
		 @stack[ @top] =  @cs
		 @top+= 1
		 @cs = 130
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 236 then
# line 1888 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  emit_table(PUNCTUATION)
            @cs = 256; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 237 then
# line 1912 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        emit_table(PUNCTUATION)
         @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 238 then
# line 1921 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        emit_table(PUNCTUATION);
         @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 239 then
# line 1948 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  emit(:tOP_ASGN, tok(@ts, @te - 1))
            @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 240 then
# line 1952 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  emit(:tEH, '?'.freeze)
            @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 241 then
# line 1960 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        if @paren_nest == 0
          diagnostic :warning, :triple_dot_at_eol, nil, range(@ts, @te - 1)
        end

        emit(:tDOT3, '...'.freeze, @ts, @te - 1)
        p = p - 1;
         @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 242 then
# line 1971 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  emit_table(PUNCTUATION)
            @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 243 then
# line 1984 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  emit(:tSEMI, ';'.freeze)
           @command_start = true
            @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 244 then
# line 1988 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        diagnostic :error, :bare_backslash, nil, range(@ts, @ts + 1)
        p = p - 1;
       end
		end
	when 245 then
# line 1994 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        diagnostic :fatal, :unexpected, { :character => tok.inspect[1..-2] }
       end
		end
	when 246 then
# line 567 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
    # Sit at EOF indefinitely. #advance would return $eof each time.
    # This allows to feed the lexer more data if needed; this is only used
    # in tests.
    #
    # Note that this action is not embedded into e_eof like e_nl and e_bs
    # below. This is due to the fact that scanner state at EOF is observed
    # by tests, and encapsulating it in a rule would break the introspection.
    p = p - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

   end
		end
	when 247 then
# line 1690 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        if @lambda_stack.last == @paren_nest
          @lambda_stack.pop

          if tok == '{'.freeze
            emit(:tLAMBEG, '{'.freeze)
          else # 'do'
            emit(:kDO_LAMBDA, 'do'.freeze)
          end
        else
          if tok == '{'.freeze
            emit(:tLCURLY, '{'.freeze)
          else # 'do'
            emit_do
          end
        end
        if tok == '{'.freeze
          @paren_nest += 1
        end
        @command_start = true

         @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 248 then
# line 1719 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit_table(KEYWORDS)
            @cs = 135; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 249 then
# line 1723 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit_singleton_class
            @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 250 then
# line 1733 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit_table(KEYWORDS)
           @command_start = true
            @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 251 then
# line 1781 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        digits = numeric_literal_int

        if version?(18, 19, 20)
          emit(:tINTEGER, digits.to_i(@num_base), @ts, @num_suffix_s)
          p = @num_suffix_s - 1
        else
          p = @num_xfrm.call(digits.to_i(@num_base), p)
        end
        	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 252 then
# line 1794 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        diagnostic :error, :no_dot_digit_literal
       end
		end
	when 253 then
# line 1826 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        digits = tok(@ts, @num_suffix_s)

        if version?(18, 19, 20)
          emit(:tFLOAT, Float(digits), @ts, @num_suffix_s)
          p = @num_suffix_s - 1
        else
          p = @num_xfrm.call(digits, p)
        end
        	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 254 then
# line 1855 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tCONSTANT)
            @cs = (arg_or_cmdarg(cmd_state)); 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 255 then
# line 1859 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tCONSTANT, tok(@ts, tm), @ts, tm)
           p = tm - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 256 then
# line 1863 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = @ts - 1; 	begin
		 @stack[ @top] =  @cs
		 @top+= 1
		 @cs = 130
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 257 then
# line 1870 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tDOT, '.', @ts, @ts + 1)
           emit(:tCOLON, ':', @ts + 1, @ts + 2)
           p = p - tok.length + 2
            @cs = 256; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 258 then
# line 1888 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit_table(PUNCTUATION)
            @cs = 256; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 259 then
# line 832 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
    emit(:tIDENTIFIER)

    if !@static_env.nil? && @static_env.declared?(tok)
       @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

    else
       @cs = (arg_or_cmdarg(cmd_state)); 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

    end
   end
		end
	when 260 then
# line 1895 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        if tm == @te
          # Suffix was consumed, e.g. foo!
          emit(:tFID)
        else
          # Suffix was not consumed, e.g. foo!=
          emit(:tIDENTIFIER, tok(@ts, tm), @ts, tm)
          p = tm - 1
        end
         @cs = 277; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 261 then
# line 1912 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        emit_table(PUNCTUATION)
         @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 262 then
# line 1921 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        emit_table(PUNCTUATION);
         @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 263 then
# line 1927 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit_table(PUNCTUATION)
            @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 264 then
# line 1931 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        emit_rbrace_rparen_rbrack

        if tok == '}'.freeze || tok == ']'.freeze
          if @version >= 25
             @cs = 517;
          else
             @cs = 314;
          end
        else # )
          # fnext expr_endfn; ?
        end

        	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 265 then
# line 1956 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tLBRACK2, '['.freeze)
            @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 266 then
# line 1971 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit_table(PUNCTUATION)
            @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 267 then
# line 1978 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1;		end
	when 268 then
# line 1981 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  	begin
		 @cs = 699
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 269 then
# line 1994 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        diagnostic :fatal, :unexpected, { :character => tok.inspect[1..-2] }
       end
		end
	when 270 then
# line 1781 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin 
        digits = numeric_literal_int

        if version?(18, 19, 20)
          emit(:tINTEGER, digits.to_i(@num_base), @ts, @num_suffix_s)
          p = @num_suffix_s - 1
        else
          p = @num_xfrm.call(digits.to_i(@num_base), p)
        end
        	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 271 then
# line 1794 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin 
        diagnostic :error, :no_dot_digit_literal
       end
		end
	when 272 then
# line 1826 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin 
        digits = tok(@ts, @num_suffix_s)

        if version?(18, 19, 20)
          emit(:tFLOAT, Float(digits), @ts, @num_suffix_s)
          p = @num_suffix_s - 1
        else
          p = @num_xfrm.call(digits, p)
        end
        	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
	when 273 then
# line 1994 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin 
        diagnostic :fatal, :unexpected, { :character => tok.inspect[1..-2] }
       end
		end
	when 274 then
# line 1 "NONE"
		begin
	case  @act
	when 104 then
	begin begin p = (( @te))-1; end

        if @lambda_stack.last == @paren_nest
          @lambda_stack.pop

          if tok == '{'.freeze
            emit(:tLAMBEG, '{'.freeze)
          else # 'do'
            emit(:kDO_LAMBDA, 'do'.freeze)
          end
        else
          if tok == '{'.freeze
            emit(:tLCURLY, '{'.freeze)
          else # 'do'
            emit_do
          end
        end
        if tok == '{'.freeze
          @paren_nest += 1
        end
        @command_start = true

         @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

      end
	when 105 then
	begin begin p = (( @te))-1; end
 emit_table(KEYWORDS)
            @cs = 135; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
	when 106 then
	begin begin p = (( @te))-1; end
 emit_singleton_class
            @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
	when 107 then
	begin begin p = (( @te))-1; end
 emit_table(KEYWORDS)
            @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
	when 108 then
	begin begin p = (( @te))-1; end
 emit_table(KEYWORDS)
           @command_start = true
            @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
	when 109 then
	begin begin p = (( @te))-1; end
 emit_table(KEYWORDS)
            @cs = 322; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
	when 110 then
	begin begin p = (( @te))-1; end

        emit_table(KEYWORDS)

        if version?(18) && tok == 'not'.freeze
           @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        else
           @cs = 277; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        end
      end
	when 111 then
	begin begin p = (( @te))-1; end

        if version?(18)
          emit(:tIDENTIFIER)

          unless !@static_env.nil? && @static_env.declared?(tok)
             @cs = (arg_or_cmdarg(cmd_state));
          end
        else
          emit(:k__ENCODING__, '__ENCODING__'.freeze)
        end
        	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

      end
	when 112 then
	begin begin p = (( @te))-1; end
 emit_table(KEYWORDS)
           	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
	when 113 then
	begin begin p = (( @te))-1; end

        digits = numeric_literal_int

        if version?(18, 19, 20)
          emit(:tINTEGER, digits.to_i(@num_base), @ts, @num_suffix_s)
          p = @num_suffix_s - 1
        else
          p = @num_xfrm.call(digits.to_i(@num_base), p)
        end
        	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

      end
	when 115 then
	begin begin p = (( @te))-1; end

        if version?(18, 19, 20)
          diagnostic :error,
                     :trailing_in_number, { :character => tok(@te - 1, @te) },
                     range(@te - 1, @te)
        else
          emit(:tINTEGER, tok(@ts, @te - 1).to_i, @ts, @te - 1)
          p = p - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        end
      end
	when 116 then
	begin begin p = (( @te))-1; end

        if version?(18, 19, 20)
          diagnostic :error,
                     :trailing_in_number, { :character => tok(@te - 1, @te) },
                     range(@te - 1, @te)
        else
          emit(:tFLOAT, tok(@ts, @te - 1).to_f, @ts, @te - 1)
          p = p - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        end
      end
	when 117 then
	begin begin p = (( @te))-1; end

        digits = tok(@ts, @num_suffix_s)

        if version?(18, 19, 20)
          emit(:tFLOAT, Float(digits), @ts, @num_suffix_s)
          p = @num_suffix_s - 1
        else
          p = @num_xfrm.call(digits, p)
        end
        	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

      end
	when 119 then
	begin begin p = (( @te))-1; end
 emit(:tCONSTANT)
            @cs = (arg_or_cmdarg(cmd_state)); 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
	when 122 then
	begin begin p = (( @te))-1; end
 emit(:tDOT, '.', @ts, @ts + 1)
           emit(:tCOLON, ':', @ts + 1, @ts + 2)
           p = p - tok.length + 2
            @cs = 256; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
	when 123 then
	begin begin p = (( @te))-1; end

        if @version >= 27
          emit_table(PUNCTUATION)
        else
          emit(:tDOT, tok(@ts, @ts + 1), @ts, @ts + 1)
          p = p - 1;
        end

         @cs = 256; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

      end
	when 125 then
	begin begin p = (( @te))-1; end

    emit(:tIDENTIFIER)

    if !@static_env.nil? && @static_env.declared?(tok)
       @cs = 248; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

    else
       @cs = (arg_or_cmdarg(cmd_state)); 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

    end
  end
	when 126 then
	begin begin p = (( @te))-1; end

        if tm == @te
          # Suffix was consumed, e.g. foo!
          emit(:tFID)
        else
          # Suffix was not consumed, e.g. foo!=
          emit(:tIDENTIFIER, tok(@ts, tm), @ts, tm)
          p = tm - 1
        end
         @cs = 277; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

      end
	when 128 then
	begin begin p = (( @te))-1; end

        emit_table(PUNCTUATION);
         @cs = 509; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

      end
	when 129 then
	begin begin p = (( @te))-1; end
 emit_table(PUNCTUATION)
            @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
end 
			end
	when 275 then
# line 2010 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 142;		end
	when 276 then
# line 2049 "lib/parser/ruby-next/lexer.rl"
		begin
 @act = 146;		end
	when 277 then
# line 2035 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        emit(:tNL, nil, @newline_s, @newline_s + 1)
        if @version < 27
          p = p - 1;  @cs = 713; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        else
          emit(:tBDOT3)
           @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        end
       end
		end
	when 278 then
# line 2046 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = tm - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 279 then
# line 2049 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  emit(:tNL, nil, @newline_s, @newline_s + 1)
           p = p - 1;  @cs = 713; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 280 then
# line 2010 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        if @version < 27
          # Ruby before 2.7 doesn't support comments before leading dot.
          # If a line after "a" starts with a comment then "a" is a self-contained statement.
          # So in that case we emit a special tNL token and start reading the
          # next line as a separate statement.
          #
          # Note: block comments before leading dot are not supported on any version of Ruby.
          emit(:tNL, nil, @newline_s, @newline_s + 1)
          p = p - 1;  @cs = 713; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        end
       end
		end
	when 281 then
# line 2024 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        emit(:tNL, nil, @newline_s, @newline_s + 1)
        if @version < 27
          p = p - 1;  @cs = 713; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        else
          emit(:tBDOT2)
           @cs = 346; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        end
       end
		end
	when 282 then
# line 2046 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  p = tm - 1; 	begin
		 @cs = 517
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 283 then
# line 2049 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  emit(:tNL, nil, @newline_s, @newline_s + 1)
           p = p - 1;  @cs = 713; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 284 then
# line 2010 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin 
        if @version < 27
          # Ruby before 2.7 doesn't support comments before leading dot.
          # If a line after "a" starts with a comment then "a" is a self-contained statement.
          # So in that case we emit a special tNL token and start reading the
          # next line as a separate statement.
          #
          # Note: block comments before leading dot are not supported on any version of Ruby.
          emit(:tNL, nil, @newline_s, @newline_s + 1)
          p = p - 1;  @cs = 713; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        end
       end
		end
	when 285 then
# line 2049 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin  emit(:tNL, nil, @newline_s, @newline_s + 1)
           p = p - 1;  @cs = 713; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
  end
		end
	when 286 then
# line 1 "NONE"
		begin
	case  @act
	when 142 then
	begin begin p = (( @te))-1; end

        if @version < 27
          # Ruby before 2.7 doesn't support comments before leading dot.
          # If a line after "a" starts with a comment then "a" is a self-contained statement.
          # So in that case we emit a special tNL token and start reading the
          # next line as a separate statement.
          #
          # Note: block comments before leading dot are not supported on any version of Ruby.
          emit(:tNL, nil, @newline_s, @newline_s + 1)
          p = p - 1;  @cs = 713; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

        end
      end
	when 146 then
	begin begin p = (( @te))-1; end
 emit(:tNL, nil, @newline_s, @newline_s + 1)
           p = p - 1;  @cs = 713; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end
 end
end 
			end
	when 287 then
# line 2059 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        emit_comment(@eq_begin_s, @te)
        	begin
		 @cs = (@cs_before_block_comment)
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 288 then
# line 2064 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
		end
	when 289 then
# line 2059 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        emit_comment(@eq_begin_s, @te)
        	begin
		 @cs = (@cs_before_block_comment)
		_trigger_goto = true
		_goto_level = _again
		break
	end

       end
		end
	when 290 then
# line 2067 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin 
        diagnostic :fatal, :embedded_document, nil,
                   range(@eq_begin_s, @eq_begin_s + '=begin'.length)
       end
		end
	when 291 then
# line 2077 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  @eq_begin_s = @ts
           	begin
		 @cs = 707
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 292 then
# line 2081 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  p = pe - 3  end
		end
	when 293 then
# line 2084 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin  cmd_state = true; p = p - 1; 	begin
		 @cs = 509
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 294 then
# line 567 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
    # Sit at EOF indefinitely. #advance would return $eof each time.
    # This allows to feed the lexer more data if needed; this is only used
    # in tests.
    #
    # Note that this action is not embedded into e_eof like e_nl and e_bs
    # below. This is due to the fact that scanner state at EOF is observed
    # by tests, and encapsulating it in a rule would break the introspection.
    p = p - 1; 	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

   end
		end
	when 295 then
# line 2074 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1;		end
	when 296 then
# line 2077 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  @eq_begin_s = @ts
           	begin
		 @cs = 707
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 297 then
# line 2084 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p
p = p - 1; begin  cmd_state = true; p = p - 1; 	begin
		 @cs = 509
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 298 then
# line 2084 "lib/parser/ruby-next/lexer.rl"
		begin
 begin p = (( @te))-1; end
 begin  cmd_state = true; p = p - 1; 	begin
		 @cs = 509
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
	when 299 then
# line 2091 "lib/parser/ruby-next/lexer.rl"
		begin
 @te = p+1
 begin 
        p, next_state = @strings.advance(p)

        p = p - 1; # Ragel will do `p += 1` to consume input, prevent it
         @cs = (next_state);
        	begin
		p += 1
		_trigger_goto = true
		_goto_level = _out
		break
	end

       end
		end
# line 12655 "lib/parser/ruby-next/lexer-F0.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	_acts = _lex_to_state_actions[ @cs]
	_nacts = _lex_actions[_acts]
	_acts += 1
	while _nacts > 0
		_nacts -= 1
		_acts += 1
		case _lex_actions[_acts - 1]
	when 51 then
# line 1 "NONE"
		begin
 @ts = nil;		end
# line 12675 "lib/parser/ruby-next/lexer-F0.rb"
		end # to state action switch
	end
	if _trigger_goto
		next
	end
	if  @cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	if _lex_eof_trans[ @cs] > 0
		_trans = _lex_eof_trans[ @cs] - 1;
		_goto_level = _eof_trans
		next;
	end
	end
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 282 "lib/parser/ruby-next/lexer.rl"
    # %

    # Ragel creates a local variable called `testEof` but it doesn't use
    # it in any assignment. This dead code is here to swallow the warning.
    # It has no runtime cost because Ruby doesn't produce any instructions from it.
    if false
      testEof
    end

    @p = p

    if @token_queue.any?
      @token_queue.shift
    elsif @cs == klass.lex_error
      [ false, [ '$error'.freeze, range(p - 1, p) ] ]
    else
      eof = @source_pts.size
      [ false, [ '$eof'.freeze,   range(eof, eof) ] ]
    end
  end

  protected

  def version?(*versions)
    versions.include?(@version)
  end

  def stack_pop
    @top -= 1
    @stack[@top]
  end

  def tok(s = @ts, e = @te)
    @source_buffer.slice(s, e - s)
  end

  def range(s = @ts, e = @te)
    Parser::Source::Range.new(@source_buffer, s, e)
  end

  def emit(type, value = tok, s = @ts, e = @te)
    token = [ type, [ value, range(s, e) ] ]

    @token_queue.push(token)

    @tokens.push(token) if @tokens

    token
  end

  def emit_table(table, s = @ts, e = @te)
    value = tok(s, e)

    emit(table[value], value, s, e)
  end

  def emit_do(do_block=false)
    if @cond.active?
      emit(:kDO_COND, 'do'.freeze)
    elsif @cmdarg.active? || do_block
      emit(:kDO_BLOCK, 'do'.freeze)
    else
      emit(:kDO, 'do'.freeze)
    end
  end

  def arg_or_cmdarg(cmd_state)
    if cmd_state
      self.class.lex_en_expr_cmdarg
    else
      self.class.lex_en_expr_arg
    end
  end

  def emit_comment(s = @ts, e = @te)
    if @comments
      @comments.push(Parser::Source::Comment.new(range(s, e)))
    end

    if @tokens
      @tokens.push([ :tCOMMENT, [ tok(s, e), range(s, e) ] ])
    end

    nil
  end

  def emit_comment_from_range(p, pe)
    emit_comment(@sharp_s, p == pe ? p - 2 : p)
  end

  def diagnostic(type, reason, arguments=nil, location=range, highlights=[])
    @diagnostics.process(
        Parser::Diagnostic.new(type, reason, arguments, location, highlights))
  end


  def e_lbrace
    @cond.push(false); @cmdarg.push(false)

    current_literal = @strings.literal
    if current_literal
      current_literal.start_interp_brace
    end
  end

  def numeric_literal_int
    digits = tok(@num_digits_s, @num_suffix_s)

    if digits.end_with? '_'.freeze
      diagnostic :error, :trailing_in_number, { :character => '_'.freeze },
                 range(@te - 1, @te)
    elsif digits.empty? && @num_base == 8 && version?(18)
      # 1.8 did not raise an error on 0o.
      digits = '0'.freeze
    elsif digits.empty?
      diagnostic :error, :empty_numeric
    elsif @num_base == 8 && (invalid_idx = digits.index(/[89]/))
      invalid_s = @num_digits_s + invalid_idx
      diagnostic :error, :invalid_octal, nil,
                 range(invalid_s, invalid_s + 1)
    end
    digits
  end

  def on_newline(p)
    @strings.on_newline(p)
  end

  def check_ambiguous_slash(tm)
    if tok(tm, tm + 1) == '/'.freeze
      # Ambiguous regexp literal.
      if @version < 30
        diagnostic :warning, :ambiguous_literal, nil, range(tm, tm + 1)
      else
        diagnostic :warning, :ambiguous_regexp, nil, range(tm, tm + 1)
      end
    end
  end

  def emit_global_var(ts = @ts, te = @te)
    if tok(ts, te) =~ /^\$([1-9][0-9]*)$/
      emit(:tNTH_REF, tok(ts + 1, te).to_i, ts, te)
    elsif tok =~ /^\$([&`'+])$/
      emit(:tBACK_REF, tok(ts, te), ts, te)
    else
      emit(:tGVAR, tok(ts, te), ts, te)
    end
  end

  def emit_class_var(ts = @ts, te = @te)
    if tok(ts, te) =~ /^@@[0-9]/
      diagnostic :error, :cvar_name, { :name => tok(ts, te) }
    end

    emit(:tCVAR, tok(ts, te), ts, te)
  end

  def emit_instance_var(ts = @ts, te = @te)
    if tok(ts, te) =~ /^@[0-9]/
      diagnostic :error, :ivar_name, { :name => tok(ts, te) }
    end

    emit(:tIVAR, tok(ts, te), ts, te)
  end

  def emit_rbrace_rparen_rbrack
    emit_table(PUNCTUATION)

    if @version < 24
      @cond.lexpop
      @cmdarg.lexpop
    else
      @cond.pop
      @cmdarg.pop
    end
  end

  def emit_colon_with_digits(p, tm, diag_msg)
    if @version >= 27
      diagnostic :error, diag_msg, { name: tok(tm, @te) }, range(tm, @te)
    else
      emit(:tCOLON, tok(@ts, @ts + 1), @ts, @ts + 1)
      p = @ts
    end
    p
  end

  def emit_singleton_class
    emit(:kCLASS, 'class'.freeze, @ts, @ts + 5)
    emit(:tLSHFT, '<<'.freeze,    @te - 2, @te)
  end

  # Mapping of strings to parser tokens.

  PUNCTUATION = {
    '='   => :tEQL,     '&'   => :tAMPER2,  '|'   => :tPIPE,
    '!'   => :tBANG,    '^'   => :tCARET,   '+'   => :tPLUS,
    '-'   => :tMINUS,   '*'   => :tSTAR2,   '/'   => :tDIVIDE,
    '%'   => :tPERCENT, '~'   => :tTILDE,   ','   => :tCOMMA,
    ';'   => :tSEMI,    '.'   => :tDOT,     '..'  => :tDOT2,
    '...' => :tDOT3,    '['   => :tLBRACK2, ']'   => :tRBRACK,
    '('   => :tLPAREN2, ')'   => :tRPAREN,  '?'   => :tEH,
    ':'   => :tCOLON,   '&&'  => :tANDOP,   '||'  => :tOROP,
    '-@'  => :tUMINUS,  '+@'  => :tUPLUS,   '~@'  => :tTILDE,
    '**'  => :tPOW,     '->'  => :tLAMBDA,  '=~'  => :tMATCH,
    '!~'  => :tNMATCH,  '=='  => :tEQ,      '!='  => :tNEQ,
    '>'   => :tGT,      '>>'  => :tRSHFT,   '>='  => :tGEQ,
    '<'   => :tLT,      '<<'  => :tLSHFT,   '<='  => :tLEQ,
    '=>'  => :tASSOC,   '::'  => :tCOLON2,  '===' => :tEQQ,
    '<=>' => :tCMP,     '[]'  => :tAREF,    '[]=' => :tASET,
    '{'   => :tLCURLY,  '}'   => :tRCURLY,  '`'   => :tBACK_REF2,
    '!@'  => :tBANG,    '&.'  => :tANDDOT, '.:'  => :tMETHREF,
  }

  PUNCTUATION_BEGIN = {
    '&'   => :tAMPER,   '*'   => :tSTAR,    '**'  => :tDSTAR,
    '+'   => :tUPLUS,   '-'   => :tUMINUS,  '::'  => :tCOLON3,
    '('   => :tLPAREN,  '{'   => :tLBRACE,  '['   => :tLBRACK,
  }

  KEYWORDS = {
    'if'     => :kIF_MOD,      'unless'   => :kUNLESS_MOD,
    'while'  => :kWHILE_MOD,   'until'    => :kUNTIL_MOD,
    'rescue' => :kRESCUE_MOD,  'defined?' => :kDEFINED,
    'BEGIN'  => :klBEGIN,      'END'      => :klEND,
  }

  KEYWORDS_BEGIN = {
    'if'     => :kIF,          'unless'   => :kUNLESS,
    'while'  => :kWHILE,       'until'    => :kUNTIL,
    'rescue' => :kRESCUE,      'defined?' => :kDEFINED,
    'BEGIN'  => :klBEGIN,      'END'      => :klEND,
  }

  ESCAPE_WHITESPACE = {
    " "  => '\s', "\r" => '\r', "\n" => '\n', "\t" => '\t',
    "\v" => '\v', "\f" => '\f'
  }

  %w(class module def undef begin end then elsif else ensure case when
     for break next redo retry in do return yield super self nil true
     false and or not alias __FILE__ __LINE__ __ENCODING__).each do |keyword|
    KEYWORDS_BEGIN[keyword] = KEYWORDS[keyword] = :"k#{keyword.upcase}"
  end

  
# line 2100 "lib/parser/ruby-next/lexer.rl"

  # %
end
end
